/**
 *  @file      embeddedMoL.h
 *  @brief     Descriptors for embedded methods which allow adaptive stepsize control.
 *  @warning   This file was auto-generated from Mathematica. Do not edit.
 *  @authors   Mikica Kocic, Francesco Torsello
 *  @copyright GNU General Public License (GPLv3).
 */

#ifndef _EMBEDDED_MOL_H_INCLUDED
#define _EMBEDDED_MOL_H_INCLUDED

/** Runge-Kutta, Fehlberg's 4(5) method
 */
MoLDescriptor RKF45 = 
{
    "RKF45", 6, 5,
    { { 1., 0., 0., 0., 0., 0.},
      { 5./8., 3./8., 0., 0., 0., 0.},
      { 10469./2197., 17328./2197., -25600./2197., 0., 0., 0.},
      { 115./324., 95./54., -95744./29241., 252655./116964., 0., 0.},
      { 121./240., 33./10., -1408./285., 6591./1520., -11./5., 0.},
      { 641./1980., 232./165., -512./171., 2197./836., -56./55., 36./55. },
      // Alternative alpha[N-1]:
      { 11./36., 4./3., -512./171., 2197./836., -1., 8./11.}
    },
    { 1./4., 9./32., 7296./2197., -845./4104., -11./40., 2./55.},
    // Alternative beta:
    { 1./4., 9./32., 7296./2197., -845./4104., -11./40., 0.}
};

/** Runge-Kutta, Dormand-Prince from ode45.m
 */
MoLDescriptor RKDP45 = 
{
    "RKDP45", 7, 5,
    { { 1., 0., 0., 0., 0., 0., 0.},
      { 5./8., 3./8., 0., 0., 0., 0., 0.},
      { 175./27., 100./9., -448./27., 0., 0., 0., 0.},
      { 3551./6561., 7420./2187., -37376./6561., 2014./729., 0., 0., 0.},
      { 313397./335808., 424025./55968., -61400./5247., 96075./18656., -35721./37312., 0., 0.},
      { -563./3456., -575./252., 31400./10017., 325./1344., -7533./6784., 33./28., 0.},
      { 0., 0., 0., 0., 0., 0., 1. },
      // Alternative alpha[N-1]:
      { 8813./172800., 41./180., -4294./10017., 263./384., -137781./339200., 803./4200., 17./25.}
    },
    { 1./5., 9./40., 32./9., -212./729., -5103./18656., 11./84., 0.},
    // Alternative beta:
    { 1./5., 9./40., 32./9., -212./729., -5103./18656., 11./84., 1./40.}
};

/** Runge-Kutta, Dormand and Prince method, variant 1
 */
MoLDescriptor RK5DP_7M = 
{
    "RK5(4)7M", 7, 5,
    { { 1., 0., 0., 0., 0., 0., 0.},
      { 5./8., 3./8., 0., 0., 0., 0., 0.},
      { 175./27., 100./9., -448./27., 0., 0., 0., 0.},
      { 3551./6561., 7420./2187., -37376./6561., 2014./729., 0., 0., 0.},
      { 313397./335808., 424025./55968., -61400./5247., 96075./18656., -35721./37312., 0., 0.},
      { -563./3456., -575./252., 31400./10017., 325./1344., -7533./6784., 33./28., 0.},
      { 0., 0., 0., 0., 0., 0., 1. },
      // Alternative alpha[N-1]:
      { 8813./172800., 41./180., -4294./10017., 263./384., -137781./339200., 803./4200., 17./25.}
    },
    { 1./5., 9./40., 32./9., -212./729., -5103./18656., 11./84., 0.},
    // Alternative beta:
    { 1./5., 9./40., 32./9., -212./729., -5103./18656., 11./84., 1./40.}
};

/** Runge-Kutta, Dormand and Prince method, variant 2
 */
MoLDescriptor RK5DP_7S = 
{
    "RK5(4)7S", 7, 5,
    { { 1., 0., 0., 0., 0., 0., 0.},
      { 5./8., 3./8., 0., 0., 0., 0., 0.},
      { 22./27., 10./9., -25./27., 0., 0., 0., 0.},
      { 69./550., 39./110., -43./44., 1647./1100., 0., 0., 0.},
      { 727./175., 351./35., -258./7., 12393./175., -330./7., 0., 0.},
      { -757./2000., -261./400., 531./160., -26001./4000., 99./20., 21./80., 0.},
      { 0., 0., 0., 0., 0., 0., 1. },
      // Alternative alpha[N-1]:
      { 789./8750., 909./3500., -144./175., 37179./35000., -99./140., 3./200., 193./175.}
    },
    { 2./9., 1./4., 50./81., 9./110., 22./7., 7./80., 0.},
    // Alternative beta:
    { 2./9., 1./4., 50./81., 9./110., 22./7., 7./80., -1./50.}
};

/** Runge-Kutta, Dormand and Prince method, variant 3
 */
MoLDescriptor RK5DP_6M = 
{
    "RK5(4)6M", 6, 5,
    { { 1., 0., 0., 0., 0., 0.},
      { 5./8., 3./8., 0., 0., 0., 0.},
      { 2., 3., -4., 0., 0., 0.},
      { 22./2187., 55./729., -200./2187., 2200./2187., 0., 0.},
      { -322./495., -21./11., 400./99., 4375./99., -2457./55., 0.},
      { 5./504., 55./168., -125./693., -625./168., 189./44., 15./56. },
      // Alternative alpha[N-1]:
      { 23./180., 11./12., -950./693., -25./12., 162./55., 13./28.}
    },
    { 1./5., 9./40., 6./5., 55./729., 189./55., 5./56.},
    // Alternative beta:
    { 1./5., 9./40., 6./5., 55./729., 189./55., 1./20.}
};

#endif // _EMBEDDED_MOL_H_INCLUDED
