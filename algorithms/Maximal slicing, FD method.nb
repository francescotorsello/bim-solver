(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    306656,       6699]
NotebookOptionsPosition[    297125,       6423]
NotebookOutlinePosition[    300240,       6491]
CellTagsIndexPosition[    300197,       6488]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Prelude: Finite difference and derivative approximations", "Section",
 CellChangeTimes->{{3.741961558822798*^9, 3.74196156598321*^9}, {
  3.7427240103331976`*^9, 3.742724012205201*^9}, {3.7427257387442336`*^9, 
  3.742725743923443*^9}, {3.7427281860057325`*^9, 3.742728205427767*^9}, {
  3.7430620719974174`*^9, 3.7430620751486235`*^9}}],

Cell[TextData[{
 "See: ",
 ButtonBox["wiki/Finite_difference_coefficient",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Finite_difference_coefficient"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Finite_difference_coefficient"]
}], "Text",
 CellChangeTimes->{{3.741960979986379*^9, 3.741961015759642*^9}, {
  3.741961570632018*^9, 3.7419615709596186`*^9}}],

Cell["In the following: ", "Text",
 CellChangeTimes->{{3.74196398532446*^9, 3.7419640358061485`*^9}}],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  FormBox["s", TraditionalForm]]],
 " is the stencil, e.g., {-3,-2,-1,0,+1}, "
}], "Text",
 CellChangeTimes->{{3.74196398532446*^9, 3.7419640422333603`*^9}, 
   3.742464009931966*^9}],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 " is the order of the derivative, where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "\[LessEqual]", 
    RowBox[{"len", "(", "s", ")"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.74196398532446*^9, 3.741964039706156*^9}, {
  3.7419641176126924`*^9, 3.7419641377211275`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fdCoefficients", "[", 
   RowBox[{"d_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Inverse", "[", "\[IndentingNewLine]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "@", "s"}]}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox["s", "i"], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "@", "s"}], "-", "1"}]}], "}"}]}], "]"}]}], 
     "]"}], "]"}], ".", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"d", "\[Equal]", "i"}], ",", 
       RowBox[{"d", "!"}], ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{
        RowBox[{"Length", "@", "s"}], "-", "1"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.74196029126077*^9, 3.741960340400856*^9}, {
  3.74196041705939*^9, 3.7419604598658657`*^9}, {3.741960495745929*^9, 
  3.741960622418151*^9}, {3.7419606600766172`*^9, 3.741960666488229*^9}, {
  3.74196082676291*^9, 3.741960919380273*^9}, {3.7419639922352724`*^9, 
  3.7419639953240776`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDerivative", "[", 
   RowBox[{"f_", ",", "var_", ",", "d_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"f", "/@", 
      RowBox[{"(", 
       RowBox[{"var", "+", "s"}], ")"}]}], ")"}], 
    RowBox[{"fdCoefficients", "[", 
     RowBox[{"d", ",", "s"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7419606242121544`*^9, 3.7419606397185817`*^9}, {
  3.741961037835681*^9, 3.7419610659937305`*^9}, {3.741961134621251*^9, 
  3.7419614035813236`*^9}, {3.7427241684248753`*^9, 3.7427241874569087`*^9}}],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.741961583986642*^9, 3.7419615846262426`*^9}, {
  3.74196393984838*^9, 3.741963959147614*^9}, {3.7430620867082434`*^9, 
  3.743062091045051*^9}}],

Cell["Second order in accuarcy:", "Text",
 CellChangeTimes->{{3.7424639624922824`*^9, 3.7424639665794897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"fdDerivative", "[", 
      RowBox[{"f", ",", "n", ",", "i", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], "//", "Echo"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.74196137284927*^9, 3.7419614184325495`*^9}, {
  3.741964074665817*^9, 3.741964105756672*^9}, {3.7419641557547593`*^9, 
  3.741964179576001*^9}, {3.74272417673969*^9, 3.7427241829485006`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "n", "]"}]], "Echo",
 CellChangeTimes->{3.742894330784083*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.742894330799683*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}], "]"}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"f", "[", "n", "]"}]}], "+", 
  RowBox[{"f", "[", 
   RowBox[{"1", "+", "n"}], "]"}]}]], "Echo",
 CellChangeTimes->{3.742894330799683*^9}],

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{3.742894330815283*^9}]
}, Open  ]]
}, Open  ]],

Cell["Fourth order in accuarcy:", "Text",
 CellChangeTimes->{{3.7424639624922824`*^9, 3.7424639715246983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fdCoefficients", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fdCoefficients", "[", 
  RowBox[{"2", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7419606242121544`*^9, 3.7419606397185817`*^9}, {
  3.742463930200226*^9, 3.7424639421186466`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "12"], ",", 
   RowBox[{"-", 
    FractionBox["2", "3"]}], ",", "0", ",", 
   FractionBox["2", "3"], ",", 
   RowBox[{"-", 
    FractionBox["1", "12"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7424639371422377`*^9, 3.742463942493047*^9}, 
   3.742723849075714*^9, 3.7427240650746937`*^9, 3.7427257638290777`*^9, 
   3.7427265073039837`*^9, 3.742727961209338*^9, 3.742728216363386*^9, 
   3.7427284571664095`*^9, 3.7427287517261267`*^9, 3.742730315711874*^9, 
   3.7427310447496834`*^9, 3.7427363638889217`*^9, 3.74274396792192*^9, 
   3.7427446709693546`*^9, 3.7427519245377007`*^9, 3.7428247952437897`*^9, 
   3.742879200539613*^9, {3.7428943029068336`*^9, 3.742894330830883*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "12"]}], ",", 
   FractionBox["4", "3"], ",", 
   RowBox[{"-", 
    FractionBox["5", "2"]}], ",", 
   FractionBox["4", "3"], ",", 
   RowBox[{"-", 
    FractionBox["1", "12"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7424639371422377`*^9, 3.742463942493047*^9}, 
   3.742723849075714*^9, 3.7427240650746937`*^9, 3.7427257638290777`*^9, 
   3.7427265073039837`*^9, 3.742727961209338*^9, 3.742728216363386*^9, 
   3.7427284571664095`*^9, 3.7427287517261267`*^9, 3.742730315711874*^9, 
   3.7427310447496834`*^9, 3.7427363638889217`*^9, 3.74274396792192*^9, 
   3.7427446709693546`*^9, 3.7427519245377007`*^9, 3.7428247952437897`*^9, 
   3.742879200539613*^9, {3.7428943029068336`*^9, 3.742894330830883*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fdDerivative", "[", 
  RowBox[{"f", ",", "n", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fdDerivative", "[", 
  RowBox[{"f", ",", "n", ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7424642466993504`*^9, 3.7424642602713737`*^9}, {
  3.7427241953193226`*^9, 3.7427242089225464`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7424642608953753`*^9, 3.742723849075714*^9, 3.742724065090294*^9, 
   3.742724209187747*^9, 3.742725763844678*^9, 3.742726507319584*^9, 
   3.742727961209338*^9, 3.742728216363386*^9, 3.742728457182009*^9, 
   3.742728751741727*^9, 3.7427303157274737`*^9, 3.742731044765283*^9, 
   3.742736363904522*^9, 3.74274396793752*^9, 3.742744670984955*^9, 
   3.742751924553301*^9, 3.7428247952437897`*^9, 3.742879200555213*^9, {
   3.7428943029068336`*^9, 3.742894330830883*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "12"]}], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"f", "[", "n", "]"}]}], "2"], "+", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7424642608953753`*^9, 3.742723849075714*^9, 3.742724065090294*^9, 
   3.742724209187747*^9, 3.742725763844678*^9, 3.742726507319584*^9, 
   3.742727961209338*^9, 3.742728216363386*^9, 3.742728457182009*^9, 
   3.742728751741727*^9, 3.7427303157274737`*^9, 3.742731044765283*^9, 
   3.742736363904522*^9, 3.74274396793752*^9, 3.742744670984955*^9, 
   3.742751924553301*^9, 3.7428247952437897`*^9, 3.742879200555213*^9, {
   3.7428943029068336`*^9, 3.742894330830883*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fdCoefficients", "[", 
  RowBox[{"4", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7419606242121544`*^9, 3.7419606397185817`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.7419606406077833`*^9, 3.74196066144942*^9}, {
   3.741960879709403*^9, 3.741960921720277*^9}, 3.741966311869524*^9, 
   3.7419676741605167`*^9, 3.7419705578383074`*^9, 3.742463901823776*^9, 
   3.7427238490913143`*^9, 3.742724065105894*^9, 3.742725763844678*^9, 
   3.742726507319584*^9, 3.742727961224938*^9, 3.7427282163789864`*^9, 
   3.742728457182009*^9, 3.742728751741727*^9, 3.7427303157274737`*^9, 
   3.742731044765283*^9, 3.742736363904522*^9, 3.74274396796872*^9, 
   3.742744670984955*^9, 3.742751924553301*^9, 3.74282479525939*^9, 
   3.742879200570813*^9, {3.742894302922434*^9, 3.742894330846483*^9}}]
}, Open  ]],

Cell["Forward and backward differences:", "Text",
 CellChangeTimes->{{3.7424639624922824`*^9, 3.7424639902759314`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fdDerivative", "[", 
  RowBox[{"f", ",", "n", ",", "3", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.74196137284927*^9, 3.7419614184325495`*^9}, {
  3.7427242135557547`*^9, 3.7427242180329623`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"17", " ", 
     RowBox[{"f", "[", "n", "]"}]}], "4"]}], "+", 
  RowBox[{
   FractionBox["71", "4"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["59", "2"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["49", "2"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"3", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["41", "4"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"4", "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["7", "4"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"5", "+", "n"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7419613874820957`*^9, 3.7419614187601504`*^9}, 
   3.741966311900724*^9, 3.741967674191717*^9, 3.741970557869508*^9, 
   3.742463901823776*^9, 3.7427238491069145`*^9, 3.742724065105894*^9, 
   3.742725763860278*^9, 3.742726507335184*^9, 3.742727961224938*^9, 
   3.7427282163789864`*^9, 3.742728457197609*^9, 3.7427287517573266`*^9, 
   3.742730315743074*^9, 3.7427310447808833`*^9, 3.742736363904522*^9, 
   3.74274396796872*^9, 3.742744671000555*^9, 3.742751924568901*^9, 
   3.74282479527499*^9, 3.742879200570813*^9, {3.742894302922434*^9, 
   3.742894330846483*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fdDerivative", "[", 
  RowBox[{"f", ",", "n", ",", "4", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7419614391493864`*^9, 3.7419614437981944`*^9}, {
  3.7419677212892*^9, 3.7419677255012074`*^9}, {3.7427242194837646`*^9, 
  3.7427242236645727`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["7", "2"]}], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "7"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["82", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "6"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["185", "2"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "5"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"176", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1219", "6"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"142", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["111", "2"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"28", " ", 
    RowBox[{"f", "[", "n", "]"}]}], "3"]}]], "Output",
 CellChangeTimes->{
  3.741961444203795*^9, 3.741966311931924*^9, 3.7419676742229176`*^9, 
   3.7419677258912077`*^9, 3.7419705578851075`*^9, 3.7424639018393755`*^9, 
   3.7427238491225147`*^9, 3.7427240651214943`*^9, 3.742724223960973*^9, 
   3.742725763860278*^9, 3.742726507335184*^9, 3.7427279612405376`*^9, 
   3.742728216394586*^9, 3.742728457197609*^9, 3.7427287517573266`*^9, 
   3.7427303157586737`*^9, 3.7427310447808833`*^9, 3.742736363920122*^9, 
   3.7427439679843197`*^9, 3.742744671016155*^9, 3.7427519245845013`*^9, 
   3.74282479527499*^9, 3.742879200586413*^9, {3.742894302938034*^9, 
   3.7428943308620834`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extrapolation", "Subsection",
 CellChangeTimes->{{3.7419615981358666`*^9, 3.7419615997582693`*^9}, {
   3.7419623009367013`*^9, 3.741962304821108*^9}, {3.7419639319079657`*^9, 
   3.741963933405569*^9}, 3.7419670495334196`*^9, 3.741967154803405*^9, {
   3.7419673183540916`*^9, 3.7419673204444957`*^9}, {3.7419679022963176`*^9, 
   3.741967904558322*^9}, {3.7419699922675905`*^9, 3.741969992735591*^9}, 
   3.742885052453289*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"With", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"derivativeOrder", "=", "1"}], ",", 
        RowBox[{"accuracy", "=", "4"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "0", ",", "1"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"fdDerivative", "[", 
           RowBox[{"f", ",", "n", ",", "i", ",", 
            RowBox[{"s", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "i"}], "-", "accuracy"}], ";;"}], 
             "\[RightDoubleBracket]"}]}], "]"}], "/", 
          RowBox[{"i", "!"}]}], "//", "Echo"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "derivativeOrder"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
    "Total"}], "//", "Expand"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"%", "\[Equal]", "0"}], ",", 
        RowBox[{"f", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], "]"}], "\[LeftDoubleBracket]", "1",
       "\[RightDoubleBracket]"}]}], "//", "Expand"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{
   RowBox[{"Rational", "[", 
    RowBox[{"p_", ",", "q_"}], "]"}], "\[RuleDelayed]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p", "<", "0"}], ",", "\"\< - \>\"", ",", "\"\< + \>\""}], 
     "]"}], "<>", 
    RowBox[{"ToString", "@", 
     RowBox[{"Abs", "@", "p"}]}], "<>", "\"\<./\>\"", "<>", 
    RowBox[{"ToString", "@", "q"}], "<>", 
    "\"\<.\>\""}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"List", "@@", "%"}], "/.", 
   RowBox[{"Times", "\[Rule]", "List"}]}], "//", 
  "Flatten"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"i_", "+", "n"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "0"}], ",", 
        RowBox[{"\"\< * f(m,n+\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<)\>\""}], ",", 
        RowBox[{"\"\< * f(m,n-\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"-", "i"}], "]"}], "<>", "\"\<)\>\""}], ",", "\"\<??\>\""}],
        "]"}]}], ",", 
     RowBox[{
      RowBox[{"f", "[", "n", "]"}], "\[Rule]", "\"\< * f(m,n)\>\""}], ",", 
     RowBox[{
      RowBox[{"i_", "?", "NumericQ"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "<", "0"}], ",", "\"\< - \>\"", ",", "\"\< + \>\""}], 
        "]"}], "<>", 
       RowBox[{"ToString", "@", 
        RowBox[{"Abs", "@", "i"}]}]}]}]}], "}"}]}], "/.", 
  RowBox[{"List", "\[Rule]", "StringJoin"}]}]}], "Input",
 CellChangeTimes->{{3.7419616914396305`*^9, 3.741961878608759*^9}, {
   3.7419619146604223`*^9, 3.7419619203076324`*^9}, {3.741961950541486*^9, 
   3.7419620320078287`*^9}, {3.741962081600316*^9, 3.7419622817954674`*^9}, {
   3.741962383039645*^9, 3.7419624133192987`*^9}, {3.741962455158572*^9, 
   3.7419625101330686`*^9}, {3.7419625528147435`*^9, 
   3.7419626130776496`*^9}, {3.741962728970253*^9, 3.7419627420274763`*^9}, {
   3.741962791073962*^9, 3.741962798983176*^9}, {3.7419628467972603`*^9, 
   3.741962848014062*^9}, {3.7419629519112444`*^9, 3.741963116009933*^9}, {
   3.7419632194693146`*^9, 3.741963412566454*^9}, {3.741963464609145*^9, 
   3.7419635554013047`*^9}, {3.7419635879897623`*^9, 
   3.7419636462246647`*^9}, {3.7419636767227182`*^9, 
   3.7419638503354225`*^9}, {3.7419638961683035`*^9, 
   3.7419639023303137`*^9}, {3.74196630374191*^9, 3.741966354410799*^9}, {
   3.74196705541463*^9, 3.7419670620290413`*^9}, {3.741967178312646*^9, 
   3.741967188639864*^9}, {3.7419673238453016`*^9, 3.741967464137348*^9}, {
   3.741967531623067*^9, 3.74196757349354*^9}, 3.7419677607104692`*^9, {
   3.741967793938527*^9, 3.7419678054357476`*^9}, {3.7419705845923543`*^9, 
   3.741970591627967*^9}, {3.741970652764474*^9, 3.741970653653676*^9}, {
   3.741971067009602*^9, 3.74197149289135*^9}, {3.7427242278141794`*^9, 
   3.7427242326657877`*^9}, {3.742879191117196*^9, 3.742879193550801*^9}, {
   3.742879235858075*^9, 3.7428792390716805`*^9}, {3.742879294935379*^9, 
   3.7428793226566277`*^9}, {3.742879353185881*^9, 3.7428793586458907`*^9}, {
   3.7428794056019735`*^9, 3.742879541010211*^9}, {3.742879578497077*^9, 
   3.742879583099085*^9}, {3.7428796150791407`*^9, 3.7428797530925837`*^9}, {
   3.7428797897058477`*^9, 3.742879846240347*^9}, {3.7428799441149187`*^9, 
   3.742879949652929*^9}, {3.7428801251582375`*^9, 3.7428801469046755`*^9}, {
   3.7428826086306*^9, 3.742882677457921*^9}, {3.742882738547628*^9, 
   3.7428828223041754`*^9}, {3.7428828692602577`*^9, 3.742882970098835*^9}, {
   3.742883012265709*^9, 3.742883052201779*^9}, {3.742883082871433*^9, 
   3.742883121731101*^9}, {3.742885064012909*^9, 3.742885088988553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "n", "]"}]], "Echo",
 CellChangeTimes->{3.7428943308620834`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"25", " ", 
    RowBox[{"f", "[", "n", "]"}]}], "12"]}]], "Echo",
 CellChangeTimes->{3.742894330877683*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"37", " ", 
    RowBox[{"f", "[", "n", "]"}]}], "12"]}]], "Output",
 CellChangeTimes->{{3.7428795235693803`*^9, 3.742879547749423*^9}, {
   3.7428795789494777`*^9, 3.7428795838166857`*^9}, {3.7428796159839425`*^9, 
   3.742879663033625*^9}, {3.742879697587686*^9, 3.7428797534357843`*^9}, {
   3.742879790329849*^9, 3.7428798476911497`*^9}, {3.7428799447701197`*^9, 
   3.7428799500897293`*^9}, {3.74288013236545*^9, 3.742880147247876*^9}, {
   3.742882639440654*^9, 3.742882678035122*^9}, {3.7428827389064283`*^9, 
   3.742882793147724*^9}, 3.742882840790208*^9, 3.7428828712258615`*^9, {
   3.7428829029407167`*^9, 3.742882922986752*^9}, 3.7428830525917797`*^9, {
   3.742883107004675*^9, 3.7428831221211014`*^9}, {3.7428850749017277`*^9, 
   3.7428851001737723`*^9}, {3.742894302969234*^9, 3.742894330877683*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\<\" + 1./4.\"\>", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"\<\" - 4./3.\"\>", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"\<\" + 37./12.\"\>", " ", 
   RowBox[{"f", "[", "n", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7428795235693803`*^9, 3.742879547749423*^9}, {
   3.7428795789494777`*^9, 3.7428795838166857`*^9}, {3.7428796159839425`*^9, 
   3.742879663033625*^9}, {3.742879697587686*^9, 3.7428797534357843`*^9}, {
   3.742879790329849*^9, 3.7428798476911497`*^9}, {3.7428799447701197`*^9, 
   3.7428799500897293`*^9}, {3.74288013236545*^9, 3.742880147247876*^9}, {
   3.742882639440654*^9, 3.742882678035122*^9}, {3.7428827389064283`*^9, 
   3.742882793147724*^9}, 3.742882840790208*^9, 3.7428828712258615`*^9, {
   3.7428829029407167`*^9, 3.742882922986752*^9}, 3.7428830525917797`*^9, {
   3.742883107004675*^9, 3.7428831221211014`*^9}, {3.7428850749017277`*^9, 
   3.7428851001737723`*^9}, {3.742894302969234*^9, 3.742894330877683*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\" + 1./4.\"\>", ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}], "]"}], ",", "\<\" - 4./3.\"\>", ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}], ",", "3", ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}], ",", 
   RowBox[{"-", "4"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}], ",", "\<\" + 37./12.\"\>", ",", 
   RowBox[{"f", "[", "n", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7428795235693803`*^9, 3.742879547749423*^9}, {
   3.7428795789494777`*^9, 3.7428795838166857`*^9}, {3.7428796159839425`*^9, 
   3.742879663033625*^9}, {3.742879697587686*^9, 3.7428797534357843`*^9}, {
   3.742879790329849*^9, 3.7428798476911497`*^9}, {3.7428799447701197`*^9, 
   3.7428799500897293`*^9}, {3.74288013236545*^9, 3.742880147247876*^9}, {
   3.742882639440654*^9, 3.742882678035122*^9}, {3.7428827389064283`*^9, 
   3.742882793147724*^9}, 3.742882840790208*^9, 3.7428828712258615`*^9, {
   3.7428829029407167`*^9, 3.742882922986752*^9}, 3.7428830525917797`*^9, {
   3.742883107004675*^9, 3.7428831221211014`*^9}, {3.7428850749017277`*^9, 
   3.7428851001737723`*^9}, {3.742894302969234*^9, 3.742894330877683*^9}}],

Cell[BoxData["\<\" + 1./4. * f(m,n-4) - 4./3. * f(m,n-3) + 3 * f(m,n-2) - 4 * \
f(m,n-1) + 37./12. * f(m,n)\"\>"], "Output",
 CellChangeTimes->{{3.7428795235693803`*^9, 3.742879547749423*^9}, {
   3.7428795789494777`*^9, 3.7428795838166857`*^9}, {3.7428796159839425`*^9, 
   3.742879663033625*^9}, {3.742879697587686*^9, 3.7428797534357843`*^9}, {
   3.742879790329849*^9, 3.7428798476911497`*^9}, {3.7428799447701197`*^9, 
   3.7428799500897293`*^9}, {3.74288013236545*^9, 3.742880147247876*^9}, {
   3.742882639440654*^9, 3.742882678035122*^9}, {3.7428827389064283`*^9, 
   3.742882793147724*^9}, 3.742882840790208*^9, 3.7428828712258615`*^9, {
   3.7428829029407167`*^9, 3.742882922986752*^9}, 3.7428830525917797`*^9, {
   3.742883107004675*^9, 3.7428831221211014`*^9}, {3.7428850749017277`*^9, 
   3.7428851001737723`*^9}, {3.742894302969234*^9, 3.742894330893283*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximal slicing in spherical symmetry", "Section",
 CellChangeTimes->{{3.741961558822798*^9, 3.74196156598321*^9}, {
  3.742303016622878*^9, 3.7423030232528896`*^9}, {3.74246517884404*^9, 
  3.7424652254413214`*^9}}],

Cell["\<\
Maximal slicing in spherical symmetry corresponds to solving an elliptic 1D \
PDE (i.e., an ODE with two BC),\
\>", "Text",
 CellChangeTimes->{{3.7424652150673037`*^9, 3.7424653352031145`*^9}, {
  3.7427256732553186`*^9, 3.7427256852517395`*^9}, {3.7427257201178007`*^9, 
  3.7427257203986015`*^9}, {3.743062195570235*^9, 3.743062201685446*^9}}],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["r", "2"]], 
     RowBox[{
      FractionBox["\[PartialD]", 
       RowBox[{"\[PartialD]", "r"}]], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["r", "2"], 
        RowBox[{
         FractionBox["\[PartialD]", 
          RowBox[{"\[PartialD]", "r"}]], "\[Alpha]"}]}], ")"}]}]}], "=", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"s", "(", "r", ")"}]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7424652150673037`*^9, 3.7424653268259*^9}, 
   3.743062174602798*^9}],

Cell["In particular, the source term reads:", "Text",
 CellChangeTimes->{{3.7424652150673037`*^9, 3.7424653497111397`*^9}, {
  3.7430621675515857`*^9, 3.743062172247194*^9}}],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"s", "(", "r", ")"}], "=", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["K", "1"], "2"], "+", 
      RowBox[{"2", 
       SuperscriptBox[
        SubscriptBox["K", "2"], "2"]}], "+", 
      RowBox[{
       SubscriptBox["\[Kappa]", "g"], "(", 
       RowBox[{"\[Rho]", "+", "J"}], ")"}]}]}]}], TraditionalForm]]],
 ",  where  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"J", "=", 
    RowBox[{
     SubscriptBox["J", "1"], "+", 
     RowBox[{"2", 
      SubscriptBox["J", "2"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.7424652150673037`*^9, 3.7424653514427433`*^9}, {
  3.743062130780321*^9, 3.743062160983974*^9}}],

Cell[TextData[{
 "The boundary conditions are Neumann\[CloseCurlyQuote]s on the left ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Alpha]", "\[Prime]"], "=", "0"}], ")"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and Dirichelt\[CloseCurlyQuote]s on the right ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[Alpha]", "=", "1"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". "
}], "Text",
 CellChangeTimes->{{3.743062218034274*^9, 3.7430622737605724`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Example: Gaussian ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "ADM"], TraditionalForm]]],
 " to be used for the maximal slicing"
}], "Subsubsection",
 CellChangeTimes->{{3.74230308059859*^9, 3.7423030898182063`*^9}, {
   3.742303561526636*^9, 3.7423035711518526`*^9}, {3.7424653603971586`*^9, 
   3.7424653678393717`*^9}, 3.742731087836959*^9, {3.742731292259718*^9, 
   3.742731298530929*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]GR", "[", 
    RowBox[{"r_", ",", "\[Lambda]_"}], "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"Erf", "[", 
      FractionBox["r", 
       RowBox[{
        SqrtBox["2"], " ", "\[Lambda]"}]], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "r"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckCapitalD]", "[", 
    RowBox[{"r_", ",", "\[Lambda]_"}], "]"}], ":=", " ", 
   RowBox[{"8", "\[Pi]", " ", 
    RowBox[{"\[Phi]GR", "[", 
     RowBox[{"r", ",", "\[Lambda]"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["r", "2"], 
       RowBox[{"2", 
        SuperscriptBox["\[Lambda]", "2"]}]]}], "]"}], 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "\[Lambda]"}], ")"}], "3"]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]ADM", "[", 
    RowBox[{"r_", ",", "\[Lambda]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[DoubleStruckCapitalD]", "[", 
     RowBox[{"r", ",", "\[Lambda]"}], "]"}], "/", 
    SuperscriptBox[
     RowBox[{"\[Phi]GR", "[", 
      RowBox[{"r", ",", "\[Lambda]"}], "]"}], "6"]}]}], ";"}]}], "Input",
 CellChangeTimes->{3.7427310922829666`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Rho]ADM", "[", 
    RowBox[{"r", ",", "3"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.742303611665124*^9, 3.742303634144764*^9}, 
   3.742303675016835*^9, 3.7427310601937103`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], CapForm[
    "Butt"], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[1, 1000000], 20}, {1.1668065868422666`*^-11, 
     0.03165873943998701}}, {{1.*^-6, 20}, {1.1668065868422666`*^-11, 
     0.03165873943998701}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7423036071879163`*^9, 3.742303634519164*^9}, 
   3.742303675469236*^9, 3.7423037901294374`*^9, 3.742304232597015*^9, 
   3.742465056009424*^9, 3.7424651694840236`*^9, 3.7427198769095373`*^9, 
   3.7427240653710947`*^9, 3.7427257773543015`*^9, 3.742726507491184*^9, 
   3.7427279613965387`*^9, 3.7427282165505867`*^9, 3.7427284573692093`*^9, 
   3.7427287519289265`*^9, 3.742730315945874*^9, {3.7427310450460835`*^9, 
   3.7427310611453123`*^9}, 3.7427363642009225`*^9, 3.7427439681559205`*^9, 
   3.7427446712033553`*^9, 3.7427519247561016`*^9, 3.7428247955245905`*^9, 
   3.742879200836014*^9, {3.7428943031720343`*^9, 3.742894330986883*^9}}]
}, Open  ]],

Cell[TextData[{
 "Find the maximal slicing for the example ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "ADM"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ","
}], "Text",
 CellChangeTimes->{{3.74230308059859*^9, 3.7423030983982215`*^9}, {
   3.742303522120967*^9, 3.742303572930256*^9}, 3.7423036056435137`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"s", ",", "sol"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", "r_", "]"}], ":=", 
     RowBox[{"\[Rho]ADM", "[", 
      RowBox[{"r", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Alpha]sol", "=", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Alpha]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " "}], "r"], 
            RowBox[{
             SuperscriptBox["\[Alpha]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}]}], "\[Equal]", " ", 
          RowBox[{
           RowBox[{"\[Alpha]", "[", "r", "]"}], 
           RowBox[{"s", "[", "r", "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Alpha]", "'"}], "[", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]], "]"}], "\[Equal]", "3"}], ",", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", "30", "]"}], "\[Equal]", "1"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[Alpha]", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], ",", "60"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"\[Alpha]sol", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]], ",", "20"}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7423035083617425`*^9, 3.7423035146173534`*^9}, {
  3.7423035800594683`*^9, 3.7423035926798906`*^9}, {3.742303638403571*^9, 
  3.7423036618036118`*^9}, {3.742731053064498*^9, 3.7427310643433175`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], CapForm[
    "Butt"], LineBox[CompressedData["
1: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
QGLr9hSdx/4/eACfHA==
     "]]}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.76},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[1, 1000000], 20}, {0.768302991105818, 0.9819820899796827}}, {{
     1.*^-6, 20}, {0.768302991105818, 0.9819820899796827}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7423030997398233`*^9, 3.742303413919177*^9, 3.742303481732496*^9, 
   3.742303517612559*^9, {3.7423035778598647`*^9, 3.7423035931478915`*^9}, {
   3.742303639916774*^9, 3.742303662318413*^9}, 3.742303790269838*^9, 
   3.7423042327374153`*^9, 3.742465056149824*^9, 3.742465169608824*^9, 
   3.7427198770499372`*^9, 3.7427240655114946`*^9, 3.742725777494702*^9, 
   3.742726507631584*^9, 3.7427279615369387`*^9, 3.7427282166909866`*^9, 
   3.74272845749401*^9, 3.742728752053727*^9, 3.7427303160706744`*^9, {
   3.742731045217684*^9, 3.7427310648737183`*^9}, 3.742736364356923*^9, 
   3.7427439682963204`*^9, 3.7427446713593554`*^9, 3.7427519248965015`*^9, 
   3.742824795696191*^9, 3.7428792009764137`*^9, {3.7428943033436346`*^9, 
   3.742894331111684*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The linear finite-difference algorithm (2nd order in accuarcy)\
\>", "Section",
 CellChangeTimes->{{3.7423036826608486`*^9, 3.7423037508797684`*^9}, {
  3.7424653842974005`*^9, 3.7424653908962126`*^9}, {3.7424654242022705`*^9, 
  3.7424654757915616`*^9}, {3.742724099488354*^9, 3.7427241029515605`*^9}}],

Cell["\<\
Here we verify the verification of Algorithm 11.3 from Burden & Faires (2016) \
Numerical Analysis.
(see Section \[OpenCurlyDoubleQuote]Finite-Difference Methods for Linear \
Problems\[CloseCurlyDoubleQuote] on p. 700)\
\>", "Text",
 CellChangeTimes->{{3.7423036826608486`*^9, 3.7423037508797684`*^9}, {
  3.7424653842974005`*^9, 3.7424653908962126`*^9}, {3.742465439693098*^9, 
  3.7424654462139096`*^9}, {3.7427279951705976`*^9, 3.74272802482625*^9}, {
  3.742728271588483*^9, 3.7427282745836887`*^9}}],

Cell["The differential equation we want to solve reads:", "Text",
 CellChangeTimes->{{3.7427252104005055`*^9, 3.7427252118825083`*^9}, {
  3.7427256028211946`*^9, 3.7427256455808697`*^9}, {3.7427256993073645`*^9, 
  3.7427257073257785`*^9}, {3.7427280372906713`*^9, 3.742728039755476*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DE", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"P", "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Q", "[", "x", "]"}], 
     RowBox[{"y", "[", "x", "]"}]}], "+", 
    RowBox[{"R", "[", "x", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.742303196257193*^9}, {
   3.74272519018287*^9, 3.742725233535346*^9}, {3.74272529821306*^9, 
   3.742725316496292*^9}, {3.742725420643075*^9, 3.7427254286458893`*^9}, {
   3.7427256003095903`*^9, 3.7427256283428397`*^9}, {3.7427257083709803`*^9, 
   3.7427257085269804`*^9}, {3.742726745353802*^9, 3.742726757755824*^9}, 
   3.742727010446068*^9, {3.742727119334259*^9, 3.742727132734683*^9}, {
   3.7427271843873734`*^9, 3.7427272077250147`*^9}, {3.742727759000783*^9, 
   3.7427277600615845`*^9}, {3.7427280451842856`*^9, 3.7427280945583725`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fdD", "=", "1"}], ";", 
   RowBox[{"fdG", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "required", " ", "accuracy", " ", "specified", " ", "by", " ", 
    "the", " ", "finite", " ", "difference", " ", "depth"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.742303196257193*^9}, {
   3.74272519018287*^9, 3.742725233535346*^9}, {3.74272529821306*^9, 
   3.742725316496292*^9}, {3.742725420643075*^9, 3.7427254286458893`*^9}, {
   3.7427256003095903`*^9, 3.7427256283428397`*^9}, {3.7427257083709803`*^9, 
   3.7427257085269804`*^9}, {3.742726745353802*^9, 3.742726757755824*^9}, 
   3.742727010446068*^9, {3.742727119334259*^9, 3.742727132734683*^9}, {
   3.7427271843873734`*^9, 3.7427272077250147`*^9}, {3.742727759000783*^9, 
   3.7427277600615845`*^9}, {3.7427280451842856`*^9, 3.742728097241577*^9}}],

Cell[CellGroupData[{

Cell["The finite differences", "Subsubsection",
 CellChangeTimes->{{3.7427270550777464`*^9, 3.742727059289754*^9}}],

Cell["\<\
Convert DE to finite difference equation using central FD derivatives:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
  3.74272626616556*^9, 3.742726305205629*^9}, {3.742726353128913*^9, 
  3.7427263666229367`*^9}, {3.742726400272196*^9, 3.7427264115354156`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "fdD"}], ",", "fdD", ",", "1"}], "]"}]}], 
             "]"}]}], "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "fdD"}], ",", "fdD", ",", "1"}], "]"}]}], 
             "]"}]}], "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723263928887*^9}, {
   3.742724573043786*^9, 3.742724591904219*^9}, {3.742724783426756*^9, 
   3.742724799104783*^9}, {3.7427257103053837`*^9, 3.7427257113817854`*^9}, {
   3.7427259295013685`*^9, 3.7427259799830575`*^9}, {3.742726643056422*^9, 
   3.7427266451156263`*^9}, {3.7427267382401896`*^9, 3.742726743981*^9}, 
   3.742727195525793*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7428943311740837`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}], "]"}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"y", "[", "n", "]"}]}], "+", 
  RowBox[{"y", "[", 
   RowBox[{"1", "+", "n"}], "]"}]}]], "Echo",
 CellChangeTimes->{3.742894331189684*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "-", 
  SubscriptBox["w", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
  RowBox[{"2", " ", 
   SubscriptBox["w", "n"]}], "+", 
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["Q", "n"], " ", 
   SubscriptBox["w", "n"]}], "-", 
  SubscriptBox["w", 
   RowBox[{"1", "+", "n"}]], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.7428943312052836`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Convert DE to  finite difference equation using forward FD derivatives on the \
left boundary:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
  3.74272626616556*^9, 3.7427264260434413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE$L", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}], "]"}]}], 
           "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}], "]"}]}], 
           "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723411801546*^9}, {
   3.742724485995633*^9, 3.7427245128900805`*^9}, {3.742724613915858*^9, 
   3.7427246231666737`*^9}, {3.7427253765417976`*^9, 3.742725380192204*^9}, {
   3.742725712239787*^9, 3.742725713347389*^9}, {3.7427259279725657`*^9, 
   3.7427259595626216`*^9}, {3.7427260475935764`*^9, 3.742726109853286*^9}, 
   3.742726253077137*^9, {3.7427265212192087`*^9, 3.742726576287305*^9}, {
   3.7427266375174127`*^9, 3.74272664171482*^9}, {3.742727157492926*^9, 
   3.74272715956773*^9}, 3.7427271975849967`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7428943312052836`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}], "]"}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"y", "[", "n", "]"}]}], "+", 
  RowBox[{"y", "[", 
   RowBox[{"1", "+", "n"}], "]"}]}]], "Echo",
 CellChangeTimes->{3.7428943312208834`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "-", 
  SubscriptBox["w", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
  RowBox[{"2", " ", 
   SubscriptBox["w", "n"]}], "+", 
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["Q", "n"], " ", 
   SubscriptBox["w", "n"]}], "-", 
  SubscriptBox["w", 
   RowBox[{"1", "+", "n"}]], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.7428943312208834`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Convert DE to  finite difference equation using backward FD derivatives on \
the right boundary:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
   3.74272626616556*^9, 3.742726346686102*^9}, {3.7427263836269665`*^9, 
   3.742726392893383*^9}, 3.7427264285238457`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE$R", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"-", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}]}], 
             "]"}]}], "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"-", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}]}], 
             "]"}]}], "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723411801546*^9}, {
   3.742724485995633*^9, 3.7427245128900805`*^9}, {3.742724613915858*^9, 
   3.7427246412471056`*^9}, {3.742725385574213*^9, 3.742725386666215*^9}, {
   3.7427257140961905`*^9, 3.7427257152193923`*^9}, {3.742725937784983*^9, 
   3.7427259387989855`*^9}, {3.742726131178523*^9, 3.7427261593521724`*^9}, {
   3.7427265803589125`*^9, 3.742726600888548*^9}, {3.742726648500832*^9, 
   3.7427266491560335`*^9}, {3.7427271633741364`*^9, 3.74272716505894*^9}, 
   3.742727199987401*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7428943312364836`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}], "]"}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"y", "[", "n", "]"}]}], "+", 
  RowBox[{"y", "[", 
   RowBox[{"1", "+", "n"}], "]"}]}]], "Echo",
 CellChangeTimes->{3.742894331252084*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "-", 
  SubscriptBox["w", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
  RowBox[{"2", " ", 
   SubscriptBox["w", "n"]}], "+", 
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["Q", "n"], " ", 
   SubscriptBox["w", "n"]}], "-", 
  SubscriptBox["w", 
   RowBox[{"1", "+", "n"}]], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.742894331252084*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The linear system to solve", "Subsubsection",
 CellChangeTimes->{{3.7427270550777464`*^9, 3.742727077448186*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fdN", "=", "5"}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464296744238*^9}, {3.7424645744053783`*^9, 
   3.7424645760121813`*^9}, 3.742464642655498*^9, {3.7424648383734417`*^9, 
   3.7424648386386423`*^9}, 3.7424649382292175`*^9, 3.74246499105091*^9, {
   3.7427219739668207`*^9, 3.7427220181616983`*^9}, 3.7427221480329266`*^9, {
   3.7427222198398523`*^9, 3.742722220541854*^9}, {3.74272467216636*^9, 
   3.742724673741963*^9}, {3.7427248325356417`*^9, 3.7427248768241196`*^9}, {
   3.7427249466654425`*^9, 3.7427249479134445`*^9}, 3.742724980174301*^9, {
   3.7427250150101624`*^9, 3.742725077425872*^9}, 3.7427251102171297`*^9, {
   3.742725492824402*^9, 3.742725569389336*^9}, {3.742725716030594*^9, 
   3.7427257181677976`*^9}, 3.742726174515399*^9, {3.742726450363884*^9, 
   3.742726451112685*^9}, {3.7427274231145926`*^9, 3.742727533281986*^9}, {
   3.742727564981242*^9, 3.742727577866864*^9}, 3.7427277332451377`*^9, 
   3.742727816112483*^9, {3.7427278763129888`*^9, 3.742727880821397*^9}, {
   3.742727950289319*^9, 3.742727952707323*^9}, {3.7427294343697257`*^9, 
   3.7427294646337786`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fdSys", "=", 
   RowBox[{"Table", "[", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"we", " ", "assume", " ", "that", " ", 
       SubscriptBox["w", "n"], " ", "starts", " ", "at", " ", "n"}], " ", 
      "\[Equal]", " ", 
      RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", "\[Equal]", "0"}], ",", "fdDE$L", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"n", "\[Equal]", "fdN"}], ",", "fdDE$R", ",", "fdDE"}], 
           "]"}]}], "]"}], "/.", 
        RowBox[{
         SubscriptBox["w", "n_"], "\[RuleDelayed]", 
         SuperscriptBox["x", 
          RowBox[{"n", "+", "2"}]]}]}], ",", "x", ",", 
       RowBox[{"fdN", "+", "4"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "fdN"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
      "fdSys", "\[LeftDoubleBracket]", "All", "\[RightDoubleBracket]"}], "//",
       "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["w", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"fdN", "+", "1"}]}], "}"}]}], "]"}]}], "]"}], "}"}]}], "//",
       "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< \[Equal] \>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "//", 
      "MatrixForm"}]}], "}"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"fdSys", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", 
         RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "//", 
      "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["w", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "}"}]}], "//",
       "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< \[Equal] \>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"-", 
          RowBox[{"fdSys", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"-", 
           RowBox[{"fdSys", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
         SubscriptBox["w", "L"]}], "+", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"-", 
           RowBox[{"fdSys", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
         SubscriptBox["w", "R"]}]}], "/.", 
       RowBox[{
        SubscriptBox["w", "n_"], "\[RuleDelayed]", 
        RowBox[{"Style", "[", 
         RowBox[{
          SubscriptBox["w", "n"], ",", "Red"}], "]"}]}]}], "//", 
      "MatrixForm"}]}], "}"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464296744238*^9}, {3.7424645744053783`*^9, 
   3.7424645760121813`*^9}, 3.742464642655498*^9, {3.7424648383734417`*^9, 
   3.7424648386386423`*^9}, 3.7424649382292175`*^9, 3.74246499105091*^9, {
   3.7427219739668207`*^9, 3.7427220181616983`*^9}, 3.7427221480329266`*^9, {
   3.7427222198398523`*^9, 3.742722220541854*^9}, {3.74272467216636*^9, 
   3.742724673741963*^9}, {3.7427248325356417`*^9, 3.7427248768241196`*^9}, {
   3.7427249466654425`*^9, 3.7427249479134445`*^9}, 3.742724980174301*^9, {
   3.7427250150101624`*^9, 3.742725077425872*^9}, 3.7427251102171297`*^9, {
   3.742725492824402*^9, 3.742725569389336*^9}, {3.742725716030594*^9, 
   3.7427257181677976`*^9}, 3.742726174515399*^9, {3.742726450363884*^9, 
   3.742726451112685*^9}, {3.7427274231145926`*^9, 3.742727533281986*^9}, {
   3.742727564981242*^9, 3.742727577866864*^9}, 3.7427277332451377`*^9, 
   3.742727816112483*^9, {3.7427278763129888`*^9, 3.742727880821397*^9}, {
   3.742727950289319*^9, 3.742727952707323*^9}, {3.7427294343697257`*^9, 
   3.7427294646337786`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "0"]}], 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "0"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "0"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "0"]}], "2"]}], "0", "0", "0", "0", "0"}, {
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "1"]}], "0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "1"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "1"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "1"]}], "2"]}], "0", "0", "0", "0"}, {
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "2"]}], "0", "0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "2"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "2"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "2"]}], "2"]}], "0", "0", "0"}, {
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "3"]}], "0", "0", "0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "3"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "3"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "3"]}], "2"]}], "0", "0"}, {
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "4"]}], "0", "0", "0", "0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "4"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "4"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "4"]}], "2"]}], "0"}, {
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "5"]}], "0", "0", "0", "0", "0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "5"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "5"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "5"]}], "2"]}]}}, RowSpacings -> 1, 
       ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\"\[CenterDot]\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"1"}, {
         SubscriptBox["w", 
          RowBox[{"-", "1"}]]}, {
         SubscriptBox["w", "0"]}, {
         SubscriptBox["w", "1"]}, {
         SubscriptBox["w", "2"]}, {
         SubscriptBox["w", "3"]}, {
         SubscriptBox["w", "4"]}, {
         SubscriptBox["w", "5"]}, {
         SubscriptBox["w", "6"]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" \[Equal] \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{"0"}, {"0"}, {"0"}, {"0"}, {"0"}, {"0"}}, ColumnAlignments -> 
        Center, RowSpacings -> 1, ColumnAlignments -> Left], Column], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "Row",
  BaseStyle->Medium,
  DisplayFunction->(RowBox[{
     TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{
       RowBox[{"{", 
         TemplateSlotSequence[1, ","], "}"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7423032063660107`*^9, {3.742303304802184*^9, 3.7423033563602743`*^9}, {
   3.7423034107523713`*^9, 3.742303481748096*^9}, {3.7423037902854376`*^9, 
   3.7423038629659653`*^9}, 3.7423042327686152`*^9, 3.7424643908194866`*^9, 
   3.742464518978481*^9, {3.742464590489006*^9, 3.742464642983099*^9}, {
   3.742464676133157*^9, 3.742464696101192*^9}, {3.742464919867985*^9, 
   3.742464938775218*^9}, 3.7424649914565105`*^9, 3.7424650561966248`*^9, 
   3.742465169655624*^9, 3.742719877081137*^9, 3.7427211534481792`*^9, 
   3.7427211889538417`*^9, {3.7427212221361*^9, 3.742721230560115*^9}, 
   3.7427218552038116`*^9, 3.7427219892236476`*^9, 3.742722021827705*^9, {
   3.742722164256955*^9, 3.74272220701663*^9}, 3.742723480972068*^9, 
   3.7427240655738945`*^9, {3.7427247128980317`*^9, 3.742724747234692*^9}, 
   3.742724961828669*^9, 3.7427255774389505`*^9, 3.7427257857003164`*^9, 
   3.7427258229063816`*^9, 3.742725853934836*^9, 3.742726026611539*^9, 
   3.7427265077095847`*^9, {3.742727106807437*^9, 3.7427271350434866`*^9}, {
   3.742727168054145*^9, 3.742727210345819*^9}, 3.74272763218716*^9, 
   3.742727699938079*^9, {3.742727734243539*^9, 3.74272776325959*^9}, 
   3.742727816549284*^9, {3.7427278813049974`*^9, 3.7427278857354054`*^9}, {
   3.7427279529725237`*^9, 3.742727961661739*^9}, 3.742728216846987*^9, 
   3.7427284576188097`*^9, 3.742728752194127*^9, {3.7427294399545355`*^9, 
   3.742729467894184*^9}, 3.7427303162734747`*^9, 3.7427310454048843`*^9, 
   3.742736364544123*^9, 3.7427393150071387`*^9, 3.742743968514721*^9, 
   3.7427446715465555`*^9, 3.742751925068102*^9, 3.742824795898991*^9, 
   3.742879201179214*^9, {3.7428943035464354`*^9, 3.742894331298884*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "0"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "0"]}], "2"]}], "0", "0", "0", "0"}, {
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "1"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "1"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "1"]}], "2"]}], "0", "0", "0"}, {"0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "2"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "2"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "2"]}], "2"]}], "0", "0"}, {"0", "0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "3"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "3"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "3"]}], "2"]}], "0"}, {"0", "0", "0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "4"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "4"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "4"]}], "2"]}]}, {"0", "0", "0", "0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "5"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "5"]}]}]}}, RowSpacings -> 1, ColumnSpacings -> 
       1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\"\[CenterDot]\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         SubscriptBox["w", "0"]}, {
         SubscriptBox["w", "1"]}, {
         SubscriptBox["w", "2"]}, {
         SubscriptBox["w", "3"]}, {
         SubscriptBox["w", "4"]}, {
         SubscriptBox["w", "5"]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" \[Equal] \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{
          RowBox[{
            RowBox[{
              StyleBox[
               SubscriptBox["w", "L"], 
               RGBColor[1, 0, 0], StripOnInput -> False], " ", 
              RowBox[{"(", 
                RowBox[{"1", "+", 
                  FractionBox[
                   RowBox[{"h", " ", 
                    SubscriptBox["P", "0"]}], "2"]}], ")"}]}], "-", 
            RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SubscriptBox["R", "0"]}]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "1"]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "2"]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "3"]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "4"]}]}, {
          RowBox[{
            RowBox[{
              StyleBox[
               SubscriptBox["w", "R"], 
               RGBColor[1, 0, 0], StripOnInput -> False], " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", 
                  FractionBox[
                   RowBox[{"h", " ", 
                    SubscriptBox["P", "5"]}], "2"]}], ")"}]}], "-", 
            RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SubscriptBox["R", "5"]}]}]}}, RowSpacings -> 1, 
        ColumnAlignments -> Center, ColumnAlignments -> Left], Column], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "Row",
  BaseStyle->Medium,
  DisplayFunction->(RowBox[{
     TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{
       RowBox[{"{", 
         TemplateSlotSequence[1, ","], "}"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7423032063660107`*^9, {3.742303304802184*^9, 3.7423033563602743`*^9}, {
   3.7423034107523713`*^9, 3.742303481748096*^9}, {3.7423037902854376`*^9, 
   3.7423038629659653`*^9}, 3.7423042327686152`*^9, 3.7424643908194866`*^9, 
   3.742464518978481*^9, {3.742464590489006*^9, 3.742464642983099*^9}, {
   3.742464676133157*^9, 3.742464696101192*^9}, {3.742464919867985*^9, 
   3.742464938775218*^9}, 3.7424649914565105`*^9, 3.7424650561966248`*^9, 
   3.742465169655624*^9, 3.742719877081137*^9, 3.7427211534481792`*^9, 
   3.7427211889538417`*^9, {3.7427212221361*^9, 3.742721230560115*^9}, 
   3.7427218552038116`*^9, 3.7427219892236476`*^9, 3.742722021827705*^9, {
   3.742722164256955*^9, 3.74272220701663*^9}, 3.742723480972068*^9, 
   3.7427240655738945`*^9, {3.7427247128980317`*^9, 3.742724747234692*^9}, 
   3.742724961828669*^9, 3.7427255774389505`*^9, 3.7427257857003164`*^9, 
   3.7427258229063816`*^9, 3.742725853934836*^9, 3.742726026611539*^9, 
   3.7427265077095847`*^9, {3.742727106807437*^9, 3.7427271350434866`*^9}, {
   3.742727168054145*^9, 3.742727210345819*^9}, 3.74272763218716*^9, 
   3.742727699938079*^9, {3.742727734243539*^9, 3.74272776325959*^9}, 
   3.742727816549284*^9, {3.7427278813049974`*^9, 3.7427278857354054`*^9}, {
   3.7427279529725237`*^9, 3.742727961661739*^9}, 3.742728216846987*^9, 
   3.7427284576188097`*^9, 3.742728752194127*^9, {3.7427294399545355`*^9, 
   3.742729467894184*^9}, 3.7427303162734747`*^9, 3.7427310454048843`*^9, 
   3.742736364544123*^9, 3.7427393150071387`*^9, 3.742743968514721*^9, 
   3.7427446715465555`*^9, 3.742751925068102*^9, 3.742824795898991*^9, 
   3.742879201179214*^9, {3.7428943035464354`*^9, 3.7428943313144836`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neumann BC on the left", "Subsubsection",
 CellChangeTimes->{{3.7427311193490143`*^9, 3.742731120363016*^9}, {
   3.742731247175639*^9, 3.742731249219242*^9}, {3.742731334332992*^9, 
   3.7427313380925984`*^9}, 3.7427363893833666`*^9}],

Cell[TextData[{
 "Here we use the Neumann BC on the left with the vanishing derivative so \
that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["w", "L"], "\[Equal]", 
    SubscriptBox["w", 
     RowBox[{"-", "1"}]], "\[Equal]", 
    SubscriptBox["w", "1"]}], TraditionalForm]]],
 ". Hence, ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"h", " ", 
     SubscriptBox["P", "0"]}], "2"], TraditionalForm]]],
 " cancels out in the first raw."
}], "Text",
 CellChangeTimes->{{3.7423037572289796`*^9, 3.7423037758086123`*^9}, {
  3.742303902075234*^9, 3.742303957096531*^9}, {3.742728683538407*^9, 
  3.74272868564441*^9}, {3.74273639108377*^9, 3.7427363919885716`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fdSys", ":=", 
   RowBox[{"Table", "[", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"we", " ", "assume", " ", "that", " ", 
       SubscriptBox["w", "n"], " ", "starts", " ", "at", " ", "n"}], " ", 
      "\[Equal]", " ", 
      RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"n", "\[Equal]", "0"}], ",", "fdDE$L", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"n", "\[Equal]", "fdN"}], ",", "fdDE$R", ",", "fdDE"}], 
            "]"}]}], "]"}], "/.", 
         RowBox[{
          SubscriptBox["w", 
           RowBox[{"-", "1"}]], "\[Rule]", 
          SubscriptBox["w", "1"]}]}], "/.", 
        RowBox[{
         SubscriptBox["w", "n_"], "\[RuleDelayed]", 
         SuperscriptBox["x", 
          RowBox[{"n", "+", "2"}]]}]}], ",", "x", ",", 
       RowBox[{"fdN", "+", "4"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "fdN"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"fdSys", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", 
         RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "//", 
      "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["w", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "}"}]}], "//",
       "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< \[Equal] \>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"-", 
          RowBox[{"fdSys", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"-", 
           RowBox[{"fdSys", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
         SubscriptBox["w", "L"]}], "+", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"-", 
           RowBox[{"fdSys", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
         SubscriptBox["w", "R"]}]}], "/.", 
       RowBox[{
        SubscriptBox["w", "n_"], "\[RuleDelayed]", 
        RowBox[{"Style", "[", 
         RowBox[{
          SubscriptBox["w", "n"], ",", "Red"}], "]"}]}]}], "//", 
      "MatrixForm"}]}], "}"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423031149654503`*^9}, 
   3.7423031548391204`*^9, {3.742303209111616*^9, 3.7423032326364574`*^9}, {
   3.7423040224606457`*^9, 3.7423040433178825`*^9}, {3.742465152479994*^9, 
   3.742465163337613*^9}, 3.742721252836954*^9, {3.7427247551907063`*^9, 
   3.742724776344343*^9}, {3.7427249455578403`*^9, 3.7427249700966835`*^9}, {
   3.7427256980593624`*^9, 3.7427256982621627`*^9}, {3.742725862546051*^9, 
   3.742725864074854*^9}, {3.7427276144499288`*^9, 3.7427276293479548`*^9}, {
   3.7427276784412413`*^9, 3.7427276859604545`*^9}, 3.742727719952914*^9, {
   3.7427277853960295`*^9, 3.7427278106368732`*^9}, {3.742727956264129*^9, 
   3.7427279594153347`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "0"]}]}], 
         RowBox[{"-", "2"}], "0", "0", "0", "0"}, {
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "1"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "1"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "1"]}], "2"]}], "0", "0", "0"}, {"0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "2"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "2"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "2"]}], "2"]}], "0", "0"}, {"0", "0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "3"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "3"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "3"]}], "2"]}], "0"}, {"0", "0", "0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "4"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "4"]}]}], 
         RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "4"]}], "2"]}]}, {"0", "0", "0", "0", 
         RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
              SubscriptBox["P", "5"]}], "2"]}], 
         RowBox[{"2", "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["Q", "5"]}]}]}}, RowSpacings -> 1, ColumnSpacings -> 
       1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\"\[CenterDot]\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         SubscriptBox["w", "0"]}, {
         SubscriptBox["w", "1"]}, {
         SubscriptBox["w", "2"]}, {
         SubscriptBox["w", "3"]}, {
         SubscriptBox["w", "4"]}, {
         SubscriptBox["w", "5"]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" \[Equal] \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "0"]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "1"]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "2"]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "3"]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "4"]}]}, {
          RowBox[{
            RowBox[{
              StyleBox[
               SubscriptBox["w", "R"], 
               RGBColor[1, 0, 0], StripOnInput -> False], " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", 
                  FractionBox[
                   RowBox[{"h", " ", 
                    SubscriptBox["P", "5"]}], "2"]}], ")"}]}], "-", 
            RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SubscriptBox["R", "5"]}]}]}}, RowSpacings -> 1, 
        ColumnAlignments -> Center, ColumnAlignments -> Left], Column], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "Row",
  BaseStyle->Medium,
  DisplayFunction->(RowBox[{
     TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{
       RowBox[{"{", 
         TemplateSlotSequence[1, ","], "}"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7423040339110656`*^9, 3.7423040436766825`*^9}, 
   3.7423042328778152`*^9, 3.7424649503036385`*^9, 3.7424649975249214`*^9, 
   3.7424650562590246`*^9, {3.7424651551475983`*^9, 3.742465169702424*^9}, 
   3.742719877174738*^9, 3.7427211535261793`*^9, 3.7427211890630417`*^9, {
   3.7427212222141*^9, 3.7427212590145645`*^9}, 3.7427218553286123`*^9, 
   3.7427221643037553`*^9, 3.7427240656518946`*^9, 3.7427247688407297`*^9, {
   3.742724961906669*^9, 3.742724970361884*^9}, 3.7427257858095164`*^9, 
   3.7427258718904676`*^9, 3.742726029559944*^9, 3.742726507756385*^9, {
   3.7427271069946375`*^9, 3.742727135074687*^9}, {3.7427271681009445`*^9, 
   3.742727210392619*^9}, {3.742727629862756*^9, 3.7427276322495604`*^9}, {
   3.742727686303655*^9, 3.742727720296115*^9}, 3.7427277633063903`*^9, {
   3.7427277944128447`*^9, 3.7427278111672745`*^9}, 3.7427278857666054`*^9, 
   3.742727961708539*^9, 3.742728216909387*^9, 3.7427284576656103`*^9, {
   3.7427287489025216`*^9, 3.7427287522409277`*^9}, 3.742729467956585*^9, 
   3.7427303163358746`*^9, 3.7427310454828844`*^9, 3.7427363646221232`*^9, 
   3.7427393150383387`*^9, 3.742743968561521*^9, 3.7427446716089563`*^9, 
   3.7427519250993023`*^9, 3.7428247959769917`*^9, 3.7428792012416143`*^9, {
   3.742894303608835*^9, 3.7428943313612843`*^9}}]
}, Open  ]],

Cell["\<\
The above tridiagonal linear system should be solved using the Crout \
factorization (Algorithm 6.7).\
\>", "Text",
 CellChangeTimes->{{3.7423040688863273`*^9, 3.7423040797751465`*^9}, {
  3.742304128603232*^9, 3.7423041365748463`*^9}, {3.742304213299781*^9, 
  3.7423042300230103`*^9}, {3.742465085602676*^9, 3.742465097037496*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The linear finite-difference algorithm (4th order in accuarcy)\
\>", "Section",
 CellChangeTimes->{{3.7423036826608486`*^9, 3.7423037508797684`*^9}, {
  3.7424653842974005`*^9, 3.7424653908962126`*^9}, {3.7424654242022705`*^9, 
  3.7424654757915616`*^9}, {3.7427198635715137`*^9, 3.7427198645387154`*^9}, {
  3.7427240929363427`*^9, 3.742724108005969*^9}}],

Cell["The differential equation we are interested in:", "Text",
 CellChangeTimes->{{3.7427252104005055`*^9, 3.7427252118825083`*^9}, {
  3.7427256028211946`*^9, 3.7427256455808697`*^9}, {3.7427256993073645`*^9, 
  3.7427257073257785`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DE", "=", 
   RowBox[{
    RowBox[{"-", "2"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "-", 
      RowBox[{
       RowBox[{"P", "[", "x", "]"}], " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Q", "[", "x", "]"}], 
       RowBox[{"y", "[", "x", "]"}]}], "-", 
      RowBox[{"R", "[", "x", "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fdD", "=", "1"}], ";", 
   RowBox[{"fdG", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"FD", " ", "depths"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fdN", "=", "5"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.742303196257193*^9}, {
   3.74272519018287*^9, 3.742725233535346*^9}, {3.74272529821306*^9, 
   3.742725316496292*^9}, {3.742725420643075*^9, 3.7427254286458893`*^9}, {
   3.7427256003095903`*^9, 3.7427256283428397`*^9}, {3.7427257083709803`*^9, 
   3.7427257085269804`*^9}, {3.742726745353802*^9, 3.742726757755824*^9}, 
   3.74272723923707*^9, {3.742728108738797*^9, 3.7427281651328964`*^9}, {
   3.742728575882618*^9, 3.7427285812490273`*^9}, 3.7427372527137165`*^9, 
   3.742737411802796*^9, 3.742739440245159*^9, {3.742741845419792*^9, 
   3.7427418471981955`*^9}, 3.742744056935676*^9, 3.742744153187845*^9, {
   3.742744227927576*^9, 3.74274425282522*^9}, {3.742751807131895*^9, 
   3.7427518251967263`*^9}, 3.742751864368395*^9, {3.742824978372512*^9, 
   3.742825007076562*^9}, {3.742825207240514*^9, 3.742825208036115*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DE", "=", 
   RowBox[{"12", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "-", 
      RowBox[{
       RowBox[{"P", "[", "x", "]"}], " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Q", "[", "x", "]"}], 
       RowBox[{"y", "[", "x", "]"}]}], "-", 
      RowBox[{"R", "[", "x", "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fdD", "=", "2"}], ";", 
   RowBox[{"fdG", "=", "3"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"FD", " ", "depths"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fdN", "=", "50"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.742303196257193*^9}, {
   3.74272519018287*^9, 3.742725233535346*^9}, {3.74272529821306*^9, 
   3.742725316496292*^9}, {3.742725420643075*^9, 3.7427254286458893`*^9}, {
   3.7427256003095903`*^9, 3.7427256283428397`*^9}, {3.7427257083709803`*^9, 
   3.7427257085269804`*^9}, {3.742726745353802*^9, 3.742726757755824*^9}, 
   3.74272723923707*^9, {3.742728108738797*^9, 3.7427281651328964`*^9}, {
   3.742728575882618*^9, 3.7427285812490273`*^9}, 3.7427372527137165`*^9, 
   3.742737411802796*^9, 3.742739440245159*^9, {3.742741845419792*^9, 
   3.7427418471981955`*^9}, 3.742744056935676*^9, 3.742744153187845*^9, {
   3.742744227927576*^9, 3.74274425282522*^9}, {3.742751807131895*^9, 
   3.7427518251967263`*^9}, 3.742751864368395*^9, 3.7428944465518866`*^9}],

Cell["\<\
Use the following test equation to compare with Randall J. LeVeque (2006) \
Finite Difference Methods for Differential Equation, 10.1.1.111.1693:\
\>", "Text",
 CellChangeTimes->{{3.7427252104005055`*^9, 3.7427252118825083`*^9}, {
  3.7427256028211946`*^9, 3.7427256117444105`*^9}, {3.7427268446011763`*^9, 
  3.7427269287331247`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"False", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DE", "=", 
     RowBox[{"12", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "-", 
        RowBox[{"f", "[", "x", "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"fdD", "=", "2"}], ";", 
    RowBox[{"fdG", "=", "3"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"FD", " ", "depths"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"fdN", "=", "5"}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.742725709244582*^9, 3.7427257094005823`*^9}, {
   3.74272672683657*^9, 3.742726761765031*^9}, {3.742726941057146*^9, 
   3.742726956142372*^9}, {3.7427272600943065`*^9, 3.742727281871945*^9}, {
   3.74272813889365*^9, 3.7427281623872914`*^9}, {3.74272852608733*^9, 
   3.742728526617731*^9}, {3.7427374095251923`*^9, 3.742737410024393*^9}, 
   3.7427375782238884`*^9, 3.742737974729785*^9, {3.74273829626295*^9, 
   3.7427383036729627`*^9}, {3.7427389058184204`*^9, 3.742738906270821*^9}, {
   3.7427391708316855`*^9, 3.7427391713152866`*^9}, {3.742751802873087*^9, 
   3.742751862979993*^9}}],

Cell[CellGroupData[{

Cell["The finite differences", "Subsubsection",
 CellChangeTimes->{{3.7427270550777464`*^9, 3.742727059289754*^9}}],

Cell["\<\
Convert DE to finite difference equation using central FD derivatives:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
  3.74272626616556*^9, 3.742726305205629*^9}, {3.742726353128913*^9, 
  3.7427263666229367`*^9}, {3.742726400272196*^9, 3.7427264115354156`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "fdD"}], ",", "fdD", ",", "1"}], "]"}]}], 
             "]"}]}], "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "fdD"}], ",", "fdD", ",", "1"}], "]"}]}], 
             "]"}]}], "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723263928887*^9}, {
   3.742724573043786*^9, 3.742724591904219*^9}, {3.742724783426756*^9, 
   3.742724799104783*^9}, {3.7427257103053837`*^9, 3.7427257113817854`*^9}, {
   3.7427259295013685`*^9, 3.7427259799830575`*^9}, {3.742726643056422*^9, 
   3.7427266451156263`*^9}, {3.7427267382401896`*^9, 3.742726743981*^9}, 
   3.7427272193470345`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7428944523862963`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "12"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "2"], "+", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7428944524018965`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "12"}], " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "-", 
  SubscriptBox["w", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "n"}]], "-", 
  RowBox[{"h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]]}], "+", 
  RowBox[{"16", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
  RowBox[{"8", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "-", 
  RowBox[{"30", " ", 
   SubscriptBox["w", "n"]}], "-", 
  RowBox[{"12", " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["Q", "n"], " ", 
   SubscriptBox["w", "n"]}], "+", 
  RowBox[{"16", " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "-", 
  RowBox[{"8", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "-", 
  SubscriptBox["w", 
   RowBox[{"2", "+", "n"}]], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"2", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.7428944524018965`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Convert DE to  finite difference equation using forward FD derivatives on the \
left boundary:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
  3.74272626616556*^9, 3.7427264260434413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE$L", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}], "]"}]}], 
           "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}], "]"}]}], 
           "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723411801546*^9}, {
   3.742724485995633*^9, 3.7427245128900805`*^9}, {3.742724613915858*^9, 
   3.7427246231666737`*^9}, {3.7427253765417976`*^9, 3.742725380192204*^9}, {
   3.742725712239787*^9, 3.742725713347389*^9}, {3.7427259279725657`*^9, 
   3.7427259595626216`*^9}, {3.7427260475935764`*^9, 3.742726109853286*^9}, 
   3.742726253077137*^9, {3.7427265212192087`*^9, 3.742726576287305*^9}, {
   3.7427266375174127`*^9, 3.74272664171482*^9}, {3.7427272236526423`*^9, 
   3.742727246849883*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "4"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "6"], "+", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"3", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.742894452433097*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["11", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "3"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"3", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.742894452433097*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "12"}], " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "+", 
  RowBox[{"11", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
  RowBox[{"3", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "-", 
  RowBox[{"20", " ", 
   SubscriptBox["w", "n"]}], "+", 
  RowBox[{"10", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", "n"]}], "-", 
  RowBox[{"12", " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["Q", "n"], " ", 
   SubscriptBox["w", "n"]}], "+", 
  RowBox[{"6", " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "-", 
  RowBox[{"18", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "+", 
  RowBox[{"4", " ", 
   SubscriptBox["w", 
    RowBox[{"2", "+", "n"}]]}], "+", 
  RowBox[{"6", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"2", "+", "n"}]]}], "-", 
  SubscriptBox["w", 
   RowBox[{"3", "+", "n"}]], "-", 
  RowBox[{"h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"3", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.7428944524486966`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Convert DE to  finite difference equation using backward FD derivatives on \
the right boundary:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
   3.74272626616556*^9, 3.742726346686102*^9}, {3.7427263836269665`*^9, 
   3.742726392893383*^9}, 3.7427264285238457`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE$R", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"-", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}]}], 
             "]"}]}], "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"-", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}]}], 
             "]"}]}], "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723411801546*^9}, {
   3.742724485995633*^9, 3.7427245128900805`*^9}, {3.742724613915858*^9, 
   3.7427246412471056`*^9}, {3.742725385574213*^9, 3.742725386666215*^9}, {
   3.7427257140961905`*^9, 3.7427257152193923`*^9}, {3.742725937784983*^9, 
   3.7427259387989855`*^9}, {3.742726131178523*^9, 3.7427261593521724`*^9}, {
   3.7427265803589125`*^9, 3.742726600888548*^9}, {3.742726648500832*^9, 
   3.7427266491560335`*^9}, {3.7427272263046474`*^9, 
   3.7427272515142913`*^9}, {3.742737157132349*^9, 3.7427371866008005`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "12"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "6"], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7428944524798965`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "12"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "3"], "+", 
  RowBox[{
   FractionBox["11", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7428944524954967`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "12"}], " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "-", 
  SubscriptBox["w", 
   RowBox[{
    RowBox[{"-", "3"}], "+", "n"}]], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}]]}], "+", 
  RowBox[{"4", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]]}], "-", 
  RowBox[{"6", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]]}], "+", 
  RowBox[{"6", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
  RowBox[{"18", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "-", 
  RowBox[{"20", " ", 
   SubscriptBox["w", "n"]}], "-", 
  RowBox[{"10", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", "n"]}], "-", 
  RowBox[{"12", " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["Q", "n"], " ", 
   SubscriptBox["w", "n"]}], "+", 
  RowBox[{"11", " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "-", 
  RowBox[{"3", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.742894452511097*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["w", 
      RowBox[{"n", "+", "1"}]], "/.", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"fdDE$R", "\[Equal]", "0"}], ",", 
        SubscriptBox["w", 
         RowBox[{"n", "+", "1"}]]}], "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["R", "n_"], "\[RuleDelayed]", "0"}], ",", 
      RowBox[{
       SubscriptBox["P", "n_"], "\[RuleDelayed]", 
       RowBox[{"PP", "[", "n", "]"}]}], ",", 
      RowBox[{
       SubscriptBox["Q", "n_"], "\[RuleDelayed]", 
       RowBox[{"QQ", "[", "n", "]"}]}]}], "}"}]}], "/.", 
   RowBox[{
    SubscriptBox["w", "n_"], "\[RuleDelayed]", 
    RowBox[{"gAlp", "[", 
     RowBox[{"m", ",", "n"}], "]"}]}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "CForm"}]}], "Input",
 CellChangeTimes->{{3.742835978165125*^9, 3.7428360161700773`*^9}, {
  3.742836053079742*^9, 3.7428360944510145`*^9}, {3.742836148271109*^9, 
  3.7428362160688286`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"gAlp", "[", 
     RowBox[{"m", ",", 
      RowBox[{
       RowBox[{"-", "3"}], "+", "n"}]}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"h", " ", 
       RowBox[{"PP", "[", "n", "]"}]}]}], ")"}]}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"gAlp", "[", 
        RowBox[{"m", ",", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "n"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"3", " ", "h", " ", 
          RowBox[{"PP", "[", "n", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"gAlp", "[", 
        RowBox[{"m", ",", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"3", " ", "h", " ", 
          RowBox[{"PP", "[", "n", "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"gAlp", "[", 
        RowBox[{"m", ",", "n"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"10", "+", 
         RowBox[{"5", " ", "h", " ", 
          RowBox[{"PP", "[", "n", "]"}]}], "+", 
         RowBox[{"6", " ", 
          SuperscriptBox["h", "2"], " ", 
          RowBox[{"QQ", "[", "n", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  RowBox[{
   RowBox[{"-", "11"}], "+", 
   RowBox[{"3", " ", "h", " ", 
    RowBox[{"PP", "[", "n", "]"}]}]}]]], "Output",
 CellChangeTimes->{
  3.7428359812227306`*^9, 3.742836016528878*^9, {3.742836062845359*^9, 
   3.742836094794215*^9}, {3.7428361495815115`*^9, 3.742836216458829*^9}, 
   3.7428363505254645`*^9, 3.742879201444414*^9, {3.742894304092436*^9, 
   3.7428943315952845`*^9}, 3.742894452573497*^9}],

Cell["\<\
(gAlp(m,-3 + n)*(-1 + h*PP(n)) - 2*(gAlp(m,-2 + n)*(-2 + 3*h*PP(n)) - \
3*gAlp(m,-1 + n)*(1 + 3*h*PP(n)) + 
        gAlp(m,n)*(10 + 5*h*PP(n) + 6*Power(h,2)*QQ(n))))/(-11 + 3*h*PP(n))\
\>", "Output",
 CellChangeTimes->{
  3.7428359812227306`*^9, 3.742836016528878*^9, {3.742836062845359*^9, 
   3.742836094794215*^9}, {3.7428361495815115`*^9, 3.742836216458829*^9}, 
   3.7428363505254645`*^9, 3.742879201444414*^9, {3.742894304092436*^9, 
   3.7428943315952845`*^9}, 3.742894452573497*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The linear system to solve", "Subsubsection",
 CellChangeTimes->{{3.7427270550777464`*^9, 3.742727077448186*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fdSys", "=", 
   RowBox[{"Table", "[", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"we", " ", "assume", " ", "that", " ", 
       SubscriptBox["w", "n"], " ", "starts", " ", "at", " ", "n"}], " ", 
      "\[Equal]", " ", 
      RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", "\[Equal]", "0"}], ",", "fdDE$L", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"n", "\[Equal]", "fdN"}], ",", "fdDE$R", ",", "fdDE"}], 
           "]"}]}], "]"}], "/.", 
        RowBox[{
         SubscriptBox["w", "n_"], "\[RuleDelayed]", 
         SuperscriptBox["x", 
          RowBox[{"n", "+", "2"}]]}]}], ",", "x", ",", 
       RowBox[{"fdN", "+", "4"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "fdN"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"fdN", "\[LessEqual]", " ", "5"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
        "fdSys", "\[LeftDoubleBracket]", "All", "\[RightDoubleBracket]"}], "//",
         "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              SubscriptBox["w", "i"], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"-", "1"}], ",", 
                RowBox[{"fdN", "+", "1"}]}], "}"}]}], "]"}]}], "]"}], "}"}]}],
         "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
       "\"\< \[Equal] \>\"", ",", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "//", 
        "MatrixForm"}]}], "}"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"fdN", "\[LessEqual]", "5"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"fdSys", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"3", ";;", 
           RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "//", 
        "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["w", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "}"}]}], "//",
         "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< \[Equal] \>\"", 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{"-", 
            RowBox[{"fdSys", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
          "+", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{"-", 
             RowBox[{"fdSys", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
           SubscriptBox["w", "L"]}], "+", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{"-", 
             RowBox[{"fdSys", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", 
               RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
           SubscriptBox["w", "R"]}]}], "/.", 
         RowBox[{
          SubscriptBox["w", "n_"], "\[RuleDelayed]", 
          RowBox[{"Style", "[", 
           RowBox[{
            SubscriptBox["w", "n"], ",", "Red"}], "]"}]}]}], "//", 
        "MatrixForm"}]}], "}"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464296744238*^9}, {3.7424645744053783`*^9, 
   3.7424645760121813`*^9}, 3.742464642655498*^9, {3.7424648383734417`*^9, 
   3.7424648386386423`*^9}, 3.7424649382292175`*^9, 3.74246499105091*^9, {
   3.7427219739668207`*^9, 3.7427220181616983`*^9}, 3.7427221480329266`*^9, {
   3.7427222198398523`*^9, 3.742722220541854*^9}, {3.74272467216636*^9, 
   3.742724673741963*^9}, {3.7427248325356417`*^9, 3.7427248768241196`*^9}, {
   3.7427249466654425`*^9, 3.7427249479134445`*^9}, 3.742724980174301*^9, {
   3.7427250150101624`*^9, 3.742725077425872*^9}, 3.7427251102171297`*^9, {
   3.742725492824402*^9, 3.742725569389336*^9}, {3.742725716030594*^9, 
   3.7427257181677976`*^9}, 3.742726174515399*^9, {3.742726450363884*^9, 
   3.742726451112685*^9}, {3.7427274231145926`*^9, 3.742727533281986*^9}, {
   3.742727564981242*^9, 3.742727577866864*^9}, 3.742727824692498*^9, {
   3.7427278960626235`*^9, 3.742727908293045*^9}, {3.742727941709304*^9, 
   3.742727944361308*^9}, {3.7427293265267363`*^9, 3.7427293925928526`*^9}, {
   3.7427383132825794`*^9, 3.742738317619387*^9}, {3.7427517846678553`*^9, 
   3.7427517905802655`*^9}}],

Cell[TextData[{
 "The vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " can be evaluated using a linear equation solver for band-diagonal systems \
(see NR3, section 2.4.2 on pp. 58--61)."
}], "Text",
 CellChangeTimes->{{3.742730338612714*^9, 3.7427303630423565`*^9}, {
  3.7427304021638546`*^9, 3.7427305370260916`*^9}}],

Cell["If you selected the test DE, compare the results with:", "Text",
 CellChangeTimes->{{3.7427266884449024`*^9, 3.7427266977113185`*^9}, {
  3.7427267835582695`*^9, 3.742726787629876*^9}, {3.742726970853198*^9, 
  3.7427269745972047`*^9}}],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnXucVMW176uZ7kEZHg45QD5cQpSj+CFGc1AuihrPNb5OTBQ1EpMYfOA1
8YWPYHyeEB8YH2BCuIl4Eo5X8Bj8JIhilOQ45viIoET0QPDNcH2ggIiCMyLM
o3ffXVW7Z3r33rv27u7du2rt+X3/8CPdPd3VvWpVrV9VrVX7TLvstB/0Y4zN
2MP+z2nnXn30j3507rXfytr/+Nq1V54/jT811P7XjoGMFQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAoJmu1XefN45lJl3y21Wf6m4LAAAAAAAAAMRH
55//mfXw5flbdbcHAAAAAAAAAGJiyzSWu/BPrZs2vfnQ1KytePZ+qEt3k0Bh
11EskG/s1t06AAAA5rJuQOAE0v8vMbw/ZqgaqLdx6g2MD2jy+tENU191/j+/
8hC7vzbM2Fnzu1L3Z+1gQAEAAFAd0DsGQz0+gvEBST48ziVvNk+2O2zDlTX3
WOr+rB0MKAAAAKoDesdgqMdHMD6gSNcN/S527eas39fusY0P1Pq+1P1ZOxhQ
AAAAVAf0jsFQj49gfECRtc1j33Y9YC3iOTxlD1YOdX/WDgYUAAAA1QG9YzDU
4yOjjd/56PhFdf2At/e98aO6fkB6ePvo0Y/qbkMv+VkNN5Ql62za3+6y2fk1
vjF1f9aOHFDG3Trbh3s7dbcOAACAuWyc4zd3nBez3sEMVRX1Nk69Mdn47Tdl
91ld10/YMSXzL611/YS0kJ9vgP7tZfvBjA2+zaV4uq4RGr3GkgXU/Vk7ckAx
qKsAAAAgzfKY9Q5mqBiJzzj1xmDjt01nzU/X+TM2T2b7PFfnz0gF7cewzBXd
ulvRw4Zhdq/NLSh9yFrCe/KIt+rxcXT8WTsGDygAAAAIAr1jMHTiI3ONb8ud
IUuten8KBE80Vg1k/f+suxG9yGNnZ7o2IFftaT804G/1+Dg6/qwdcwcUAAAA
FIHeMRg68ZEW43+w5ILhrOGEW1crNgxsudN4T93lTqGw6XAInnDysxgbv7X+
n7N7/erH//CLWedOGcAyFyuuD31zKO+201yvEBqoPk5Hx5+1g9kEAABAnKRL
73x8qkgJ/tLUs4ocyv+d+UHpCu6akfZDDcc7L5jCw5sJm7Q1WQWd+EiD8Xfd
Z9sxc9g425Znvxv0oo6ZrOGajiSas2YUm7Q+iQ+izAfjWL+Z+bp/TOd5JfUB
LlCo4V3ncgd7xPWY0Dt71OUEJB1/1o4JswkAHtqmK1dQAADmki69E1QWqbRV
1l3e5+tzXL9m6MRHyRv/w4sZ2+eRT+2P/uMRbFJA/eDu+Vn2zU8SaY+1rImd
mMDWBWlacmzPlfX/mK1je107p7xL54ObDzjxYXf4Ipzuc3UpP0HHn7Vjwmzi
5f2Hbzw5y9ig71y/+BXlKorV+sC1x9hfYND35vz106Rap4lPV/7bhXzV6fjr
f/+O7rbUHV6v3rReGQFr3YTmFbobAYBu0qV32pfeOXv2rLPH9UQ7o867ffbs
2b99ufRF7/5m9k+P7Q2IRp31szl/MXPFhk58lLjx285nbNhL9v9sudwOQPpd
57uIb7UMZGNe9numDnRcndRWUkQiz3GJTYZdFzF2RFtN7YgUceZXPPjAnT89
TLh3pZk4+Tv4XylaWQN0/Fk7JswmZXT97cJsyRrZl+8KjO67npnKX9nwteH8
haN/neJlEGvDbSNKFhcu26i7QXXm9dGG9cpIdC4dybK/1d0KAHSTLr3j0HGV
HH6H/C6oNVbr5WLuGnyTep1OL3Tio6SN33UDk4W+dp4tLD3BdxNn48Rkknck
m+1P+4/EPi2UyHNccpPhxjGqm23C2xE94uR8/D/5iw7YVlkb20/ikeotdbEj
HX/WjkGzicM7fMbIfutns2df4aynDZ7zse8r3+evPGhhqz087Vh11QDG9n7I
zPW02tlyg/31Gibf++L7mza9+vAlA9KexCimG5N6ZRTya86xWw29A0Aq9Y5c
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
CpTSkot6h3q0ubbjjizb5zn3Y/lnl5bWevC/fafzPP72NI6zUfJn7Rg3oBRR
dWh5UtTHwI7PqQuH6sW5V5T1L1/S8egduZTke5OzvP9OmT9rFGk1phvoHQAE
adQ7qgNKXTf4XLO461z+G7iPPolYNeLSf70gFB8ZYHw38vhTWOIs7zDR7o2T
ZY+DqzxX04eEtFBXVFBRm94J+lOnLlHjPYrNlq4rItdgijTX5hc3sYkvlD24
66hSSSXTd0ZtLHuRCLCIHGej5M/aMW5AKaLq0HKQ8HlOFos0eh+ypVgGsnxA
6tE7PbUu5dqOn23EjnadCzXHSVqN6QZ6BwBBuvSOPFSk0jvP7+VXdeqDmw84
8WH3IC2kk+Z70wjFRwYY383WsSxC4iyfn6PNA/IWCveaZvd9V/TuH1XRh0RJ
hQg3/gVQm94JspXUO/0uUZly45jItQujzLXWkiY2aX35o++NLE19kvr1+LLs
ArnrVow8rGfPj3CfiD4I+bN2jBtQiqg6tNz58MkfdWqcac4HVeFs2vj85nKn
vHTxSN5X7DP2yKOyyvPkZpFSY5YBvQOAIF16R9ajVuidj09g//hGlHeSy8ma
7xEgFB8ZYHw34nrs0JmXr1RGqyYkkvzL3u+DccpaB6F9iMvz7F0RPtyfavWO
KKztexyFI/XOeGVJ9yVZNjxiGe0Ic631zEgfuWNr0dLdNHG6xBN8tJ/E371Y
b7HjzJD6FJoh5M/aMW5AKaLs0PI8l3fLVn4bkzc+nKw+n9/cqTFdkjsnVxma
1nnexKmh6PVlU0mpMcuA3gFAkC69I28WCU6X7JilPqfTiwikPIXcEoZQfGSA
8V3I6Ts0cVbsAgVF/qXIaj1l5Q9acuWVzV2E9iGeklJDhF5tfTZ56jNoX0nU
oVNP5vykxxkRTR1hrn3BV+5Yi12hhv/tO6sGspLLRt/5vNmhFiF/1o5pA0oP
yg7ND3oydoDnzlwxzpQfdzULmZ5vf7O5ZQMDr7RfNpi2fpH5ngMWR8Ci3ctl
Bmk1phvoHQAE6dI7cn0pMCEjv7gpMy3alToikIq6hl0vCMVHBhjfhewJoYmz
orRq+SGpIh+9+OKHxf+Xh7l7TrALOs9TC+KwPiQOTIRUkFNRrd6Rx++D9I60
pPKU3SvNrDHqmZXwufa1CZkpPnbqnlm6m+N/+46oJ94TiFnLslFVmB4I+bN2
TBtQelB36GcH+i6zyLyWYxUVD7UjdzMYm/Re2RN/H+zs+/TOnEIJ+GTNiU1Y
b36suaTVmG6gdwAQpEvv8GsQWWClXKtlIDtyc6T3Ednn2ds0F5wkFB+ZYPxS
pD45OkzcirPp/qKh8zcjGBv9qPMvv7MNa5uVgji0D4kYvoZaRtXqnbaJTLGr
Ja/QUOmd/HyfwgFBhM61Gydmvv2hz+PbDy49PSjTd8rtKZeei4FYx5mGX/xB
yJ+1Y9qA0oO6Q+++0G9Pl3uMT+Uzo5CVDhvO+n9lj8vDa4ztUZqev7bZfmRs
uTLi51yZX36ssaTVmG6gdwAQpEzviBgz4CbE/OMj2X6vR3ufJ/nKzjFV34wS
E4TiIxOMX4o8lRV6Q4LIZfFNwum+U9QrclJIrEXMowI6Lut3neokXGgfEjd4
h0qyYKrVO3KvJGBXi9/76VF2btqPqaAiWthcu3myv9yxludKK9uJlWNPppVI
0uqpnLC2eezbBZMh5M/aMW1A6SGkQ78+miuBsn647Ujee88z78uU8uxA9vXn
3vasc4i2l7e++xZWfrtywTnAq6xjbxqpNaYL6B0ABCnTO3IL2vewTefCJs8V
H0FsPcJ+l6jaqH4Qio+MMH4J4sxWhBGen03wLSz6SrOY5h0tJPPi3bddPjlw
P1X5vvA+xPdZMldXv4dYrd6Rq7P+OzStJ8nVXJUlVw2soBZryFzbNpUNmfeg
hwfmXDrcVdlOpu+Ur6mKTKTiicDumRGvQNUGIX/WjmkDSg8yfT+wQ3fPz9oD
xU9cywXd8/ifHFi+c2IYXTewxl96Um+sRbJOddkxNzG6HfSu+6WP2E6a/bnZ
PugmtcZ0EfItAegrpE3v2IO2/2i07bqs94qPADp4gf2o2qiOEIqPjDB+CeI2
iQhXYvIy034XxzlFzJyMHWt5bsTQsv2djROVOSwR+hA/Ixft8h9/qtY74vi9
3yd3Lh2ZOX0e/+mcqnKfzfqpZ/+JJ80o6zS431I51zq7Sf6UZEvJLSnPba9C
7xSruL08KlrpRX0Q8mftmDag9LDtn8R2R+AG527hXP9RMlJYT+5lxnwSwsen
styN5VkpL48WvrjP6rLH14xirN/FrsFhvT2WZr7/aX0bGS/pNWYpYd8SgD5C
2vROYccU7trlR2S6nhjPMidviPYW+ftyZoxohOIjM4zfQ34uC9zCcCHyfHyK
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
MD4AIRDyZ+1gQAEAABAj0DsGQyg+gvEBCIGQP2sHAwoAAIAYgd4xGELxEYwP
QAiE/Fk7GFAAAADECPSOwRCKj2B8jXQ+On5RXT/g7X1v/KiuH9A3IOTP2sGA
AgAAIEagdwyGUHwE4+uj/absPqvr+gk7pmT+pbWun9AnIOTP2sGAAgAAIEag
dwyGUHwE42ujbTprfrrOn7F5MtvnuTp/Rvoh5M/awYACAAAgRqB3DIZQfATj
68KWO0OWWvX+FAieGCDkz9rBgAIAACBGoHcMhlB8BOPXgQ+WXDCcNZxw6+ru
4NfYcqfxnrrLnUJh0+EQPLVCyJ+1gwEFAABAjKRM73x8Km8D+9LUs4ocyv+d
+UFnyYvWjLQfajjeecGUAfa/JmzS1mQFhOIjE4yfMnbdZ/fTzGHj7L569rtB
L+qYyRqu6UiiOWtGsUnrk/ig9ELIn7WDAQUAAECMpEzvrBvAfCltlfzKbka8
pa3JCgjFRyYYP118eDFj+zzyqf3T/vEINult/xd1z8+yb36SSHusZU3sxK2J
fFRaIeTP2knFgGKtm9C8QncjqiVy4z9d+W8X8lWZ46///Tv1blScvP+ft59t
tzsz6Qc/f3yz6oVW6wPXHmP3xkHfm/PXT5NqXSSi2oiqiSqFtMOB+pMyvdO+
9M7Zs2fxUcxh1Hm3z549+7cvl77o3d/M/umxvVpn1Fk/m/OXLl0tVkEoPjLB
+Kmi7XzGhr1k/8+Wy7OM9bvO90ib1TKQjXnZ75k60HF1UltJaYWQP2snDQNK
59KRLPtb3a2okoiNtzbcNqJ3Ls1dtjGBpsXBrr9MzZYseGbPeSKoq3U9I17Z
8LXh/IWjf23Qmk80G1E1UeWQdjiQACnTOw4dV0nfHvK7oNZYrZeL4W7wTa+Y
G8IRio8MMn4q6LqBscwVtsjZebboyRN8N3E2TkwmeUey2f60/0js01IIIX/W
Dv0BJb/mHB5I0wy/ojZ+yw0DbCkw+d4X39+06dWHLxlAJMnPWnu6/e3OunfF
25s2rX/sfB4KZI79q+/Y9j4PFA5a2GqPxTtWXWV/270fMmRxNKKNiJqockg7
HEiEdOqd/B0iSMxM7wx+jQgkD1uXXKMqh1B8ZJDxU8GzAxlrfMTuAstzoisf
uN3nRbsvZEmdZuNYjzUlt5uURgj5s3aoDygfLZf7ByTDr6iNzy8/0A6lp64p
bj5brdNYna8Ci4XOBU3soPs/LP4zv/IQ/m0bb9vpeaX1N/upwXcWB1lr3Un2
F57hfV3yRLQRVRNVDGmHAwmRTr2z+zQRJO6h+lrWYmZ69EYoPjLI+Gmg3Z5W
RVJZ90y5U3mmj3K3luRY898SbNWuc1nm+2YdYCcFIX/WDtkBZeem9//++N3T
iomktMKvyhrffqsdYY7+fel2R9t0dmxyKzBV0nFHtvE2Vytfm8C/rlfIWM+M
ZO5y/x9PZyxzRlsCrQyiIhtRNVEFkHY4kCzp1DvvfF50/VGqk6rWMpadY/bp
HELxkUHGTwNP9bd/zSPsWbX7MtGT+z/o86J392f9rlLsYMbP6mbW+ECSH5gu
CPmzdogOKL3FcBq+dQS18KvCxtuBM3MdjrJWX2JHnf3/XO921oi1pMlzY9mT
A8XXLs9PfHVfxhp/lS996MPj7Nddqa1fVmYjqiaKDmmHA0mTTr3zlDwEdMou
xWvyc9lQo0+zkYqPDDJ+Cui6hv+al+a5Ks/5LjwWZIrP8NeSbdcVjI0NKBUH
QiHkz9ohOqA44degc+59vfMyauFXZY0XsfQ/lFbDeoFf9MAy15u9ilh4az9v
0uOu78p1pUdcj4rrLcpPDK9uZklmTZZRkY3Imig6pB0OJE0q9Y6TvtNwh8qr
O85kR5twDlcBofjIHOOngQ94gcHcIv6/nfd/OfPV3/sJ97XNQWXb6of9mQ03
JvyZ6YGQP2uH6IBirX3wwUdeaOUTSze58Kuixnfwk7auuL949tZwo4noYNSM
Va7ggJ9u57hOenXPYz6H4vmiD/vHN+rfUF8qsRFZE1UAaYcDSZNKvRMlfafw
zuf73Wz4Kgeh+Mgc46eBFfw4254rla/h027iG5Sd5yW+p5QiCPmzdugPKKTD
r9DGW4tzjGWm7vL8jfFG236waOXgJa5HX5L5H3s+XfJY6xftR47zJCy+OIgl
fZDYlzAb0TVRdZB2OJAIqdQ7UdJ3Ck/lGh9RPW8AhOIjc4yfAqwF4d2Xb7Vk
fph4LfWWXPKbSqmBkD9rh/6AQjr8Cm38mlH28+5qKcVg+nRzb3jgvDlUNvOQ
j0of3TxKngmZ2/tQ9y38J5jveYN2fveoAas+YTaia6LqIO1wIBFSqXcipe/c
IepfGQ2h+Mgc46eArgv5j6k+bcm3dzSknfK5fsT6xD82HRDyZ+3QH1BIh19h
jRe3OZStt8hcQ5ZbUP/m1cI6p5LXQJdicfQOm9F75mPjGPvfA7wFMPOz7Mf7
zcx7nkiYEBsRNlF1kHY4kAhp1DuR0nd2n2Z8+g6l+MgY46cBeeLiUuWE+saw
8hXKRMjPZ8aXNTQWQv6sHfoDCunwK6TxvBR+2eGvgqjzbMrtNAqi6h2Z0jNm
q+cNrGX8iXFbEmirErWNKJuoOkg7HEiENOqdiOk7aj1kAoTiI2OMnwbEiQv1
uJ2fGybo68QrzYyN98YAIAKE/Fk79AcU0uFXSOO3HcmfPqL8Gpr8Kw8tfcn0
067OafcyweLVOx1nBvVAkeujv6az2kaUTVQdpB0OJEIa9U7E9B21HjIBQvGR
McZPAy38oug9nla9hG8B+Ry1qD+fTfZUbQURIeTP2qE/oJAOv8L2DrKhByiM
petaER6U7VJvGCYfvavsEb9d9vd4UefMFbpVg9JGpE1UHaQdDiRCGvVOS7T0
nZB8cAMgFB8ZY/wUwPduGPtcq+o1vI971u6SIM/75LSu8BcCD4T8WTv0BxTS
4Ze68e0n8WdDCkgaS9uVthQYfJv7TNeqPeWhkJ5VJnlqzbeG69ax/KkJn3if
SRSljWibqCpIOxxIhBTqHZFO6K604mX3aWo9ZASE4iNTjJ8GZLkC5XTKLyTV
lDHLAwPzlwqMhJA/a4f+gEI6/FI3nldkZmzvTcm2KTasd1e/uLnsocXlh9xk
GOH7C8i+OeC/69zMMJQ2Im6iaiDtcCARUqh3dn+dhS9tUEjfoRQfmWL8NNA2
kf+WZ6oueOAXkmo6QL7tAMYaH9Ty0dQh5M/aoT+gkA6/lI13VhTTVNS463Lx
lUpq7cswIveAz4tl39Q+CKpslEIThULa4UAipFDvOOk76qWNFgLpO5TiI1OM
nwbEwXG1HOcXkmoqpy4igwt0n10nCSF/1g79AYV0+KVsvKwfafx13ZXgXEJa
cquOPLTm66zyx9G+YKqyUQpNFApphwOJkEK949y+o1wfz8+icCaHUHxkivHT
gOjAytXD/8/evYfLUZWJ/l+d3XsDSUgIDolPTowQAR9AdJCcyE09DLejDgYV
BAe5heMoQrhMGED5meHmiAmMwDiG0QwPgcFwxoBcNDKEGS5CMBIwMdwk4RCI
JBACCQkh2Zfu/atV1Tu7L9VV1d1r91pv1ffzBw+p7t171V61Vr9v1br4K65b
Wk69OM/73QdssPK7hRPUnq2T36GIDr8iC//HUXUffUgVzPntuHLwPs7zo2Py
HeuzGKPqKIVVFEt0g0NbpC/fGdh9J3L6ztbjBEzfkRQfOVL5aVCcq/+UkaPD
9Yrrucuj7931Lvvh0V7v/5WbXxx4X/HlHx2m1IT/M291S+XTz5asLA0nnqD2
bJ38DkV0+BVV+NJclzRdx9vO8k/piLJZPbqbi853jn2/beULFVFHKayieKIb
HNoifflOafed6Ok7L+9h/Wl0AoLiI0cqX7LCrWNViE++VvtWPWQz+t5dccUp
3s+O/IS+yXdlsC3p+z8eodT/mKxq1yZqjF6NNZ/KDbqHmqD2bN3m/fXf6uAt
tsvRPNHhV1Th+y71O6Zgv87exVcfolTu0PPueMn9L9S6Hh+pz2ivpWWHFtbP
GEr5zt7t3+45pBihdZTCKoonusGhLQoX+9fIPAMf5cg3VKLpOwvzAqbvmKyc
oeZI5UsWpIw1KrcBD+gRb5EJfc/cEbmj7/pzsX/D3HEq9yW96NDm6eoTC9b3
97+35Jx8bloLCc/WwxQTeJoiqD1bJ/8GiujwK6rwpY5KL5hfXH6iftuxegPO
jqm/kVpb647x050nyw4F9yZCe9+BbML24mcRdZS+KkpAdINDW6Tv+U56pu9I
uh/sSOVLVlz649naTD1wfNiJswM3LqodJe6PeItarqB7Vn70LcFoi+KCTpU7
eXP/++fnTvK/n3t+9dnWdgz1v1as7P0jnaD2bJ38DkV0+BVV+HUTBh5vFH4x
rnP6bzd5x964x+tVOr72bJuLacbm6fp8pjxVfiwq34l6rY0i6ih1VZSE6AaH
tkhdvpOi6TuS4iM3Kj8VntF34iJHq/kde8T+PF66M3ivUm8813lz75z8X60v
vaZaez7jX5WWFoeTTVB7tk5+hyI6/Ioq/IrhpWC6uGDElCcHhkht+YHXsUy8
W95z3+ILemvOjm9W3gAtLegsNN9JWRUlI7rBoS1Sl++kaPqOpPjIjcpPg2Bf
78gFAfw/dv2tFQq3d5YNzSjoi2i/RRP2eMb/9IXB488Waqq4ILZ9IZSg9myd
/A5FdPgVVfhgJr8XTC+bcOjKwcP+nZSuGy0vWtaYrWtfeOASLzfIHb2oKgso
zdGJyndsbzgaUUcpqqLkRDc4tEXq8p0UTd+RFB+5UflpEDygjLx+/dEKM+om
7Msm7PZQ2T+DibelnfR6pvn/amktVf1lmq2VTg0R1J6tk9+hiA6/ogofdChq
79dOnrSs/PjWM7yjXbcIuJHoe2fGp4ITUbkj/7vmOkuQ79huyBF1lJIqaozo
Boe2SF2+k6LpO5LiIzcqPw26T9V/yci1TvXWEPUHbG45ueN75Vd/8N1X2kmv
NJG187YWSqgHS4h4PuoaQe3ZOvkdiujwK2qt43uDYHrSTTvfXNkJLB/jHR7z
aHtK2LJ1U9QOH5r5ZNXjctH5TlqqqDGiGxzaIm35TqLpO1uOUidL+CIVFB85
UfmpsOEA/Zc8vxDxFv2ApW63XlzQeVDFw6Eg3zk9+D7vvcy/oXlyK8sN6AWp
Ix4voR5B7dk6+R2K6PArKt8Jon014sMHra98pffb+vin32pLCQ3Zvvb5X+gh
8LmjK5cuk53vpKqKkhLd4NAWact3Ek3feWn36HzIFYLiIycqPxVe2j32+YvO
YHZ6oM6Lmz7TWbE5TrB9adddpX+uPtL79AvWhfxgYv5wOqq6cYLas3XyOxTR
4VeCfEfl51S/tFCvhZK/TtqtkN6HDtIZzxfLh36lIt9JTxUlIbrBoS3Slu+8
vIffziOnPxQXCJluLSg+cqLyU2FRPi5f9zOYeldFcWHnfm+UHwg2ixhcT237
iqWrW/u28+va9ubiEglqz9bJ71BEh19J8p1xK6tfCr59913dhgKa9YLehlmN
vm1wVmM68p0UVVE80Q0ObZG2fMe/fREzfadvZng+1Lvi1r87Pq92PeWq+1uM
CA0RFB85UflpULihMj0J4V8W9RZw671w2MyKsXD+9qBx6UlDl75f17Y3F5dI
UHu2Tn6HIjr8SpLvfKFm0+LNU8IfKrhvmb9hTdnSZenId9JURbFENzi0Rcry
ndKq+dHD1bwmH5IPbbvvsyp32IzZsy/dz2s0Zz7hwCr1guIjFyo/FXrP0X/I
yO08/Yu83uYPm6dUZUL+goXDro7KYhq89Ml3miSoPVsnv0MRHX5F5TsLglg6
pE8prf5YG2U7rzDHL3nXjun9CfId24NEIvKdNFZRLNENDm2Rsnxn63EJeqLQ
6Turjlf/899f87uHbYsOUqrzO/YDOkHxkQuVnwrB/bfI7UD9fr1evrP9un+o
/Crzt2Loui/i8xq99P3fL2KBQ8cIas/W2epQ3vvD0sb8qV5TFR1+JViPeseU
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
kmZVNk9/WaX3zkQygtqzdXQocIi4fEcvyKzUnmvbXCZTiq8tfXpd1aH5NYPc
ghAx9C8Q9B/D/zC0xTQnzZXZjOzlO9s/p+Kz2jRP35EUHxGehNg8Rf9RTo3Y
BUDvRypokHELNhygVNddtkthl6D2bB0dChwiLd8p3SxO01LFvRf6p1S+r0EQ
InbeGfLuoP+Q842TscqMlb18pzR9JzqrXZTi6TuS4iPCkxD+6OLIfFzvR5ra
5dQr+N9W3xIznHpICGrP1tGhwCHS8p1gZdBU7cRe2oS0fFOdYNBaaIca/HHk
3AzPWGXGyl6+U9p9J+r2uM58UzxIRlB8RHgSwr+Co24x+Suup3Y59QrFed6p
HrDBdjGsEtSeraNDgUOk5Tt/HFX3yYdUwXTujivL7pk9Pzom35EzZTRjlRkr
c/nOwO47kdN3th6X4uk7kuIjwpNaxbn6bxI1hFivuJ67POa2Te+yHx7ttfyv
3PziwBuLL//oMKUm/J95q42VdejpR1lZWIkugqD2bB0dChwiLN8pzXVJU1ez
7Sz/lI4on9Wjv1Oi851j329X+VqUrcqMl7l8p7T7TvT0nZf3kPPEsnGC4iPC
k0GFW8eqEJ98readeshmzG2b4opTvJ8d+Ql9g+fKYF/S9388Qqn/MVnVrmDj
Mr1AaD6VW0EnJqg9W0eHAocIy3f6LvW/coL9OnsXX32IUrlDz7vjJcGx0uMj
9RnttbT82ML6iUAp39lbylbe2arMeJnLdxJN31mYT/H0HUnxEeHJoOBvUaNy
s2ifHvAWndD3zB2RO/quPxf7N8wdp3Jf0kvTbJ6uPrFgfX//e0vOyeemiUl4
th6msj6BR1B7to4OBQ4Rlu+UvoL0VgjF5Sfqdx2r99/smPobqQ1q3TF+uvNk
+bGgPw37Yt2RJIhZ0yxTlZlA5vIdpu9Iio8ITwYVl/54tjZTjy4eduLswI2L
aoYS+wPeIpcr6J6VH31L8Ei+uKBT5U7e3P/++bmT/E6851eflbSHp9+BZWGr
ofoEtWfr6FDgEGH5zroJA083Cr8Y1zn9t5u8Y2/c431fdHzt2XYX04jN0/X5
THmq4mBUvhP1mouyVJlJZC3fYfqOqPiI8KTWM/ouTNRwNb9NR23P46U7g3e0
9KZjnTf3zsn/1frSa0rSExP/Ys7GWnT1CGrP1tGhwCHC8p0Vw0shcnHBiClP
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
Nwe+RYIBbhEPRTrjV31zRGors0kZzHc6I1d7+r7a/RkDv6oFL+2uS1k5V8wP
BE1FNILiI8KTSsX5+u8x/A+R79HVu/OjyT7Qqek7TV365DuC2rN1dChwiLB8
pzSzJeTLZSBEPt+RO2chiveO0CWs3c6tJt8JNuAJfYgTPPqxPOOhAWmtzGZl
MN+JLNWqD+e+aXls5razdCErb+H7QV/SGDaOoPiI8KRS0BNHj97yp+QkrN3i
XP15rkzfaerS9++4ZfoKEdSeraNDgUOk5TuvfrBOV1MKka3v1B6htK+o2qn6
7l5NvhPcVQzd1DvYwdHyhiUNSGtlNiuD+U7UUJ/eK9QuYaHVtv/7udxhV/5+
YIH21beds5+acMacZwfuABSe+9ezxqr9z7vDxDyCN68+4PP3VC4F6Jfc1KLv
guIjwpNKwQqDMbMlFyZ/ZBPsvjP53Yi3uH7p+3fcLK8gb5eg9mwdHQocIi3f
Cb4vQl4L1g2N3hjOstLmi7VfFjvynR3LngbjDMJ6CX88hCsLNSeQ1spsVqby
nWB6QFS+87vdQh/vbJ7e+bfXfkZ1Xu4/Cn31svyuZ/xw9reHq87v+HcEii+e
k59wzuxZp+bVxDuGoikEGweZmlUuKD4iPKm0fl8VP1tS98kJW3Sw9UDljay+
2y8qS12cv/T9FRwS7CqXXoLas3V0KHCItHwnePIRMgO6tMaZqSWVhkDpoU1I
6w8GTZTfR3x/avnjnvIP8bfmiZwR4ZaUVmbTMpXvBOtRR+Q77xynPvKn2sN9
s0ffXex/7aOq43s9/YVfjd/z9re8o8XfT1S5aV4Y2DNvxJSF73lHCrd3qq5b
hiD02nK8frxoah0FQfER4Uklf0/kuO5W351KuIKMv7V01ee9uV9ZC3H/0tc3
MfI/Mf+L5RDUnq2jQ4FDpOU7pfFctY/Tg3bl8oOP0i6iIa2/tMZ02bKnwTDv
EStqPiS4+zZu5dAX15CUVmbTMpXvbD1Of1T9yWbd14THbC/ueUlP0Cx2X9F3
+6gzXgsO63UMd7qvv3vWLleW7gTo+wJhCVOrloz0yj3W1CwLQfER4UmFoM+O
my3pPwQKG3xcI1iipWr5g0WdZQuyu3/p61mX0QvWpZ2g9mwdHQocIi7f6b1I
v3jAhurj/ndO9dRLtwTT870zu6EqxNO7vlV9r676sAodE+4PAcudKycRSGtl
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
qB3hSe8VKljPa+sZ/lUxOewpzpopqZy8E1jnndy/u3Zyq45Xn/hVecW/OFGp
BHdw1kyK2tkmvlvs/f055d8TH/tJ5F2gd/6nftMBG2KLVWHL8fr75fuG/uSC
2rN15DuAIYVlZ+pIWma+k7Dwb1wx3Ouqp9769Otr1z5/z3nDnZ7sOqi4/ETv
5E6/9YnVa9eu/LU/Kjx39G9Dv3Be16Hux+et8iKgTUsu8c52z1+Ku71vuzLd
zneC26sqN72n/nv84PeQFQZ/qzMExUftCE8eH6lU133en2Vhp39ZHLix9j3b
z1EpHc2mFX89wrWHV8XfHtjxrcpZc/6mNV/eFveD85Ua+0KdFxN0i6/q3j//
lX+cPfui0mPgUde9U//tm6fot0xr8AtiiXfJ1S9lowS1Z+vIdwAj3l4YPEAQ
me8kLHxh4YFegHzasoEhH8VV05SEHfh65o5QH7/jrYF/FhYfrE+269raHd+K
v/deGnX9QGxTXHG8d8IzDO0M1yb2K9PtfGf7l/1AZueo4um4ybEY0BRB8VEb
whP/XrueoNU3M4hvT63NgosLOtUYQ6sHu2jbWSr3dZcG7hYfG991/ftVx/Sm
NbvEzfF/f6pSJ4dfLwm6xeLig1Tu6PuDjLf3meAhr5ryZN0nMa9+UH/g3Hov
h/NXMMhfa2pNBUHt2TryHaA1W9e+/scHb542MBdaVr7TUOG3/MD7Apj4H+V3
szZPV0c7f+Oze1a+69qKUr4wWZ9tbSLjfdGqyl023pmuVO5kQ0Oth5gzlel2
vuMHKUpNiBq9V7xX5a9zbYyPGYLiozaEJ4/spIKpFH0X+FfFTnfVvue1j6ph
l0Q8DBRv6RjVFTnnvr28Xnj0/JpnJnrTmmFXx7TJ50LOJHG3qHv/ibcPPkIq
3ReL2HbpEf1MsNHpOw/rxztHvd3YD9UnqD1bR74DtGJwPaeOrxwuLd9prPBe
OKwqhjwVl57nfYm4tLlbqOKCETXfWP53Tu083ef3VqrrxxV33t46xnvfxQJ6
SIcq0+1855Fg4NIJUWNjCjeo3VM5mk1UfDT04Yk/SkqdX9AZbmfoLZBgho+x
0UdO6r1IqX3DF6az4dmJYfOJ/NUVY64Fr9lW38dooFtcPF5NeariSHBfrG7C
E4yMbXD6znpdin1ebOhnoghqz9aR7wCtKHWnu55564s9FwjNd5IV3o+Q/6J8
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
/8gzUg==
     "], {{0, 1042}, {3312, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{555.369230769232, Automatic},
   ImageSizeRaw->{3312, 1042},
   PlotRange->{{0, 3312}, {0, 1042}}]],ImageCache->GraphicsData[
  "CompressedBitmap", "\<\
eJzt3QmYJVdZN/BO93T3TDZAAUkCIQwQlgSioBAii8qiEqMRDKKoGFDZRBCQ
ReRDooIi4r6huINLDBAjuEQBBQ2LRtQgooBxQ+PCpuJOfed36vzrnr70dN+e
7gwTn6nnmZ6+1XWrznnP/93f99QFFz/tsV/5xIuf9rhHX3zGZz7l4ic/9nGP
fuoZD3rSU8qpleOWlpb/aGlp6a/PWPL7UH7Nj5X3DMPwvvZvqf6sP97mx3Hv
cnJpaeVfh9mxNPv1bX4c98F20fu2uugfj1206UXn+bk6fOQjH6mfHz59vMn0
2/2m386cfnvZ9Nu+Q9/73PpzZfi93/u94cwzzxxOPfXUpeXhlFNOKeducYtb
DJ//+Z8/G+jD2sV/9Vd/Ndz61reul+Xi008/fXjwgx88/M///M/SSe26v/7r
vx7ucpe7DKeddlr5NF53j3vcY/iP//iPesW923V/93d/N9z2trfdcL9b3epW
wwMe8IDhP//zP5cOtuve/e53D3e84x033O++973v8L//+7/1ip9q1/3qr/5q
HXx/v9vc5jbDk5/85HrF8vb0+PVf/3V/HH7oh36oXP4zP/Mz5dxP//RPD7/2
a782T4/9w7/8y78ML3/5y+sF5dL6+6Mf/ejhpje9KXqc1C77sz/7s3rPb/7m
bx5e9rKX1Ut95ZWvfKXL7tMu+7d/+7fh537u5zbc7TGPecxwoxvdaPj3f//3
g+2yP/qjP6p3+/Zv//YNd/ulX/ola36LNpHf/u3fHj784Q/XT5/QzkHS7/zO
71iHacJvfetbh3e+8531093rz/W6fj/1Uz9Vb52R3Ote9xo+7dM+rXxjWxqi
1Y1vfGOPG+n15e0Pl112WV2fHiuIc+DAgeEv/uIvlu7Szv33f//3dNOM/Yor
rhg+/uM/HiUmXCDFCSecMPzDP/zD0sn13L7hD/7gDyze8GM/9mMwdHy79Pu/
//uHn/zJnwSZpVM6En3DN3xDPXdWO/ee97xn+Ju/+Zv66UA79wu/8AvDV3/1
V2+Yo8+FHDuBlXV83/vet5EkyFyAuilJ/vAP/3DpdvXcCcNTnvKU4c///M/r
d//rv/5reNKTnjT84z/+Y/38r//6r8OLX/ziioZrr712KRAAJlCcJ9nxxx/v
XhPJ7nOf+wz3u9/9hpe+9KXDs5/97Ez7Na95zTTtE+vPNbevQ4lMQu1nPetZ
y+1O73jHO4YXvOAFwy//8i9jjpV2p+/5nu8ZXvSiF9VPd27nfvd3f7cOuCc0
vD7kIQ+pVArlvvIrv3L49E//9CNE6BOHz/mczxm+93u/d7rzeeedN7ziFa+o
vwPGJ3/yJ1fC44lC2MBzMVqvDr/4i784PP7xjx8++MEPDne+853req2364nH
z/7szx7e9a53tSGeWEXMne50p2ntieA73OEO5lc//8RP/MTw8Ic/fPj7v//7
4fLLLw/FQSS3CsU/8IEPVDbwKWzx9V//9VV4+HTP3VP8inpuvYqyv/zLv6yj
MiujNfJCuMbka9M1KFGoVolbGPnsBiWy/fWvf/3wm7/5m4hw2/Y09Pinf/qn
+rR99ef+XlzUAzjBy1evu+66Gy+IgFPak6Hwta997fAbv/Ebw3vf+971Nl4g
/pIv+ZLpKc94xjOwQqCP2q961avq4MqUF8XFTdq5e97znsN3fMd3tGeN54he
azt+GimLAd/4xjdODEh8+2xSVd0XWXHhhRfWyeb4jM/4jOHKK6+svxd6DJ/0
SZ+E0sPf/u3ftu+sDN/2bd9WGdunUX6cXJ9hVfwjY6xY+U5VD0311v99dt7f
y3XLvlCWJUMkjS2bg7wwlD/90z/NLN/ylrcMj3zkI7uZH18NA08NNsoyVKwU
gV5v86EPfQihVxsMAgB8WS7LnEKroVMjewDuoqkqGJ72tKdV64LE+s7v/E54
mcDt0ZbzgQ984HC7291u+MZv/EbWyVntzxQuQYMdrdTnfu7nkpkHG5boaAoU
Mo877rjlao8f79fhR37kR6ZRMovgAwMT1o961KOI1BstiPdbtPmwmu5///tX
FfLjP/7jw//7f/+vzoeVEFJa2quvvpr0G8lWJuGRTQXW47u+67uGRzziEdGu
iyKfifOZn/mZG5APwbTRtEplICQd4VukHOG7PDz3uc8tKGMXWA3SzQELYEIN
FYJksExAwi7H533e57EHVtsDr7nmmmqhFrnZ6HIqulUa0lx3v/vdh3POOaey
iYE1S7b+z9Jw/q53vWsdoOt9z/cdzDziCG2Jf5j61m/91uGxj32sUWcID3vY
w+qKDlVPDFX6UzyWBZlvf/vbD5dccknFzD//8z/XW//Wb/1WhecGoKxVoCCX
w2jZ2IUbl9u93/SmN9UFZ9eQMey0m++eP17dzlkJBmoh79IntXNPfepTK6J9
iqlFR/ESirZti7wyvOENbxjW1taGt7/97Q00J1Sz+aKLLqo0/cEf/MHhh3/4
hytGn/Oc59TBEEHoXvA33Yc4Ymm+7W1va6p3e36IiCBoWJW/8iu/shR9SrI/
/elPpxvauRPqOYrt4MGDE1uau3lSPQ6kPvfcc5d2yhQwdctb3rKapgEIrJ19
9tmw2sZw82pB3fzmN69/i+tC9jj++I//ePi+7/u+Sh8C89WvfrV5DieddBL5
W68BgeJVVXXgYA4X0zKPxExgj4yntXOf9VmfVVml51faKzwckpFxF1xwAQ9z
OkcMfuInfiJxMoqWZfDe3/5KoDLxR34fiVyYfPjCL/zCDYtvkM5nkisr9WlL
wfdLXvKSuviOSy+9lJ2/l/h+//vfP+zfvx/tl0Zr5UC1GYqtBbf1H0P4y7/8
y4dP+IRPqJ+LipzsMBJreXnZfSbCwIyh+RRc0JtclGmoZWrOOVhGps2gyj2Y
8VGkwfeimCdknCMKIvPhm0yfPf+E+l3q5mu+5muqXGMjcavworGym+iOcr8d
Y55+wXdoFQACEXO3GAJtXKvVlmBboLm1KeNs4zu5jjma4KqrrqpjKf5JXUdj
e97znlch5Hc8+rVf+7XmsNaR8Gd/9mfrp1PbuYc+9KGTp5frSE86qse74bAP
C89MJMTCT3jCEzZcx8OE6KEq3/EcRAusDJPsXxl+4Ad+oKqNfvlxAHb279RT
Tx1+9Ed/dPobkUd0sniQoHjhe4H6l7VzpDUrAOvWWEU5FyNwNsSVKhFxh9BJ
uIOaEheBXhKJCqOAb3KTm1Rfq1ggE3c88YlPHE488cSqiUMy+qtI0frp49s5
ZmHGs97G0+IdG8bDFrAERQ9OpIrzRIsYA+7Is4yTRD8cLiKUcCXOzjIyOhjI
/TIyZ9HTwWYtan8aL9OXBvJppxzESDefYplNz6dRzzrrrKpJAjfOfmC52n5y
z3L4vYxjGhOLt9FsYoHzzz+/hqB6yIYre4zEUurhzmI2hv5+nBSYGCbhPwZt
WpBjWh8mEBoXiE/XkXrciP5+z372s2tssh+fsTzucY+znhuwEBxj6WKGTc8S
h/yyL/uy+mkPHIiwEjh98Rd/sX+FTH6uDG9+85s/CrofzUojxLGR8Giuw1KR
HjGuLA9F37OR0CqHxKePa+cYqQybfixf9VVfVT2vnuyeK8xbnJrpHLJji/46
9yLEQXWn7EN4M2Do6yyZMAuj2afbt3PbsUPmxiD/pm/6pg2QIvSxw2zMa70Y
qweIFasnwvMLvuALquHSI4lzChk92dipWcKdIt0UGwQmUpKayPH7v//703VI
2dyYTZGecyTBgx70IJ7R9F0KJTAJdHgHFAmltYcI30xZxB3qH98jPK4z07SF
qepByBTkhgEAGFWKhTXdBl87Rx3etJ07lH5oUYmJKoZws5vdjKUw3Y8rhln6
1WDhkDsskZ0CWxjM+AqKJgQB7Atf+ML6aafAZmbMI4jaj5wfx3x8ZWLWWQ66
wNi4j0DPuir/57ZHQqQXMA8///M/v4G0DGcGcVn56TpDlINCis2AnudyXJCs
yMDpfoxvS8VryZLyrJGR87QHQI8v0AP4ro1wRBZKO6xwQVIT3/ur88TW5y+y
ChhqAonIVFB0ZqMftwxgchv2YrlNiAOL+/bt49UtjMUkBQSd5XL6RbGgTFBK
ZadYZL+JcPX3gyv5OuMbzx2o0Y94xTxU0zNNLqa54L/c8973vvdHmeGLAexA
pSgz2UEKIiEvnOUvisDDCbjZmryxHvA9yOKY8niMt5jjDVAnVsZg3nMNxHwd
5A3lx5Nx8FS+5Vu+hZ25bJnb0nEg3SSBiesJh1YVO7OA+XEzHK5VK8jqsjTF
EJgU5buJsvsqwlnARNDIb9BlFDmMuqiOrDnF7880yU4xKTi3urpaH5d1ECH7
kz/5k/rpdgticowvrVfZRtvR0FyiZz7zmTVCV/AwCQT6gYFQnjFhB6VoREEx
XiMuFeX0WYj2sssum2zthEbMI6GR7TC62sZnbLBCKDGiyHNJnpe85CXT9yRR
N9roG7G50s2D512wtsHngcNisLXrblR1GqyyNNARP/Dio5apbIkpYUYuL2NP
oqCgbSkR5T0G6jn13L4alBLpBMJO06M8rivac+nMdk4G2bkXvOAFk/lmFc44
44z6bLHXj/u4j4OA3qFziU87Baacuse9/vWvnxaB0IpFuigwb9KGSiDw/503
PQq6CJIMFX5a3LY9bkwVJKLn8LnIuIhKgetP+ZRPqXb+zmC4vwZwXve61023
BgXiUz3Iq1/96kwYmiBCln0rJFLriCX2k3NQDVETYsodoF9MJ7Oh9uOFIjgT
wWEoZXh7iT4zDPo+sZ0TFsXcZdaTl+U6wwazMJVIIyYqOFm6TTsHtZSVNQ4c
Tz755MRCpwKF6667LhRxOdlyOHCMHVmUyLQSZGSMtkXhmBiK7JXcydDpbtrg
EY94RP0UC5gVI1LmU0DGJFGD04OMx4GUM5CtVN2IK+nd0ECchOztdTHFKOrd
j4UjNm+HQxlwFzaalsZymdsFF1wwXYcuzrkuxiK9YCyKeyLHd50QXK08SF0x
hSxPMRcmdHmkJS+mQvNw1mvNFVM9Pn8qeoopMiGLjUBES+BnmsJVrrvqqqva
ufUaR2BA5mDqSKoQmosmPuLBE/eJ7GdZmv9cP8U6WAxeq9VxpoKFu9BnZk2M
QoWKEfq6ZTtHpTrnHqe0e1Bvgrh0g+THfe5znykQLKkB+uL9FECB3rTUTE1q
e1rWpdGhNm6yMvNjqrWs/pRpLG5k9UCl9DsLh0tiSXrksSxk29761rdOqBU9
jBSPBUkJxW/fA3kW5KEOE044m9S/9NJLp5SbVLviFbONb22VpOKIYENEuaKT
DrY/u5UoBltJgRFvpRAtko3Jwk0gMpjzRELxsRbNN49u18nVKpfhZo2AM2VK
5scS8Rg1AqK+LBTXlr8FaYuij0NMUJDv4a4Ih760KQKN05AipaCPkU/olllW
AVWWbEIfzhasNXSZq0KwttxrNUdNmAmcmg4u+tIv/dIRnAeq7EwGzkFGyhIh
LKd3VsyxVm/h69aEv2JNCkVWGlaNwujg/8ILL1xr3+pLYrCJtFqh6R5A71fa
ucSvfYqwQ462is0LGWtGE8+udsCyU2FTSYskvRet0wmORIYDZD43ESHakSIR
f0fRsLP/pzrK7XF000Zh8BNh9ZhikoTLnZovKCRgUlAY26ivZYye7Gm33uBE
ifAz3VeGaoxbjdd/93d/d73v0OlGC59YVoQZWifXsK/99Hw+DX4uvmguRXg6
iPsTYabI4eu+7usaeXeNlPqXRcvvkjveblViDLBbcZZPieekZMx379vOqXcy
KJ9u2QiOo7ldLcZd9ZNY+R65OtfLvH+oLTRfyXKCngRzAfbEOEfbmH+4nUNn
5hj9vwdm1/Uy1suOjevYuI6N69i4bqDjig/FIxC55Vony8m0FHXyKeF9n1k2
/SD3ak7MmK3mFD8yBcI+xe/l3m81z/F+++p3OQmMvle84hWpZ2d98rOKJbZ0
s+5cHpPsIPNHuTP3M9Ybu5F69elAN2xVASy6zFt6fC/IxIXaikxj5mOtmvei
6zmYPpdcckm8VdEExa7KeAvV0qnBxpRDYTsmlv2mN70p9o0wz/Z0Xq3mowiW
W4g/iG2EOMJCaSjIY4Wtn//850+DNYRi0maw6sW47My0QtN8i4XAvvYnfpbB
FtSudAMr7lPNLSQWZlVVrYnpZ/V52Sn4TjeDoui9WK0UFW69WidWZIluJidk
9Rja8Ur4cVxPMd2yZKEAPIsO4x0BBF8va5PlQhw+nJrsrdpLkF6uh/MvnGO0
691oeY+zDM1aDUEJjve1yueee26WS4kynxhbXHXVVRksQ9uSiYYo/RTUL/OL
a8Ib5sLMcLGimHbKewU/nDZR1f4c/o8PkiW09OLXh7GEfUMKivNQiUixHF6p
+smD7Roc45wVlPI2Q95UcQ8mr0vdh6kIwZ3ZiGQKzuHLco/VdpqXAe4AWQh2
u/YUC+spRmAkRmRkcNzn8jGSIF6MeyyxFf5u3B4rmS7kQbiX+4+Lf0Kln0E6
LJ9yOiBxuI0cgkmbbHw/MbSEeDMMfsdWQMx1gjyEG0IFgII54oDjpxFKiEeC
5SAYrr766n0NPIYqJNkygRVpd7vb3abWNypAHKkFajJyrr542MgUw6QFxYPA
P6gUoTT7GQLXK/GlIRygILbmHEmZe4GGQI1FS89KINU4t66/hU3ri5xqObfq
wrJOLnFA5jvf+c4sPR7xRE+LXyuGukv89z0rQkXpWSlLPOHfpKhTGWvJD2Fr
ElZQMcsFhbLoWJeskRcqk8ot0IDCIYJUXruEeLn88sunW7B4CGpoJO3kVIo1
ctt2CwAwMnc2UuFKI58Fwtfq6psBWWoklrHI5wjL7VjlRu025IxUh0idQBIl
W1gnkRMSm0wwgvKnPFy02ABzNM5KEEUcx43LN8o9/FypnylPtUPRaVYJhXfC
XHGeSXayt4e30QrgzLoDTq7xQvkYhXUUcauDrRFXk47Uh0UcZGULAjJTpVYi
mQ6E0GRRuKjv1YCn+ZkyC/qKWqogxdKJgJl5NPUJ7ZxwRmKBIzPur0wEJJ4F
m0QSFYElrrjiikyeKdeaNKfeGV+BQx1SgCQABkgJvBLlyuHkA4877riV2juz
WnPgDoJJUEiDZjKXcGe5GeNAJqCRKsFdMGmykxhQpFp56h3aOUlWBucwycyV
KtrZbtddd90Uu/uKr/iKKijZ/bGlzfziiy+eDamwFyp4RkpURK/xSl/ui2rU
OqM3KcVUJI3Ca7yXdJ/75aAslVso544k3o4Xcx0rQ6qPdM440EPom8250lZV
vRetStkqdW692pUjmV0p/tdVVgRZbgW+ROtYmT12Xrg0EdRctxuuhN80wQSY
VKxMp2mttL8gmRSdg1l98sknt+ffqDZOt+KC2vLLPsOpTMKEK1mPLNqU4Snb
K9y9oRpyfq5yAIFgrtuML80hkmUzvoylTVTmutzPeNWS0hdRZ6S5pRgBM55L
QkaXaF//inZ6xpZbHQxFwiUlpUg3y11YI8xIn6saNDXLASV7yIx9l0+YUe0c
mTp0zKiNM0XVfaIx9WJhRpRxbpY9XKvtHc61Op+qjO5///vn1mLXZqgeOnxI
yimVUoyR64gqtyn/T+cYSbHdwneL8iLln2akLJBEZyvMmJqBlB1RwYqjGWKE
s+sIbL87h1w6wKKbd8NgdLSShZ7BPCvzHMd6s2p7OtiVljCtDYQA+mF6fq3x
GTuvM+OV01RkZJw8aoVylizj34xplCmkTztMQ+62sp2Jadi+KWvMOvGfjbFY
jdM5Y2PSsMXDNMYi0VzmMs2dbt6Y416t9GgpoOrsFU7YUMEnqZpCdd8vtEic
ZBdM09d9oz67eH/9uX3dd5hLqVBysrkOJTyjaMCJOjreob2geSpk4SZsfO7a
5HA7jFW4pYwlxCBZ3aYBvSraovvzFN+m/ouQm3gPLvAevZvrUvNBmOUcQabx
bzgM3iMmWMQzPI+CNQ0Iyw1RMJx1dsBaQg7+Jr5XPI+wGGPoUz/1U+unnbKd
khIdWUyEQA/LkHxDxwZIphe1WOTtuuPrOem1DIseiS4CFt5quaYfUqrUclsc
lwBOHg9TWe+V9pNdThL25/pEa6jJeoqtmBXjt1hFRci5juXR2i2nsfBZcGHx
89q5A1UCKofLYXpx7rhPheOm51CZCqN92gPvbjcNRVuxXerMivCbhq6/qtVs
T2zHK59/rvx1npsaRud8l17EqsZQFEVuDRh4oxgaW/IaK99tNIjmHGSQacNh
8JpaI83PfRmaNHvjow0bgnChrF5xscIXi/IPS8KK8bXzGCI4QI9j3AnKehAj
xay/VRuFUaGKmFwZeRQDgZ96/tyd4su6LNef+6ptwYrkD5bfV9pyde0hE/LZ
HUF+zkFtulZDe66uxwyH4JAMkQ3AP+m/yzC2HnRcYMeiAw3E20PuIAQsoZDK
/vpzd0pJLAUMC9Wn6VDDWk7AtVdKBIEnrrfnGkcTSu27B6pdj+MoNh58wufO
M/9Ue2YZaCleuk9Jo2zGKswWY+SK5RyV1EoFd8wqHGf3E4UJypgu6U9PwRS6
+r7gD1MQay2qb1LSjObpjMq8uYfRN6Gb2mHx6hwEcetEqUE3hbqntrvwiUgr
8y1uYZAJ5ZvplizbSvspAu3rPi1vspRBP0HXrM+J7GKOkhD9dHBNIt95bs85
KRvkhW/04Ec4U7PFGp7OkaC8Zw1we8A5mxXrH5oj9tcwKXR4HI+PxKPplR8W
9Z3mICqJn86NKuDJ4PnheGce5xE3h8b5/ipafJc9wpagfJlkbJ3y+06jEPIc
icBkXURjIw1T1LYolFlyYddMjahIdX4a9cATxFssugaYjEM8OYq3OItRjhTR
Zg4HyTQ7t7/GRglpB7hZGzpYIK/oiMzQ7JpPsCUa2aFGYsOWvmVBLEoRf2xT
/mNnBtTKSlk9QQMBQkLoHe94R1yqIwbU9cmqF4JBELYluLzxjW9s31uvBFPD
L+Ll8B3mbxFnS/MWy2Me85gtLJb1GklDRTFHIQ4ebCtDXFo0Wh1s4nvzLsp7
WiWauu2EsjA2R3G8Vu0JoX6k1wALVC996UszRXlLW7XMalEP1OCbhZU8RlpG
EUkvO0k6iz2HHArsOMY9RvtIUjDKHG89eNVBhgaBRcOasmkr1YngExvOZhjt
V0ZYpffH7OqhKQhFggTBJdFfw+eTS+9+0Rd9UU0IxkVs/UjV3zc99ykW/WHi
VkIPrkRQF8VtZmAEmNantEIxDxBOgC8jNkr4bpWR9V7FFOh3BTQEOyVtZWgz
xBK/ijWDQCyIvr+PBjZ8jbahii1/wLk3qjmvbYehaY9PmLEofQEC8Qv2NHdg
mt2LBCsUIgjmlOn1U5K7tGFUip9p6mzx4ev6gQtuUvpCN2yVewgyOYV9oieV
vJy9MsvofAGE1kU1yfjNkEkGIGox+6dzQqPOieYlgsMytoZ4m4dfeHdqj7Kl
jfBpDuZdCM9G2cP2qMBR08X8FjZUkkA/JuuTBlwTSYPEPK2x6c32Xlmrwr9Z
knVAMkhFHebW+Jy01d4fiIp9aREG0eQedKG2zY7qIY1OPrzhDW9YOPcQysU9
BbtAlmagLnvILqr1jcU5TSG5n7hict/ntHM0DUvA+DbLSOccMrYc+URuJpZn
0Fx5Bg2TNq0gkYHeLIkNSCTa0SrnMAUtoFtk3tIs1shkA9CKKXGPYb/r/PRq
VcaKmOJnCObfrv0NIyAdCeR7BY1TJ60gDaGXtA80kRKmERSKfYnQCxtE/Js+
lzaBGrBTpVOQPU2fqRLj+2AbC3/Dvo7xr3pISkW5b1KmsoXr6+u1H3KnkCSL
5g1RggENdgLJNMPw/AVAqUYGj+XLPHGiVieS/Zxu7nlWYGju2QUo5yghhmuv
PZj3DJ0ehpwiSkwGPIKO8mK36/6ehyhZi87FOpjGSVW7rsxjuq8iDMUEwzDr
tYIhzzKfPbAxA1E2OuVDKuDSwm0TRA0XhHg4hGCBZdNGq9XeV5Jo6ZGFzB5d
mrUaWuVGWxoWcuuWS0RIkhZD+zP5ytQrw7htuzPis8l5CwBuP9eE3ICRvU2B
kR+eUrTMzhyicR/T5OtUHXCG3vOe92QJORzcbhshgCIJmh7aRaEJjiQ5i2w+
ugdaaVAN5ElNbGnot2qsx08yU8YkqjBM2Eu0SOK0REPLvtSDUQH6YIV6NiBP
05W/gZ9QjDCGv5fvpjIEpdSnoGDhpNAcCvq9hOTgChL2AIObNV2ducm51e6c
ufluzB74JVawauIfPtNWPt2xnetDY7mfa+Jc7sxvGTFOw0IpTOCBopUCIRLJ
0vkTjIuSLgqhtGjxQziZ/i9TD3qsBWNNE3luiS/EkeX0bt2GIFgk8W5GVt2G
S6EQQ5Gr3ZuzPYX6mGkolApA95TgV/f24Q9/ODCR/uSZ5yD/zjvvvD2ASf1L
Cla3W59Ulm9H5FSWww9roq8sd13M5pzDBUQGFZOOK14ZlcmpdFgZ6pecPFrn
ncwPxBDA5LhSMHKk3PtoHXaariwDMShrd5OjdKyXHRvXkRiXyAOPUuRhw7g4
OVv59BnXdr56xiUFuxe19sfW8di4bgjjekA7x+xvVQ7TPrY8HrF2n+51hMe/
VYPVdnP6lHpuX3V1Eh4vKjA1TGQJp1t7egqHegs04cJsni9LdaSn3zdOtV6S
eojSPe95z1tuM5RvZeALLxXzLC4t00xWw24iy20LLTH7DC9PXIyQqzUITvqK
CYrRCU3EVWUxSnOpVhmfP24sJ62VqjVAEoBL+adQB5+LL1OuybDJbamm4hFP
w+aKzle4qm82Y5/SYHNkF2bWI5Uujs16pEyZWzf1SK3XW4mXqYcWg2KNsSpR
NI7toqsiJmza4mjq5PoYl1oF3spstU+s8ca2PVG1XiXq2zvBqg8uU+teVqWM
54Q2ZEliw1VqogMAHMUmaM24Kb7u73Zf3IMVeWF7tJKCNBrlzS3wRomf0q6B
Jedca6jxYuQU4tkI9rLnpf5v31iHf8zXdv7qq69OKFzRGaIUl28K3iIWKCtc
rMW6df+PQuv5XXeNEzBbkVA2SzKkFLcZYqbhTQyLRjPSG+Ucp4xTV77f90bZ
EcaBXeZ7o0QSUJApncY5lOMVZMtxtbFdwnk7GGbhuKIyJuNNh4mTZc5nNePr
1flC8OZi1myKRRczS9BC/LS1CtSDEHnOc54TcWfPeouDkAWhafCU/8lk6TAh
kyw90ZTNWu+xd8iEGi6/AiedGSJfIgTa3YJMIiEF4PJ0gnw+882TSkAUiRs+
tmGqsnjuc5+bTiJamXxnvQpbs06xupKjRNiys1laiVVJlaFmyThRlvJFL3pR
eeo555yzNJYaODeLlK/VfjFl+BKjIm1+f/vb3352GwkiiG2IVJuMAdOrQl07
iwyvVaFnJsAn5iHIVzC9QNOSYsQcwFAgH6UgpsavLeJpy6YljChnJUy+aFlP
kGAJdASiW6Au/5xK83EsB2o0hnSlBEhhYWiggxoGiQBRxo0rMbNSrExVFkQC
OYdnFInef4VKnp+q6fevKrH0DB0GTIbLDEhx7mHyQ58FflE7B4SW2afsb5M9
4QwpCQaqm6LIkfxM4YvJvCNqZX3tdpXyHDJNjYbkRFQsKqmlL/cIZWjcNE1G
esPJxmKV0WiRKiqCf1oIgVpBYLuQJlCLnyRBKZyAZbsscrihbfq9oR2I0lGm
Iieyy3Ygi+tPXiKwWn+uZC/ODVMVQ9WqA+99K/ZWzvC53bScm8Wgx2aR9qqg
Ca8AacfNVuFdJeL04qqaq6/GikPZMvGtaLW9O7HKbIBqrwqp1Ljvfe/bV4Yh
nDmutZn29np/ndLQIjCnOKekXMPMBPddZJkDdzMiMKztPNylTEN8uSaVCXbd
XekeD/Kk5BntnACz7xYTbJLrWKVtlVgHpESgWMO5jWyq0krNfYE6NUw99OtP
im7cvnRl2rwaDAN1TZXSjuC/aMN2oK5kcftumzGNSSbqSFiuL5sbNzYWl9S9
gtSt22Z83NiOy7TLQZ5JSgjh7tRSIThwfVG0GzaHBxC7bWRbPI5fOtPI1UL5
pWDZ9JtPXDGNlVhAbDIamHTA4aYq02S6RcdlOobAoo1b63ZqBQyz758WWRbf
3wOT5RvaOXliiskCr9efo4c/LzDIHdSk5ILtFBUSIrnObFNhk3PJg/Y1xARV
nlvfN1woHPZFZQpRi31wn3uQBlYC/xT1kEcQj/7M2wnuyaT5d3fp2d7wdtul
lanIsyjKaWpk1zxZUnvU34/ixB8aZnfKH4t1xKxNb6vM0XyfDJ/WSmluAMXa
S/+PgxNAlpJMi/JHghscQOKiH6bn0UIa85JQsvKeMaqekWfI8LhDfOJZz/GY
ekP6ftwqDKiM8JmptxDD9GzIkYmHjj1kBOyZ1oL11kPgthniThkBy88zAkOE
dIanMAKxMd9q0lyTRsQRBcIIrEyyImjvqhpJRDaJjZ03Y4BQHe8wmYrbPw0r
DFBIsCEpJr3XD0vxXt68vRcMwJnYvk1lrUrTWAXGT5kVfRm7ZVEgCxpFwwdM
bCV6arZZ/sZ2FX8H6qKVkvJjPKhXiLQiqfg+wJRZMK3aOyFaYGZPMOqRBLaZ
7q8/N4ZCs8iLYtR183XP6qUsjE99zBMgPHG9Pdc4WuHght69VPcBBsxmDxRq
sVkXeRTiKn9TH39ozO6rgtd0GvwzyzQ6qiPMLHHHBgplRXaD00P1iCQKHpwi
E4fZs1gk3P8yhJ3ilAPM5ehfWYgEtD+Bm6JlRQEKWnMoY0lUmI4Q1RkDk6s1
JGxYIg0ii/De11TwrPZIoMYaXgyE+yslnWPy4S1GvYos9lfRF6kJokZ42i6j
enpVkgrUmQM1A5eX6R4aXPsnX1M5qMWjpqgtVnNZwBSf7wY/8QHsAbBZ80U2
ajbzbP26aBAioBFWyjsmAxrsCBQzK/b46vhxy+MuY/Xs2cCXbNuI5+U0qDP/
gjyfrYC6oiOOl/UaaFhqrxASVlV2I16kwD2tDpS55slWAlQFUup1e41JGWuN
PbTJuFapIziBctwheC1jSEHhboCBul4ts9vOh3PbULEN/lCcyaFsm7pnxtzg
OOkRIoQoCnqEeKEiQI6X+KKwI4sxWTerMe82H7GFHzma2a8XbFzoE2p8DyCi
BbPTDBnnAPM0BsybO4zKrXwFwUyOoU9328VqR/4jfyus27KBYNHVppGJC8aw
Okz+ShlDhs/HzAY7MSKRp1cZWPnd7353KunYrLsMA262wOScwFK/wDIqWeCE
AdmbvI0cFLlIvb77EEJH8MbGgrV6b3IuB0JffPHFIQSXUQhN7ifrrby2xVKX
eh8SjVWPR7PQOMljZn3kUV13OBjYq4r889o5nT3ZtSNin6DS0YPc2cDeHNSD
7tHKvrChSiKcSSE/i81mL+tZrdaRzA2Ib1zpscWUGy7AG1KLnqbi+TYNEWCd
PWQc6d/hqeR7cjzMl94gMJ7s4pNtVbBKe0dK9TEf+MAHTtX25iE5ltQ0OZ/N
L85q3xeyJ6qQLe/02unyp/q9twSMP5tK7mz5xxeCC+PhFLF/LwvvO6VbNeak
SIRuaXzrtGcZ2boVU50usmE+NRSBQTaolOWgRme9I2s1jEDXgYkctNRRIdHB
9mfCG2hpdzOl0ortkoAcB0uSiHuojUI7QqxF+oBcpUe4lMV1nbqo1Cv4HqL7
J2NQZHLWmZoRhrH/gAGb6M4U+/huC10A1prGNNQysZQGE35GzPk1+p1Ul5/X
0ZwwNBuNwkV4TksPxjgeRLP0nHchdJ8Oc+n7FM+L27n+TdmR7f2bIfq3JZk2
pybqhgVGWJnqWnc/XOIZmxVu5zoUjuLsX0mU62JiLZaXmTUsCL2QBjDXFXML
txN0QOH/Yr5PK7Zd3mTcnGZfnT5TC5eU3yMLLQpZRcWk1NiMuYH2C4uFv4sE
Rf3L9VUjxrU8mmrEbui1d8fGdWxcx8a17bhyiz7+mXjl0TbWscb0hKrYKBlF
AEIUKjh4BHlXJbHPWnn84x9f9EUxhovm4cY5zFN3mGHmHVniVcxrRlIxlvrp
09MLbfVOGYoX9GXxVA+PaV6jUZrzZfEbsmlbTX/cq5xlFctIsNLjZ1sTjIUz
/lac2nLujDPOKLpZdN2+Kdlw2udnPOMZ0c3UvllJcjGmJXJDit5k+ShSbGYX
IEW5yUeRQlVeSCHWhhSs7ZBCxm0BUqSolYLUaP6qV71qMpGAs1VeTq2krOLW
0l9z4LOtmVZr9V7bT6FazvzbdGofMQ7Q4LgAB2TeoqvmLU+beaebzbm49Gyl
FIeAiyhZoVnIYhaCtgJorEirc8SnviDzbzb1WLFCOJJ//ODYgyxlISabo4Yr
zNHjva43b/q4IcwzuWFw5wcVYTbN0+7ByvBmcF+vPri6iRwqQ1nj4z4LAn8r
01t0h2G2AekNgRYpwu4SYUtx2LijQo2zqNYJNe6RV5I7iAZuhjoX0S5xaQKY
R5XdPnbdWJGqX58Wbax42Cbf/YLd0ysvztCkSirbSDY4QQvXyWTwPzi8Kvr6
t2dTBa3YvR5qzIpvv2tShQTCwzQDhZhz25HqonZOpN11Uig5twtSxR5gI6gb
Fv6adoQdN+aCuCuvvHISsL7e3p1ZPVCzvuyyy1K44ZTgW2pexKw3o9wj2jmq
My+1T2bEoqTWKz3dohbise6X64ya+w38ceWFBRDOp0/f4cII8rXk4Y4XhvmB
wew4cJgLI340vzAMO7yr/LdYHFmYbCMjQddXKGXPsogMmV7ZCRXLeUy/Cl/c
HkOTUoseX2YaAttGOtHMLER2q1Ful+uSp5SOykLIojknlLToQlyvVvRqzd8I
LjDDRL7Ye1vVF2pLR5Vx59zxnH3SUv4bQcOUyZ52W2FdmafoXY9hgVYCgcUc
ErPblK0py8918K+YqtiqE4mFmgSAmKJHCYk5Kqli8Ei71iRLI5dKNOivkLYQ
Z2aR9/F9dY/MbiRPjJ2u79/2RYYrcpRNDLnlc537KHNd0N4a9uY6ehxuQ++C
wbQ8CqSIuGEYpnpQ3gidojqEhJ2952hfDRciuceW74YE0NnvH4gcVHmvwrfs
aT4UCXpIhATzkDCWHhILkiC79NLuSm4tf5lqQvgsUxaayj1AllS75pprNpNS
G2bzMQJ4Nv/iODAcNHSdvMlYH9rOKcmwR4oqkvCr1DjDjL8VXgcEOTe7tYXX
ZfIRmHGfc6goAaNJ47MXJEWmjQfILLppp3pNzNpYdCLtUK9tFgAKeUTgPerC
Cy+cyMOfMXTDDHlsPkJU27AkpKDiKarHPvax0zm6k6tXbLkdk4eolZdT2rQZ
eeIrUB+MJC8Q2F9/jrwgKDMMM59iMzIqITRmlWA7JGN0OR0tXD6uop8rSWRs
uK4nd6xp2qMV7kwk8znvnwu5k/3yKcuCUVOvl+8qB2gbhS2lP2BRcrtXCjW3
IjdOIzP0Rh6oPzfON9p3M3J7hnH7dJjkhigy6bzzzivD9HOl315vU3LXv3yM
BVXGZSlTenmwlV52L4C4fsaftSP9ZEdtjX+g/hy7NbZauz0IL2c3bHOnDg0z
MFbql014AneCVumTtHOgTTs7x2vMd2Vhs91gdqjfDXnAmIWkcWV//TkW9OTV
JZtJkj0kj2kzzc8+++xpiqDunEeFPGxL57QbhTy6uZ0rduwGaeDc6aefvnTh
xxb9W02bUBDu1AiYaaum1AXq8Zm2OIvCAl0nmaJ6QOcMKecIZKoVeRaddqbI
XmXO63nYqUoW1tSbybM6TJW84+h2zOWMi96z5CLeObedCZ2x2irQd+nbi7r7
7TBHvXCiYjP6YwGhAwb0TukPC+1dIhvGvwD9x1f11lcf1EBKEhOsOzpRf0de
vny0KZaMHXswy2QVxByEEplAYhFH69hTlZziwWJ1T8XTR+tYmZvKjFWbHu1j
ZacZa1Gwx8Z6bKzHxno9j/Ww9ff1FO7KWDlNRztdRz22WrcSZvqprKMTbghj
ZmnrXBA1EtERDT5ax5yG0D67d7TaB0drrdKxcR0b1/+JccU/luptfURT3Y1U
MT/cpwce3vgPez/XhPWzNzCfNNXo2+nINIRzKiRnpPeKsk7wxjSVpAgj5NEy
21pVx1dQj+eEETSpi/Zn+kdq29gx5LFWi+tkIvUEiNt5ftGPUS3brW5eF6cl
QxZOdMMt+o0dubyajlx/YnssdeZxckCK8LiUxYJJMlCuVULQp/sfYWCPlFmv
z2pvEKmH/K1tmIAiVs+i5BGC1FjHSmr750/k4VGr4PQpuzsy5vL6Pgegsa76
nSG0M9jWwHj2gEa3b4+2WkChHVwwV8RSbneWQtpfaxMMyRBMSU+gz5p2PvKR
j6SEgf4HCP/KgmfDRHdzSilqeUp2iPdgVa3+9N73vve0Nh73lvfhFAua+N9n
DB+4KA9xN9tL3aV9TwTcdcZkHoIunqyi4akLQuGWbWja/MTe0Ksw9Vp7BFts
7g1E1Z40tEURkpYIiJ/f/NAUbH5Yhr2UVmYi087zbaf5GpLCu/b4yTXiNGzb
1Dn7Xyqtf1mIlJvOFJ8+Y+/QI7omp0se2JBACYpst1BG0GNaJKyiGxsUSGeT
oMRQEYnLjQZyrfCtnpWU1FhVZMLB9qRsqusu6gr8rrlJmjT1XMo92utJqqIw
wXKrU9stiHTiG2faWcf2Nz4LbWYUMKxQ18YMbuOaZz3rWdnNUKpJJFhMX70x
8pmvSPOiKAvS0cC7Z0zY0hAK7i1S2W/Hmg7dnUJMZdv8poMgm6KWccrjO1hV
CqqU08yKJGQ6ChJM43Zb4/eVGQkFqscOtKytZtk9glZauhS4JuGagP097nGP
2j04fhp/Khy1bxwZu9zOSePY2YHyTo2iZQG9WSn5ehUkOFhNlwNU7VvgJWC5
F8HIsGAwRE3yzHzPNoAperFMjaPrAbC+V+T91GFn2SL7n7YgXLLs6u0UOfbv
iAEFUByGYSoswf3oaTyFLW/ZXboIaqguj1a5nlVXlGLnhxlq1qa28laIVlVl
t9WkNthU+y23kXmcFcWiBXQp7nYZ/FFse4CfGHrorxgG/XMO9D29xw9Bgq7j
+21n32U4PvnJT57wk+3Firib8JOtkrCZg9LwPWnG3F8NfttrYFrLzbb8kxWA
WRHrnEMG92fUpvGX2MnuDzvFEMnWtvKY2JfIae8GmjAUI9kSvOUtb1nUOgyG
ZJ+R/tJLL50w5I3fZPeM9GMLbvZIkiOb7Zc3Dr8lkidyKGLQ/61GPOghvbCs
5+8BevIGYRTwOPb7/mbF9/GN5e46Zdl2yQ3KFFN6RVI/9Gze2H/X9EkIbeYp
2We65Lnr9efatPu5gzRSdjft7rY2CZp2+wrUot76jYztXNPjb7O9M1Bhq235
IkhSTdJTpi83yHcJhBTv7xSn1Inv9zj1DMlQvJWpA0h7u3o9UPn8889fFK9x
wuwo0eoOJ1wp1aLZxgeN5/r96yL2gYK2JDcdTFr312+SoXP8bHTlhYV7iFFT
wdGKceuGfs3Oy1YB/Xa+i2DUlAGpx6ihc40vuuiiqWPKSkDGuPHb+FytCNn4
LYV/2cogO04RAcXLCVUIRbcGhq2AaTqbbZPHxJVGDTDZNqY/T472ht1pNXYD
TJUBxqJIaZzm8VXVZa9VB0Vtsxhsy1uidC655JKdgpLC1bDQg1LzS6z4GL1d
K/20F91rX/va4JMPxSq3lT2XS2miDdyolNxWnw1s+5Ty4j3AJ/lmdB61v23p
3jfg71SG8o0Qn++T79KaqVyJDCUQNzw3OxmZv8AMhwnPilJEdKHRne50pwkl
QgFM0N7932qDPEGdnLNMwO5T0GniWxFjL8QmFBqLMqz+RdG2E5gRfF9V7fxn
blax6Bc1EYNMDkukcx4D5BohZ1M5UP3l+d3nNBU4yIbZS0lXq9uPgfWp0m+z
LULH9WRqEgB7aCAuBrv1KhbpVtqA+hUhIbse+chHts2C9lW3nK9k1R/ykIdk
MfmzXN5+gUlOEUxUPjSw9k/ZKoX0/k7n8kg1iBTKxaXYDV4IbOeKkzsRW+wj
++IsWi/zgLaIGF71XN5V3W9PSKXHnRuneHwFAa8zb6JFLm057sPOa1t+pe4d
BZh64iOHiYM+fLwzHKxV4wK1RaTELuilwj29v8GQePjDHz5JJztltbjetP4K
hEUfEOfQ678+2WN6RKgUj8MZIJzCtM0Wf7tAePQQ3cJvHjou5lekUrh/kfVW
wfEHNPLAJu5W/Ey4ule3sxy3d+NW3wdqyEezO/nESDBV7hifEofBbxYf3kQe
9IJk8XcRPN/Z4o+vircafUU/8c24wFKxSFM1ma2+xZE6Y1zzkGYjn7bSKmwH
hLS7y923WOzFYk3jTm8b7ZZxf9JmtyzcyJnF5rUJlhBuxkSSFHJk+Jp+EmaK
NcgQiZHsYKsUcXpSN5O45nsYRSK456NIbpmXPWTEzADvhLDVY7hXdIghx94I
gbKv8oMe9KApChC1q4PCwdQiZMY3DozfI9bi/s7XqPUb3HGDRQxyIKzd27QC
R+RrpYKrwwFCdsTtt7JHt/Z+p4WBkH3xeJfzu8sBh40Oymq3eoZREgou7tHy
3r5BiwYRvINle1uXpZ5eTI2HJHEoUrFpbwdLm5UlEghp1Z11CX1f93xIILCo
Eefyyy+fIIHsrrPJbpYfCdpy1IMZ450LWjFPaWMhDowTr8zvdIePNAsJVOU5
AkrNsW07Jq1Wjeoe4u1kgz2Rv27B5Y+Jp3MmO+j1O7UniLiz5V+twSO7y4Gp
DRpkZHq/rbl+Szdv5ygiLEU57VkSa3wHuVSE5US2guYJBqQ0L0E2li31zGc+
c9rnzTnBTRDJe26LnjvY/syqo5v8E63XZ15WMgaBEKhifgFzmpn2e9e73pUN
lVk1SrrYHFjE62wiDNGLloNPrGdNr7322rPm5kNBUoR23150qfMGQN/n1IG+
v0m9Xn311TG4WbFcSaaCfQG1ueWtIouuPqOdNqMEhS6Lz7TUBx2srCFl9WV9
k//fg9W/UzvXu1F9f1POJXxjOdsrQaYN5nzO/v25Dmna2xTae7I3fzM4Dda2
g9x0g7lFE0JZMfoA0/CBWFO+V1YtK0bW5WXibVPChVdsrN7YV/0XWGPUlaFH
BHgyh1fSt9/RHTRtqXGYxRpHrNik2wtmKjYh1tq+OEft+I/WIp7/Y+M62opo
M670sutA2zAuapVXInWbcbGdqf1+6yn8SaXPbz0lnzW/9dSGtO8Ncx2PjevY
uG7Q44pXyhfmI4sBRV/xmtQteMaZ3XVJXyS5emTr4sZyPlaNdtplPxcNF4++
z/huFgKUe/y6172u7/qWdPNOkQR5GI088elZsSaZc+oGi58yDcyF4q3c848N
cdaqABZE4wNJzIvRFDdg0VxP3MPUk4geeaUCVyGd04zz9g7upbxamSXLxRRb
FA3wWKEYedqQTBA336vW7rImiI8NocY6Np6WdAmrjErmDMvmLlrYFGpxmGWC
ZX8Zsw996EOngimUVFQFQSe1RVJZ6qWIoqg4jNNV3JD+pRH8b5tLZVOS9vbt
+ineC/tbGAPT7sJ7STdrXhZlNgowFVcKWfA+FDIK1cU+R1H+mw3/4vNiCWEM
JVnuyzZJbSXHzDn/3v/+99+uPcqmEm4NPh5llm492/Zo3IeK20jsFHcgX1VO
aZT8IjUKHFtfFQ99WRtlrKl5LGT7mZRX+q70EwwU/2t/mxCwJh7Dreqhsd2O
NZFJOn3BcXwp33iOA817Hz+NkLBbT5+zNZTy7Oxthq5mk2P2qukxMSgNPOPH
sTAgZXontFmS3W4LdWWIiezkVd/9VlN2m0ifcbLKiIx4KOF3a2cBuPUOYvna
a6+tL9BrWw05oIIFKEzexzYhQb4tu/jt0FLtLegAF8gQSUyKAGJgqoUsSzvR
WXaH8Sl8jmjiIGUGKeqEJvXQuBi+XaJQQsgtt0AsITaJTNW3WLDQNG+6Fk/Q
668sUFpFFMrtZsnFca995aSu41zLRRUPOrcQZeFYWwaBNzumCijaqWce24fa
XSpFneQb+ZNokrSH4ZBHfZ2vfgGVZAHudh5GrgMFWwraXT73AwU70rkuuVdR
sFZBW+Wqz8ZDWmA08wiiUZUgE7BMbANqs1ltUM5iaRXy037FtlBEeqtHrtNg
wmVoKsOEbp7XV9cJO4nEzeA+7nssCkeuWwOrbE2ylwiRRdPt27evjLvgtHyT
pnSwGqzNbHfYUTqK8WN8tOUNha672Cb/1u2ctAJ1NkwyZSSjoc8KlMZHKVug
MxKrMTQQKXJpKck+xR5L44vqpumakjhx7oUUXgfBW0xKEczEo3t2d3+Fsmyl
fBcHqJcBm3zXzqmeKZ36s+3copljAo+Tqbq+L6RkrJhroEn0gGZZgqVFjaJ0
5RAErTB3giVYyQJip1QRYiVJcYc1KQ7xNG9r0l6VOcFdGga0Odf9jrqK5LwQ
79BwHwuQN+5IO0aJJXUVajqoyjK3DIGYJHBwwHp3Dunt7ZwhMG+FxhVvLCvN
KLfGOZKmedkpjiqc2lf+EQZ2sXEJUVqYIUH8Xdh4wbmUGIna41z1UDZBzCQN
PgXRZzRqZ3TOFxpl0MlrpypMarKYziED1EdbR1lBTF6nlFEEvbNGiJVqAuc1
1vkuoeQ6AmCnKD9UuWzemZMMEN3dXs9UDwIHp/aVbYuivn9dU1DvfhtfS3ri
VLek3sK4GVUOwpAwdlAWkm5FImWhRJUo435KcpN6THqgEzZ5pW88ETaGML+t
lvNdcWqCwDa1Ga6XdKWbK4KA2eK7BarTdZgzHkrktpIkLTwOedszzzxzYnTC
tOmkWLZLe4h1flzUUsjFbRF08+LnoEwurzlrU7CczFU44X7768+1Sv0c1Cmy
l+vCB065TTazti9TYa0QltRMDVmwDAfwQlFnNDJ3bkMr9IVyONenjFDGidiZ
jXBlqr3uZ2zh3U/ydqf8sljZ7npV7hyyHGwykoJE3im/aOzPa+oDLA5e2kQC
QHMlW6xaxoZvpcck6jN/16TuN9ep54sWyTOkF0LP5UZPPhNvY+xVG8/1iaM8
g8GW9oKU3DOKFA0YexlrHg2ojVTTVOSs0ikwnju+Blcav9YDcKM1IiKKss4I
SEVsa7PHoOt6YqFUOTz96U+fAKpI2rli208ApYJZdPPluyzomUmxNr0sjing
oLaL0A/BzADvDNvwjUe5jXagvlWDMBw6vrEuqSpOsXO81H6au+Ebaz5fVUwH
9h4qAc2AFx7gBxrr85///J0aVYRXHLlAmdEWlbNZVbFDeWzxIVKmImbCXJcs
4dFy3FCuL9tURpWS0PHc/uoPNmrWfyq4xF5o7iLeVxqBSXrBiaFjQrbRxlq6
ffX2zvENC5Z6mcP4F9HZjGlihjFB6NvZLcfvsuT0rmRt8bB11FB5PXNLXl9o
e9MMiVMtTQS+1cQ8viJqs2Lq1boaYgZYDB8UP3e6OTmZptPcnCeiuHbYhl+s
loGpkMk58sqKDh2/GBN6GeH+Ns7NXkC+G34R5ZkvYhImmK9zJvicY0gUg2TR
wHV4hSFvisXUnB5juhtJeKBmntubM+vBorUpuoNR4O3j/fIwyYQisDiGCURV
j+YNnGGYjpz1n89CHqqIy+/Vys73U0hovLGZuARefYmfxSbMOWzCkQnJMr+e
TRJTFdjJO1/7yuaYJ1lSn8HEp9D1emGT/TWKaaqEAsvbUllCQfFikqYsmwBF
ZeKlMG8G792evjnPBzzOrflgf90XmObElKQftcUG8/0iOyKfdgPvlGUXebur
suwR72uV/eDm4MGD1U7w+9S2P2q4hHpSmU0Kgk5esEPz2JBAHCFNs+X/uMqe
oIkE8nKOwmq27XROVI2wmXVwrFY1QQE6cMbs/fUrdecmKmI7hBJ4hlS4c1pQ
HOac1uwYnlRPQ3I9dCgY4xOf+MRyjXdqrSTfVr+RXYyuFxSPSRFY4mFLXHCG
+JfAkGLkLKgGlzAauT7/Kmr+Ibt/a/yO7z1HPitp+gJ0gnb9WzcPB7w7LStf
FLzo4vsEqsiP31/zmtdk2mLdDA/DSlk5GSvmyjpQciZYxU9FXiXGQgFBJDSx
IJmBmwV+Tmz3hArnDBtj4MWoNeY89ybTFa1ulc4TknvU9oE6+ag+hIF8dL2K
jsBEskKVR2LKltUzZnplDEGQclwwKFe/LubbhyD2GMUZMiSmuCS5WfIYM3PR
4/BCqBVPt4cp3Ote9+qjEN5etzWAR5kAnKLuqQDcDWD3qjQ+gCVdTRGZKBSi
tDh0GT4/lKK3ncBa4xL2fBI4DnvHZ8gia2kD3AygeTWBqbUY0BSwoaPaywG3
BCI9hgQPfvCDp3P82Ba5m1Ywfd0CN/KHOven9rq1+vi2sXU9mKAf+tCH9hB+
NJh3qPTw48paU7nvCEg+onwcoZb1o/liNGZCmWSrAK1O/mmnnRZagY9EZQ9J
qPY4kIw3BP1tf4R6SGZIvqipjUEgUXK4EE3Rfv9KvMMp2j+9nSPM8sbC3E+M
pqnhqYFTl21iscGesFX2gsjKUr8iwqLyoR3dNo8zVhsLrcxnOkdnCUr2GQyh
sPQKxVdDP+MRaIwhv4sywPEWq9WukmTgzArJFHRNTQJUDZu2qa4ah7FcM1Sd
WG1xpmSrK67sTUjamiY+tHMgUmztANTjyE0UO9iGoq5XbsKs5Gp6hKGw9smG
xspqhqvQPd83PX64ldwMaVulL/v+gJZW27Y/YKt05eltTMiiG5A6pH5f/vKX
T6ssMMSNEPVLjQW9gS7cotRimGteSz5yxIGqKPLSSwelYBl5emkHznMIZMZg
UbWTgBBmdt3srUXjS5biAcSw5GlCLBUdbrQ+u0qdr1ZPzlRpdtnmIqgnZSC5
IObFMDMkmwaMwmf2CnJeGzmIIQqpErQRZJcB81V2pNuUx9623dlCiq0TYewE
kjUNCSQgjYXdiRVPKAAMtrgk1oE2ElntsQUL2OJQ2JpvSBAh3qYhgXXVNyQw
UJvpsCncbt0ASzARYoRRuU9d2WV+b/ClTydtSHduWHLzJKMctJycHnyJDtl6
NSoOHWhVWNPuoT/ola98ZYK42JSB3eyJENcdY/U4bP5V5FYAxU5b4MWwmynG
EKiPBPUvTbVmTNNY9kSSc/grkrVvi7jjFvcD2LzF/Q6bXJdSCXlgefBF2h3a
OwWrJwJyRb4FD/5MTFougKZIMl2iUpCux0Ov6IIHfMYiaRUJ4XSGN+FOIvRx
KyN58YtfvHR2O8fG4df3wdI+np/7URChTEqw6CtQxN5lSNEphGuf+qCKSYfe
Tqf69mJPyO0WIg7kdtQMKOgxzn9ftQra6bLIDkVizHnvT6xiiq3tXFEPHHrB
BReEBY62Kb+oDRu/Mwo5InieUVkeerQO+8XtHBZPV1NU+9E21suOjevYuI6N
69i4bqDjunU7x4Nkl/sUrchIENnjiGdAopKpivnUIzyntCswfBQtZCc7vxev
IOpsuynfuJ7bVy1BpplAaLFz+pedqf3pN34WBvAUh3oEVJg2fR0jWaLf/OB7
tnPclOZSf8wIxU6m96XIRCP02775zW/eGaFWq1nb6hxq87ha7QTnlAymGTrU
4tNwk02fG892LRTs95pS7+JTqCV5z4r26bwjTK0Yhrw66Z+hMzcWJRFAAA1z
X7Bee368b9GOpH9u1M7ZjSlboPU7KFglr/MOXZAy390DumTlcRAfWqf0vvZu
zmbrzm67NPah4Hbe+zltsIDNgRY+Lfesp2tKrfyNq8FiQ95iU49xlrHtIpHd
dGyI1vZtF9utUtouOKfKvxVLFJ8vRBZaSeJo0cWL08Qsll0eBzue4xJ7xIwa
65WdeA6yNQ7BblQwvGSvhYJSWBlnSxy37RjWdhK5cXXUBBIFWYEH9fM57qjn
Cao7R/ogo2sKrZO0d4mpY01FF30yx7m+lUoUIJvZjkM7sfp8VsKKWJk0xOTF
pe4vx2ZRi4qob/lqWybkz4JWY4HE+Biy0qOF3PfAFwxkEUUY87jjjmul88fX
VFFXlVFlsIAS103kyIzLDEdHeK0GoDGY9RYu4RQX5rxr+7PkmgiKKBAx5w4f
+MAHAuL0VwicuUTUar6/YjsQp7+CyoEUIxHE26y/YjeIxrfybzp+cj/LKDsl
XJ4yACkZ2QOl16IT6h7wNuoUxREAbwZq5BAeNuQR1LeqrjWpZnrWRtUxaW+K
iThQ2lKASlBkQ1WACdfRU1lLaLPWvscttzJWQ0OTlKBsEG2hMqqPRW+ssz+h
5v0tkeiFJVOQZQlT+YZL1IEvLy9P7RhtX6sKYxhU3JdgjvkBjWcLxpDUSa7v
AuK3bMPFhHSm24sXITkS6OhpL2Wvq3TWWWdN3OaxwOrTnds5ckkb5yxHNNYq
CscLeWYHprwH1ZukElrrC9ITGl0sFDbOSSHAqE/Gc+DQsswbunIOF9mWTAxV
BXaQzb5IcjEVQ+AjNeuQxLr73e8+0UKoNzZLXwk0D3FQZRCIzUYMqfNIcX6e
7xrZ6v5+lHZ2X0shl3JDoX0JpUL7ZQuVMYG869E4Ogge2i5szUg4odLEfNAV
yxiz32EkTXVC/U960pOm/CAoo6NaFmveqmeyqdUukJsaM+gM84VZZLPTTqBU
iUkU6hgJNLIkg1qrAj28jb5kEcqKaTUFumlDGQcCSGmc2CMqoSxdBEFbtU0s
iubN2iYY0EFJzh0OmrPHq4afNKYEdSyFVBCMz9g/lbiTBlLXaZtobZgZSg/i
vhwvzfeZGiU4X1nuuva+8GmZtKolQ59zNpvSq6UHK0OGoLRe5H7ZNrkInuk6
y5Vt7AITRha57pC6udvd7jYxsRLFVp43dZvuAWpTbBBPTmB8f/250ic42hAP
VFlBlrC/HKhPNvhsitKXfXLYOe2jQTZZML9rOnMmu6b3O0AJzdona7mWvK5W
1YgrnKcXmMyRhfh6fvyLNkMsygWbNUN4Br/OcuzrnnG4XGArtxSCBSo4IJ07
gRTj1HftHZMERUwG9nrhjohO6oDF0N+SMJknV1evMoldrzqaf6mNjjmGX88J
sqwb1c6+alkwvOTGylL1/UUo1t8ySJn1wNbyuMqEVtYBoYlyiMS4dUFwFpZr
lpLqPTC1T+7OZUf2NAskZd8TwGiJDVK89xiX2ubNuY5uc66YXhNPZDvieZ6Q
jn/Ywx42XZddFvrrVDOzUn0KhnbT4LAoL6TBgVWdyub5Bgcr537EZrG2oyAX
ZQWYna87tBTZ1z858o7N60HBFks7XMGKE4Gxz3DHFWzXRF5ydxELdvF8w0q2
+YyDvShXkOGrq3V7i4krBBYtLGe5UCJcgfnIF9scbMYVGTaiyCz3jZPa0uDg
yiuvnNYWpyj90I+6h+yQwmOezv7Ws9v3AqS6hZlr7RJIYaQstZd3Z9hMtJT4
BuLZEF4Hc6YS1cLMPavRXPUHWDqYcTj/0ksvvdmCw9wLDli0ZYGGVCzTXo61
U4XAtDM7IYQ8hpJIIXaiH2yOVlNTDzhm2zgEtO3jmSEhjWgHV7c8M9iCjQQe
KwaP34R0O9UMVs+cqPDYMsgEnDiXqy8uHEag6Da2TGxkhPCgYKuqafTLs3T1
xW7LEmMWPq9Pe+Cf3qZNmB3QFF6NgTVwz2PbJtR3bnTLyzgEOgQgVGgob3nU
ox61lLCMcyIGKE4kNFxvVca9KF5JBAuxXQ/CYt7nmHlgQqAMrcSk6HoQmPIb
bejjq9Onnk19ioN5DwcEGMFmasWwSZkY3y26LbPYDnaBEYgx2e1FFfNao0d2
mGDHKhbJ9cJk2UZ3K9iBLEoUO3aCnVI6HpzXqi23qVIvIJqDt6LDR6WI8yJN
BVdJL+06YjI6FNlyJt4uKDWfr0KrWSPzxoj27zu3ryCkDlrVL0SWIMsUGBxZ
N29MVAaoqW436EwsQcug9erpv1mTwaLotJ6+T9XCjLhzca0ycyGl1JmmySDv
glUsJ39hOiggakaaspJTM4s3OcRC/ZnCdtBcbc8h0dnEFAXUi7Omsxy8mACB
JaYSCrH3zWawzHWMnBaKnyRfXvUkMpewPdgjCTimjErIDOlyjfAYG0pBD3vL
841X2Oomu8fraY3olJCV1Iw/ba6xVnWSUWN8IkbNYTHfsnByAEvjOxQmoyE5
OXe/W7u7ReOet8bPvYCoKO1mbQXSIIcDUWvLqdGo65/fy7nMFAOKiYDDavcV
Q0sdMtuiwDajhoK8i2BRVEaf00g4YMToeM6bhcxwxiUb0dcboM6dfvrp0znf
c64XwK4j740TY7NJMjXPbvGaenDxCgX3DHCjFdNMnMl3yF4LeY0Bi+kJT3hC
JiEgI1huKYM2LKprod/c3YQEnJitiZJRcpLNJlx83iBws66BRREoNjTfNSBT
O981sB0CYyZz4vIym9xPMx2G8ildAyqQYyZkLAKv6bgMrljvJKVPCczIsiUg
HAzFOuoxxFnkQLPy+4B+OlZ6Gy8eYLDL6WTj9Ztd71qjrlc/n+eYXReQkDvn
5ToRloQ5RdB62ytH0v3iVnnFLM0sLt4ERR2u1kux7OQfst0OBynV3awqLMgk
3ilktiv/V2Swc8isVq+Hr8npEuVm8/TbqLQ8w1T+n5eVMfGz26Nz0laULSfx
/PPPb2Mbs6kRO2Ii7Kzx2QcqjBQB5EBHtdlh4pk9t15FiTkl1cY9co1XLIQO
xg9OPsW+I3YSx9mlcSYSlVdqCXohOYFA1vN5M2U6WaYWFxsS+ZQ8rDy2v8Uu
Ma0Cx7wtiHpO6UQK+0Vt2fVkl0f1qKHyD4Waa665ZkNhv2mksJ9SLi585Lg/
AyBvhmFFxqeQm2V1KCBJpAVIpLG4O29IA3Eh8LQwLKLIoMgqfkP2njiluwc9
QsaQT94cHaoyL7gneSFEGecEJKkL486R/oAAuFgJS9k4Mi/k1WdgvPzYNAfQ
WWRR262nfmXZzKMXOEB5kXI0mej1DtGUDUbT7UUgsd1ZZJGBrS+gfsqrC6xT
q16YzpkrP8yn/rVHeW7S9+a9aM0/IQkialGg9Iorruhr/rn46dYl3het+b95
IzOzgaHq1sWT6UNmAslG0+/axD0pmm3pvu0cx4e2EqJf3WTGfX9bSqwTPORQ
0ZL8gcJUMVaYxK1rsR6IVaRVBIb2j4WXeH3aNwq5cRz3y2ZjdsGtV44idX+t
92F6uMA/iW1OWNui9aR2WWxktO3vR9YV6NynXQbx7Pz+buINVMb0ypT9lYHc
jTTu7yawUsgYx5zgFuXzqS+aZBqJIt2vnWstpPVTWgkIcdjJwWYt9ulJjT70
oCf2A11qb2xa2Y68YwRKenhMTY0/48K6ov68qM0WqIgkWEvXFFHH7y3gOqnh
ggoFaZfWJsDxtoRf0zhL9253TBR8/o40fiFMgJ+d3exIk1G2/cXqFd/ZaOXJ
tIAnc3BV2JVzoRU7JE/K0zh7RPQWtJr9+uo2HlhLD9EtFvni2/5vXPTBrS56
X7voA1td9M/jRcf9f3DgvpE=\
\>"]]
}], "Text",
 CellChangeTimes->{{3.7427266884449024`*^9, 3.7427266977113185`*^9}, {
  3.7427267835582695`*^9, 3.7427268037447047`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neumann BC on the left", "Subsubsection",
 CellChangeTimes->{{3.7427311193490143`*^9, 3.742731120363016*^9}, {
  3.742731247175639*^9, 3.742731249219242*^9}, {3.742731334332992*^9, 
  3.7427313380925984`*^9}, {3.7427363935641747`*^9, 3.7427363954673777`*^9}}],

Cell[TextData[{
 "Now we use the Neumann BC on the left with the vanishing derivative so that \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["w", "L"], "\[Equal]", 
    SubscriptBox["w", 
     RowBox[{"-", "1"}]], "\[Equal]", 
    SubscriptBox["w", "1"]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7423037572289796`*^9, 3.7423037758086123`*^9}, {
   3.742303902075234*^9, 3.742303957096531*^9}, {3.7427282603720636`*^9, 
   3.7427282606684637`*^9}, {3.742728635100322*^9, 3.742728642541535*^9}, 
   3.742736384438158*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fdSys", ":=", 
   RowBox[{"Table", "[", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"we", " ", "assume", " ", "that", " ", 
       SubscriptBox["w", "n"], " ", "starts", " ", "at", " ", "n"}], " ", 
      "\[Equal]", " ", 
      RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"n", "\[Equal]", "0"}], ",", "fdDE$L", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"n", "\[Equal]", "fdN"}], ",", "fdDE$R", ",", "fdDE"}], 
            "]"}]}], "]"}], "/.", 
         RowBox[{
          SubscriptBox["w", 
           RowBox[{"-", "1"}]], "\[Rule]", 
          SubscriptBox["w", "1"]}]}], "/.", 
        RowBox[{
         SubscriptBox["w", "n_"], "\[RuleDelayed]", 
         SuperscriptBox["x", 
          RowBox[{"n", "+", "2"}]]}]}], ",", "x", ",", 
       RowBox[{"fdN", "+", "4"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "fdN"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"fdN", "\[LessEqual]", "5"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"fdSys", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"3", ";;", 
           RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "//", 
        "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["w", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "}"}]}], "//",
         "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< \[Equal] \>\"", 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{"-", 
            RowBox[{"fdSys", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
          "+", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{"-", 
             RowBox[{"fdSys", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
           SubscriptBox["w", "L"]}], "+", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{"-", 
             RowBox[{"fdSys", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", 
               RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
           SubscriptBox["w", "R"]}]}], "/.", 
         RowBox[{
          SubscriptBox["w", "n_"], "\[RuleDelayed]", 
          RowBox[{"Style", "[", 
           RowBox[{
            SubscriptBox["w", "n"], ",", "Red"}], "]"}]}]}], "//", 
        "MatrixForm"}]}], "}"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423031149654503`*^9}, 
   3.7423031548391204`*^9, {3.742303209111616*^9, 3.7423032326364574`*^9}, {
   3.7423040224606457`*^9, 3.7423040433178825`*^9}, {3.742465152479994*^9, 
   3.742465163337613*^9}, 3.742721252836954*^9, {3.7427247551907063`*^9, 
   3.742724776344343*^9}, {3.7427249455578403`*^9, 3.7427249700966835`*^9}, {
   3.7427256980593624`*^9, 3.7427256982621627`*^9}, {3.742725862546051*^9, 
   3.742725864074854*^9}, {3.7427276144499288`*^9, 3.7427276293479548`*^9}, {
   3.7427276784412413`*^9, 3.7427276859604545`*^9}, 3.742727719952914*^9, {
   3.7427277853960295`*^9, 3.7427278106368732`*^9}, {3.742727956264129*^9, 
   3.7427279594153347`*^9}, {3.742728815452238*^9, 3.742728828493861*^9}, {
   3.7427288899901695`*^9, 3.742728899537386*^9}, {3.7427293700352125`*^9, 
   3.742729375479622*^9}, {3.7427517482261915`*^9, 3.7427517786774445`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Convert to the compactly stored band-diagonal matrix (to be used by \
\[OpenCurlyQuote]banded.h\[CloseCurlyQuote])\
\>", "Subsubsection",
 CellChangeTimes->{{3.7427311193490143`*^9, 3.742731120363016*^9}, {
   3.742731247175639*^9, 3.742731249219242*^9}, 3.7427313686530523`*^9, {
   3.7427364082906*^9, 3.7427364091954017`*^9}, {3.742751596437925*^9, 
   3.7427517042965145`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<i = \>\"", "<>", 
      RowBox[{"ToString", "@", "n"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"-", "j"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"fdSys", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", 
           RowBox[{"3", ";;", 
            RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"1", "+", "n", "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "<", "0"}], ",", 
             RowBox[{"-", "j"}], ",", "0"}], "]"}]}], ",", 
          RowBox[{"1", "+", "n", "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", ">", "0"}], ",", "j", ",", "0"}], "]"}]}]}], 
         "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", 
          RowBox[{"fdN", "-", 
           RowBox[{"Abs", "@", "j"}]}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "j", "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"-", 
       RowBox[{"Max", "[", 
        RowBox[{"fdD", ",", "fdG"}], "]"}]}], ",", 
      RowBox[{"Max", "[", 
       RowBox[{"fdD", ",", "fdG"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"-", 
       RowBox[{"fdSys", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], "+", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"-", 
        RowBox[{"fdSys", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
      SubscriptBox["w", "L"]}], "+", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"-", 
        RowBox[{"fdSys", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
      SubscriptBox["w", "R"]}]}], "/.", 
    RowBox[{
     SubscriptBox["w", "n_"], "\[RuleDelayed]", 
     RowBox[{"Style", "[", 
      RowBox[{
       SubscriptBox["w", "n"], ",", "Red"}], "]"}]}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"fdN", "<", "10"}], ",", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"\"\<\>\"", ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\"\<j = \>\"", "<>", 
               RowBox[{"ToString", "@", "j"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "0", ",", 
                RowBox[{"2", 
                 RowBox[{"Max", "[", 
                  RowBox[{"fdD", ",", "fdG"}], "]"}]}]}], "}"}]}], "]"}]}]}], 
          "}"}], "}"}], ",", 
        RowBox[{"Transpose", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"%%%", ",", "%%", ",", "%"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"Dividers", "\[Rule]", "All"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["R", "n_"], "\[RuleDelayed]", "0"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7427311366182446`*^9, 3.7427311994083548`*^9}, {
  3.7427313717886577`*^9, 3.7427313719446583`*^9}, {3.7427364145618114`*^9, 
  3.7427367837832594`*^9}, {3.7427368444609995`*^9, 3.7427369263299437`*^9}, {
  3.7427374974625463`*^9, 3.7427375367278156`*^9}, {3.7427377172825327`*^9, 
  3.7427379365253177`*^9}, {3.742738063805941*^9, 3.742738238496048*^9}, {
  3.742738590931867*^9, 3.7427387213948965`*^9}, {3.7427387752149906`*^9, 
  3.7427387841538067`*^9}, {3.742738815884262*^9, 3.742738856194733*^9}, {
  3.7427389198116446`*^9, 3.7427391643108745`*^9}, {3.7427392030613422`*^9, 
  3.7427392045433445`*^9}, {3.7427418086661277`*^9, 3.742741808884528*^9}, {
  3.7427439546462965`*^9, 3.742743955551098*^9}, {3.742744060320882*^9, 
  3.7427440857021265`*^9}, {3.7427459108661666`*^9, 3.742745965653463*^9}, {
  3.7427517517205973`*^9, 3.742751755480204*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solve the example with the Gaussian ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "PF"], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.7427311193490143`*^9, 3.742731120363016*^9}, {
  3.742731247175639*^9, 3.742731285832507*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"test$Q", "[", "r_", "]"}], "=", 
   RowBox[{"\[Rho]ADM", "[", 
    RowBox[{"r", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matA", "=", 
   RowBox[{"fdSys", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecb", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"-", 
      RowBox[{"fdSys", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], "+", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"-", 
       RowBox[{"fdSys", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
     SubscriptBox["w", "L"]}], "+", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"-", 
       RowBox[{"fdSys", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
     SubscriptBox["w", "R"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matA", "=", 
   RowBox[{
    RowBox[{"matA", "//.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["w", "R"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["P", "n_"], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "/", 
          SubscriptBox["r", "n"]}], ")"}]}], ",", 
       RowBox[{
        SubscriptBox["Q", "n_"], "\[RuleDelayed]", 
        RowBox[{"test$Q", "[", 
         SubscriptBox["r", "n"], "]"}]}], ",", 
       RowBox[{
        SubscriptBox["R", "n_"], "\[RuleDelayed]", "0"}], ",", 
       RowBox[{"h", "\[Rule]", 
        RowBox[{"40", "/", "fdN"}]}], ",", 
       RowBox[{
        SubscriptBox["r", "n_"], "\[RuleDelayed]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], "h"}]}]}], "}"}]}], "//", 
    "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecb", "=", 
   RowBox[{
    RowBox[{"vecb", "//.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["w", "R"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["P", "n_"], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "/", 
          SubscriptBox["r", "n"]}], ")"}]}], ",", 
       RowBox[{
        SubscriptBox["Q", "n_"], "\[RuleDelayed]", 
        RowBox[{"test$Q", "[", 
         SubscriptBox["r", "n"], "]"}]}], ",", 
       RowBox[{
        SubscriptBox["R", "n_"], "\[RuleDelayed]", "0"}], ",", 
       RowBox[{"h", "\[Rule]", 
        RowBox[{"40", "/", "fdN"}]}], ",", 
       RowBox[{
        SubscriptBox["r", "n_"], "\[RuleDelayed]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], "h"}]}]}], "}"}]}], "//", 
    "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["r", "n"], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "fdN", ",", "1"}], "}"}]}], "]"}], "//.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["w", "R"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["P", "n_"], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "/", 
          SubscriptBox["r", "n"]}], ")"}]}], ",", 
       RowBox[{
        SubscriptBox["Q", "n_"], "\[RuleDelayed]", 
        RowBox[{"test$Q", "[", 
         SubscriptBox["r", "n"], "]"}]}], ",", 
       RowBox[{
        SubscriptBox["R", "n_"], "\[RuleDelayed]", "0"}], ",", 
       RowBox[{"h", "\[Rule]", 
        RowBox[{"40", "/", "fdN"}]}], ",", 
       RowBox[{
        SubscriptBox["r", "n_"], "\[RuleDelayed]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], "h"}]}]}], "}"}]}], "//", 
    "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Inverse", "@", "matA"}], ".", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", "vecb", "}"}]}]}], "//", "Flatten"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"vecr", ",", "matx"}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Full"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "sol", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]sol", "=", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Alpha]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " "}], "r"], 
            RowBox[{
             SuperscriptBox["\[Alpha]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}]}], "\[Equal]", " ", 
          RowBox[{
           RowBox[{"\[Alpha]", "[", "r", "]"}], 
           RowBox[{"test$Q", "[", "r", "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Alpha]", "'"}], "[", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]], "]"}], "\[Equal]", "3"}], ",", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", "40", "]"}], "\[Equal]", "1"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[Alpha]", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], ",", "40"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Quiet", "@", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"vecr", ",", 
          RowBox[{"Log10", "@", 
           RowBox[{"Abs", "[", 
            RowBox[{"matx", "-", 
             RowBox[{"(", 
              RowBox[{"\[Alpha]sol", "/@", "vecr"}], ")"}]}], "]"}]}]}], 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Full"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Row", "@", 
         RowBox[{"{", 
          RowBox[{"\"\<The accuracy should lie around \>\"", ",", 
           RowBox[{
            RowBox[{"Log10", "[", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"40", "/", "fdN"}], ")"}], "4"], "]"}], "//", "N"}]}], 
          "}"}]}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7427289190530205`*^9, 3.742729298477887*^9}, {
  3.742729413715289*^9, 3.742729422061304*^9}, {3.7427295184382734`*^9, 
  3.74272956764276*^9}, {3.742729625316061*^9, 3.7427296463760977`*^9}, {
  3.7427297077310057`*^9, 3.7427298430300436`*^9}, {3.7427298766481028`*^9, 
  3.7427299091897593`*^9}, {3.7427299416534166`*^9, 3.7427299975171146`*^9}, {
  3.742730056266818*^9, 3.742730180880837*^9}, {3.7427302279305196`*^9, 
  3.742730294823437*^9}, {3.742737654866823*^9, 3.742737688921683*^9}, {
  3.742894352202921*^9, 3.742894375712162*^9}, {3.7428944757707376`*^9, 
  3.742894483991952*^9}, {3.742894525519225*^9, 3.742894752203223*^9}, {
  3.742894787927286*^9, 3.7428947923264933`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1zWtIk2EcBfAxxhxYq7WySWRuXrKLeFm6edt7dDbRMiorrcBoNDVMKvOD
H4oIs9ZKohKiiFglrcuaiStUKKOiLGZXzDIMKmp7p3vXjSWuoNTnf+Dh+XD4
/47avHOtRSwSibT/38R/9sxE3nHHer5E2Sp9nHYyP7n2DrOyxurjRFOB8k79
eu8bH1c1GSlWeJ215kKe6/dMZBpejPEPjz/muSlPgVid4UTpBj/rZ6N4yPU1
0utnngqJqxskEfUjbG8einY4+PD3EebHIDLlgkO3bZTdxyI0qjql6RtlvQba
griylpgA8+LxIPrcgHh7gO0nQGpclGS6GmD+Qug6ZYLkY4B5Sej4Vl7rVgjM
W4yV4pD5SK7AvKWw1tw37TMLzEsGf35QXnFQYF4KUg8sL+25SPepcL4seZpw
l/o02OT9ZZJB8tLRZnf9cgYEtp+O6dYcf7U4yHwtKpDj2D0nyLxl0Kiz4v4m
BpmXgUjbxrYMXZB5mVApLAkwBZmXiaK+xl2568jTQdytF5m2kqeHpPmWu6GO
vCx0pwxbhhvJy8Z176dNJ5vIy0Zn2Oi81EJeDvSv77UuOE1eLlprLrtn2cnL
w7NkWYn1CnkGjI+Mb7HdJM8AefmekLqLPA5DhVHx5b10D5j2SrVpj6gH4uqs
3bc95OWjq3pJe+AV7edjsz1i//u35OfDYz00t/kDeQU4Whk1JnwmrwDPNdF5
83nyjFh1Y801pUCeEX+apO6BH+QZMdMlO1z1m7xC8MW9M56Eg9w/ZfFh2Q==

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7496432022282585},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->{547.1153846153974, Automatic},
  Method->{},
  PlotRange->{{0, 40.4}, {0.7615404555525216, 0.9994855220377846}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.742729808382383*^9, 3.7427298446368465`*^9}, 
   3.7427299109681625`*^9, {3.7427299436502204`*^9, 3.7427299986091166`*^9}, {
   3.7427300788400574`*^9, 3.7427301834548416`*^9}, {3.7427302171197004`*^9, 
   3.7427302295061226`*^9}, {3.742730280923813*^9, 3.7427303167570753`*^9}, 
   3.7427310461536856`*^9, 3.7427363652929244`*^9, 3.7427370715973983`*^9, 
   3.7427372548665204`*^9, 3.7427374147980013`*^9, 3.7427375809382935`*^9, {
   3.7427376556780243`*^9, 3.7427376893584833`*^9}, 3.742737994323419*^9, 
   3.7427383058413663`*^9, 3.7427389092972264`*^9, 3.742739173904891*^9, 
   3.7427394429751635`*^9, {3.7427418275889606`*^9, 3.742741850599001*^9}, 
   3.742743976423935*^9, {3.7427441131737747`*^9, 3.7427441843879004`*^9}, {
   3.7427442423732023`*^9, 3.7427442626532373`*^9}, 3.7427446721861567`*^9, {
   3.7427518353523445`*^9, 3.7427518668956*^9}, 3.742751925426903*^9, 
   3.7428247965073924`*^9, {3.7428249836297207`*^9, 3.7428250095725665`*^9}, 
   3.7428252108753204`*^9, 3.742836350743865*^9, 3.7428792019124155`*^9, {
   3.7428943043732367`*^9, 3.7428943760397625`*^9}, {3.7428944545547004`*^9, 
   3.742894484537953*^9}, {3.7428945259872255`*^9, 3.742894576765315*^9}, {
   3.7428946949823227`*^9, 3.742894752655624*^9}, {3.7428947885980873`*^9, 
   3.7428947929816947`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1zWtIU3EYBvAlo51zNESQcAluiTkNTXPlbDn3zG1mllSyOSEpMSrLYjZY
VjJr4CWJdVuLnFEQ7VM3PyxJ8sO67EPloiIakWbL8pI1DJWKqeT0vA8cDn8e
3t+zutZcsT9GIBDIF77o390ZzUe191yjoU3M+eSLmVLbZavOJHRwPsFS4Cmv
K5yXcL4Di1mOSb9Dcn2C9QX6o4mDM9PPal6yviUvAZ6y+kdnu6lPRPPtst5U
N8t7SRg5cTD9UCvL7yXDMdcRx1lY3k9BpeOW0FhD91I4398w3NlJfSrau0f6
lFry0tDW4BKFFLS/BqdjBlqM68iXYa7/cp8mnbwMDFwqMZsk5K2F99OK+1Vi
8rLAPB4cXplIXjaapzMt5njycmCanDGVxtJ9LrZEttsdIurX41njnl05QvLy
UHjl+ax0Ge3nwRZ0i03zDO/LYbbGyl5EGN7bgGs9KVzDP4b3NqKl2tCl/8Pw
Xj7Cpl6rbobhvXx4j2Yp6qbIUyA76GLv/SavAP7gh5vxk+RtgioQPHU+TJ4S
Y2rGlvaLPCWehKv2vpkgbzNGM1r2XfxBXiF+OrmrtePkqXDyb0WNfoy8Ighn
d9xVjJJXhIkmo75ghDw1Su0dx0q+0z1w/JXobc036oHk/tB06zB5Grx+wKke
fqV9DSydHls4RL4Gka31R3JD5BVD1fMuvukLecXwVltMgSHytJCqbEmyIfK0
OFz+1Nr+mTwtetltrvAgeTroKi+M7154/wdorlbc
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, -3.097643342858533},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->{547.1153846153974, Automatic},
  Method->{},
  PlotLabel->FormBox[
    TemplateBox[{"\"The accuracy should lie around \"", 
      RowBox[{"-", "0.3876400520322256`"}]}, "RowDefault"], TraditionalForm],
  PlotRange->{{0, 40.4}, {-3.316927910612265, -3.10808546513252}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.742729808382383*^9, 3.7427298446368465`*^9}, 
   3.7427299109681625`*^9, {3.7427299436502204`*^9, 3.7427299986091166`*^9}, {
   3.7427300788400574`*^9, 3.7427301834548416`*^9}, {3.7427302171197004`*^9, 
   3.7427302295061226`*^9}, {3.742730280923813*^9, 3.7427303167570753`*^9}, 
   3.7427310461536856`*^9, 3.7427363652929244`*^9, 3.7427370715973983`*^9, 
   3.7427372548665204`*^9, 3.7427374147980013`*^9, 3.7427375809382935`*^9, {
   3.7427376556780243`*^9, 3.7427376893584833`*^9}, 3.742737994323419*^9, 
   3.7427383058413663`*^9, 3.7427389092972264`*^9, 3.742739173904891*^9, 
   3.7427394429751635`*^9, {3.7427418275889606`*^9, 3.742741850599001*^9}, 
   3.742743976423935*^9, {3.7427441131737747`*^9, 3.7427441843879004`*^9}, {
   3.7427442423732023`*^9, 3.7427442626532373`*^9}, 3.7427446721861567`*^9, {
   3.7427518353523445`*^9, 3.7427518668956*^9}, 3.742751925426903*^9, 
   3.7428247965073924`*^9, {3.7428249836297207`*^9, 3.7428250095725665`*^9}, 
   3.7428252108753204`*^9, 3.742836350743865*^9, 3.7428792019124155`*^9, {
   3.7428943043732367`*^9, 3.7428943760397625`*^9}, {3.7428944545547004`*^9, 
   3.742894484537953*^9}, {3.7428945259872255`*^9, 3.742894576765315*^9}, {
   3.7428946949823227`*^9, 3.742894752655624*^9}, {3.7428947885980873`*^9, 
   3.742894793106495*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Banded matrix test (for \[OpenCurlyQuote]banded.h\[CloseCurlyQuote])", \
"Section",
 CellChangeTimes->{{3.742719185777523*^9, 3.7427192091775637`*^9}, {
  3.7427517133601303`*^9, 3.742751715606534*^9}}],

Cell["A sample equation Ax=b where A is a band matrix:", "Text",
 CellChangeTimes->{{3.7427191649514866`*^9, 3.742719181222315*^9}, {
  3.742730560628933*^9, 3.7427305692557487`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "3", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "\[IndentingNewLine]", "4", ",", "1", ",", "5", ",", "0", ",", "0", ",",
       "0", ",", "0", ",", "\[IndentingNewLine]", "9", ",", "2", ",", "6", 
      ",", "5", ",", "0", ",", "0", ",", "0", ",", "\[IndentingNewLine]", "0",
       ",", "3", ",", "5", ",", "8", ",", "9", ",", "0", ",", "0", ",", 
      "\[IndentingNewLine]", "0", ",", "0", ",", "7", ",", "9", ",", "3", ",",
       "2", ",", "0", ",", "\[IndentingNewLine]", "0", ",", "0", ",", "0", 
      ",", "3", ",", "8", ",", "4", ",", "6", ",", "\[IndentingNewLine]", "0",
       ",", "0", ",", "0", ",", "0", ",", "2", ",", "4", ",", "4"}], 
     "\[IndentingNewLine]", "}"}], ",", "7"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "@", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1"}], "}"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"%%", "//", "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Inverse", "@", "%%"}], ".", "%"}], "//", "N"}], "//", 
      "Flatten"}], "//", "MatrixForm"}], ",", "\"\< \[Equal] \>\"", ",", 
    RowBox[{"%", "//", "MatrixForm"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.742719237008013*^9, 3.7427193421209974`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"3", "1", "0", "0", "0", "0", "0"}, {
        "4", "1", "5", "0", "0", "0", "0"}, {
        "9", "2", "6", "5", "0", "0", "0"}, {
        "0", "3", "5", "8", "9", "0", "0"}, {
        "0", "0", "7", "9", "3", "2", "0"}, {
        "0", "0", "0", "3", "8", "4", "6"}, {
        "0", "0", "0", "0", "2", "4", "4"}}, RowSpacings -> 1, ColumnSpacings -> 
       1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\"\[CenterDot]\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{"4.669123351435221`"}, {
          RowBox[{"-", "7.007370054305663`"}]}, {
          RowBox[{"-", "1.1338246702870443`"}]}, {
          RowBox[{"-", "3.2408844065166797`"}]}, {"6.290923196276183`"}, {
         "10.615981380915438`"}, {
          RowBox[{"-", "13.51144297905353`"}]}}, ColumnAlignments -> Center, 
        RowSpacings -> 1, ColumnAlignments -> Left], Column], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" \[Equal] \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"7"}, {"6"}, {"5"}, {"4"}, {"3"}, {"2"}, {"1"}}, RowSpacings -> 
       1, ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.7427192158075757`*^9, {3.742719256461247*^9, 3.742719342542198*^9}, 
   3.7427198772059374`*^9, 3.7427240661666956`*^9, {3.7427265028423758`*^9, 
   3.742726507990385*^9}, 3.742727961864539*^9, 3.7427282171121874`*^9, 
   3.7427284578216105`*^9, 3.7427287525061283`*^9, 3.742730316913076*^9, 
   3.742731046418886*^9, 3.7427363654645247`*^9, 3.7427439765955353`*^9, 
   3.742744672326557*^9, 3.742751925598503*^9, 3.7428247966789927`*^9, 
   3.7428792020996156`*^9, {3.742894304544837*^9, 3.742894332000885*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1238, 1003},
WindowMargins->{{79, Automatic}, {47, Automatic}},
Magnification:>1.3 Inherited,
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Section"], FontFamily -> "Arial", FontSize -> 28, FontWeight -> 
    "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsection"], CellMargins -> {{35, 3.}, {8., 12.}}, FontFamily -> 
    "Arial", FontSize -> 20, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubsection"], CellMargins -> {{40, Inherited}, {2, 10}}, 
    FontFamily -> "Arial", FontSize -> 19, FontWeight -> "Plain", FontSlant -> 
    "Plain", FontVariations -> {
     "StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Text"], CellMargins -> {{40, 10}, {7, 7}}, FontFamily -> 
    "Cambria", FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemParagraph"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubitemParagraph"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemParagraph"], FontFamily -> "Cambria", FontSize -> 14,
     FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubitemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["mk-test"], CellFrame -> {{0.3, 0}, {0, 0.3}}, PageBreakBelow -> 
    False, CellChangeTimes -> {3.704299599624503*^9}, MenuSortingValue -> 
    10000, FontFamily -> "Cambria", FontSize -> 14, FontWeight -> "Plain", 
    FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}]}, 
  Visible -> False, FrontEndVersion -> 
  "10.3 for Microsoft Windows (64-bit) (October 9, 2015)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 343, 4, 81, "Section"],
Cell[926, 28, 401, 9, 39, "Text"],
Cell[1330, 39, 101, 1, 39, "Text"],
Cell[1434, 42, 221, 7, 39, "Text"],
Cell[1658, 51, 362, 11, 39, "Text"],
Cell[2023, 64, 1280, 36, 99, "Input"],
Cell[3306, 102, 590, 14, 39, "Input"],
Cell[CellGroupData[{
Cell[3921, 120, 197, 3, 57, "Subsection"],
Cell[4121, 125, 111, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[4257, 130, 585, 14, 39, "Input"],
Cell[CellGroupData[{
Cell[4867, 148, 95, 2, 30, "Echo"],
Cell[4965, 152, 329, 12, 47, "Echo"],
Cell[5297, 166, 276, 9, 30, "Echo"],
Cell[5576, 177, 68, 1, 30, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[5671, 182, 111, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[5807, 187, 552, 16, 65, "Input"],
Cell[6362, 205, 744, 15, 57, "Output"],
Cell[7109, 222, 786, 17, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7932, 244, 590, 16, 65, "Input"],
Cell[8525, 262, 1006, 27, 57, "Output"],
Cell[9534, 291, 1111, 31, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10682, 327, 302, 8, 39, "Input"],
Cell[10987, 337, 780, 13, 39, "Output"]
}, Open  ]],
Cell[11782, 353, 119, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[11926, 358, 320, 7, 39, "Input"],
Cell[12249, 367, 1280, 34, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13566, 406, 536, 14, 39, "Input"],
Cell[14105, 422, 1646, 48, 57, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15800, 476, 435, 6, 57, "Subsection"],
Cell[CellGroupData[{
Cell[16260, 486, 5323, 119, 315, "Input"],
Cell[CellGroupData[{
Cell[21608, 609, 97, 2, 30, "Echo"],
Cell[21708, 613, 633, 23, 47, "Echo"]
}, Open  ]],
Cell[22356, 639, 1342, 32, 57, "Output"],
Cell[23701, 673, 1320, 29, 39, "Output"],
Cell[25024, 704, 1297, 26, 39, "Output"],
Cell[26324, 732, 873, 11, 39, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27258, 750, 222, 3, 81, "Section"],
Cell[27483, 755, 355, 6, 39, "Text"],
Cell[27841, 763, 614, 22, 46, "Text"],
Cell[28458, 787, 174, 2, 39, "Text"],
Cell[28635, 791, 771, 28, 42, "Text"],
Cell[29409, 821, 541, 17, 39, "Text"],
Cell[CellGroupData[{
Cell[29975, 842, 423, 10, 43, "Subsubsection"],
Cell[30401, 854, 1422, 45, 171, "Input"],
Cell[CellGroupData[{
Cell[31848, 903, 534, 13, 44, "Input"],
Cell[32385, 918, 15025, 258, 475, "Output"]
}, Open  ]],
Cell[47425, 1179, 390, 12, 39, "Text"],
Cell[CellGroupData[{
Cell[47840, 1195, 2122, 54, 302, "Input"],
Cell[49965, 1251, 4842, 92, 526, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54868, 1350, 313, 5, 89, "Section"],
Cell[55184, 1357, 514, 9, 68, "Text"],
Cell[55701, 1368, 289, 3, 41, "Text"],
Cell[55993, 1373, 1100, 24, 41, "Input"],
Cell[57096, 1399, 910, 17, 41, "Input"],
Cell[CellGroupData[{
Cell[58031, 1420, 115, 1, 48, "Subsubsection"],
Cell[58149, 1423, 307, 5, 41, "Text"],
Cell[CellGroupData[{
Cell[58481, 1432, 2579, 59, 146, "Input"],
Cell[CellGroupData[{
Cell[61085, 1495, 331, 12, 50, "Echo"],
Cell[61419, 1509, 276, 9, 33, "Echo"],
Cell[61698, 1520, 768, 27, 50, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[62493, 1551, 234, 5, 41, "Text"],
Cell[CellGroupData[{
Cell[62752, 1560, 2748, 61, 146, "Input"],
Cell[CellGroupData[{
Cell[65525, 1625, 331, 12, 50, "Echo"],
Cell[65859, 1639, 278, 9, 33, "Echo"],
Cell[66140, 1650, 768, 27, 50, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[66935, 1681, 311, 6, 41, "Text"],
Cell[CellGroupData[{
Cell[67271, 1691, 2797, 63, 146, "Input"],
Cell[CellGroupData[{
Cell[70093, 1758, 331, 12, 50, "Echo"],
Cell[70427, 1772, 276, 9, 33, "Echo"],
Cell[70706, 1783, 766, 27, 50, "Echo"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71533, 1817, 119, 1, 48, "Subsubsection"],
Cell[71655, 1820, 1371, 20, 41, "Input"],
Cell[CellGroupData[{
Cell[73051, 1844, 5064, 121, 258, "Input"],
Cell[78118, 1967, 6679, 164, 219, "Output"],
Cell[84800, 2133, 7069, 175, 219, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91918, 2314, 241, 3, 48, "Subsubsection"],
Cell[92162, 2319, 686, 20, 54, "Text"],
Cell[CellGroupData[{
Cell[92873, 2343, 3610, 89, 206, "Input"],
Cell[96486, 2434, 6197, 156, 209, "Output"]
}, Open  ]],
Cell[102698, 2593, 343, 6, 41, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[103090, 2605, 366, 6, 89, "Section"],
Cell[103459, 2613, 239, 3, 41, "Text"],
Cell[103701, 2618, 1718, 38, 94, "Input"],
Cell[105422, 2658, 1628, 36, 94, "Input"],
Cell[107053, 2696, 345, 6, 41, "Text"],
Cell[107401, 2704, 1251, 25, 146, "Input"],
Cell[CellGroupData[{
Cell[108677, 2733, 115, 1, 48, "Subsubsection"],
Cell[108795, 2736, 307, 5, 41, "Text"],
Cell[CellGroupData[{
Cell[109127, 2745, 2581, 59, 146, "Input"],
Cell[CellGroupData[{
Cell[111733, 2808, 552, 20, 50, "Echo"],
Cell[112288, 2830, 657, 24, 50, "Echo"],
Cell[112948, 2856, 1200, 42, 33, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[114175, 2902, 234, 5, 41, "Text"],
Cell[CellGroupData[{
Cell[114434, 2911, 2727, 61, 146, "Input"],
Cell[CellGroupData[{
Cell[117186, 2976, 633, 23, 50, "Echo"],
Cell[117822, 3001, 615, 22, 50, "Echo"],
Cell[118440, 3025, 1294, 44, 33, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[119761, 3073, 311, 6, 41, "Text"],
Cell[CellGroupData[{
Cell[120097, 3083, 2826, 63, 146, "Input"],
Cell[CellGroupData[{
Cell[122948, 3150, 677, 25, 50, "Echo"],
Cell[123628, 3177, 679, 25, 50, "Echo"],
Cell[124310, 3204, 1375, 48, 33, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125734, 3258, 1108, 32, 71, "Input"],
Cell[126845, 3292, 1767, 53, 68, "Output"],
Cell[128615, 3347, 500, 9, 88, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129164, 3362, 119, 1, 48, "Subsubsection"],
Cell[129286, 3365, 5503, 132, 258, "Input"],
Cell[134792, 3499, 390, 10, 41, "Text"],
Cell[135185, 3511, 242, 3, 41, "Text"],
Cell[135430, 3516, 133197, 2192, 314, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268664, 5713, 265, 3, 48, "Subsubsection"],
Cell[268932, 5718, 552, 15, 41, "Text"],
Cell[269487, 5735, 4009, 96, 206, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273533, 5836, 391, 7, 48, "Subsubsection"],
Cell[273927, 5845, 4671, 122, 309, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278635, 5972, 272, 7, 48, "Subsubsection"],
Cell[CellGroupData[{
Cell[278932, 5983, 7739, 215, 559, "Input"],
Cell[286674, 6200, 3113, 60, 508, "Output"],
Cell[289790, 6262, 3246, 62, 525, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293097, 6331, 208, 3, 89, "Section"],
Cell[293308, 6336, 183, 2, 41, "Text"],
Cell[CellGroupData[{
Cell[293516, 6342, 1565, 35, 302, "Input"],
Cell[295084, 6379, 2013, 40, 179, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
