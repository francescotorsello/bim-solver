(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    309778,       6765]
NotebookOptionsPosition[    300312,       6491]
NotebookOutlinePosition[    303433,       6559]
CellTagsIndexPosition[    303390,       6556]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Prelude: Finite difference and derivative approximations", "Section",
 CellChangeTimes->{{3.741961558822798*^9, 3.74196156598321*^9}, {
  3.7427240103331976`*^9, 3.742724012205201*^9}, {3.7427257387442336`*^9, 
  3.742725743923443*^9}, {3.7427281860057325`*^9, 3.742728205427767*^9}, {
  3.7430620719974174`*^9, 3.7430620751486235`*^9}}],

Cell[TextData[{
 "See: ",
 ButtonBox["wiki/Finite_difference_coefficient",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Finite_difference_coefficient"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Finite_difference_coefficient"]
}], "Text",
 CellChangeTimes->{{3.741960979986379*^9, 3.741961015759642*^9}, {
  3.741961570632018*^9, 3.7419615709596186`*^9}}],

Cell["In the following: ", "Text",
 CellChangeTimes->{{3.74196398532446*^9, 3.7419640358061485`*^9}}],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  FormBox["s", TraditionalForm]]],
 " is the stencil, e.g., {-3,-2,-1,0,+1}, "
}], "Text",
 CellChangeTimes->{{3.74196398532446*^9, 3.7419640422333603`*^9}, 
   3.742464009931966*^9}],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 " is the order of the derivative, where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "\[LessEqual]", 
    RowBox[{"len", "(", "s", ")"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.74196398532446*^9, 3.741964039706156*^9}, {
  3.7419641176126924`*^9, 3.7419641377211275`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fdCoefficients", "[", 
   RowBox[{"d_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Inverse", "[", "\[IndentingNewLine]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "@", "s"}]}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox["s", "i"], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "@", "s"}], "-", "1"}]}], "}"}]}], "]"}]}], 
     "]"}], "]"}], ".", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"d", "\[Equal]", "i"}], ",", 
       RowBox[{"d", "!"}], ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{
        RowBox[{"Length", "@", "s"}], "-", "1"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.74196029126077*^9, 3.741960340400856*^9}, {
  3.74196041705939*^9, 3.7419604598658657`*^9}, {3.741960495745929*^9, 
  3.741960622418151*^9}, {3.7419606600766172`*^9, 3.741960666488229*^9}, {
  3.74196082676291*^9, 3.741960919380273*^9}, {3.7419639922352724`*^9, 
  3.7419639953240776`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDerivative", "[", 
   RowBox[{"f_", ",", "var_", ",", "d_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"f", "/@", 
      RowBox[{"(", 
       RowBox[{"var", "+", "s"}], ")"}]}], ")"}], 
    RowBox[{"fdCoefficients", "[", 
     RowBox[{"d", ",", "s"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7419606242121544`*^9, 3.7419606397185817`*^9}, {
  3.741961037835681*^9, 3.7419610659937305`*^9}, {3.741961134621251*^9, 
  3.7419614035813236`*^9}, {3.7427241684248753`*^9, 3.7427241874569087`*^9}}],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.741961583986642*^9, 3.7419615846262426`*^9}, {
  3.74196393984838*^9, 3.741963959147614*^9}, {3.7430620867082434`*^9, 
  3.743062091045051*^9}}],

Cell["Second order in accuarcy:", "Text",
 CellChangeTimes->{{3.7424639624922824`*^9, 3.7424639665794897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"fdDerivative", "[", 
      RowBox[{"f", ",", "n", ",", "i", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], "//", "Echo"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.74196137284927*^9, 3.7419614184325495`*^9}, {
  3.741964074665817*^9, 3.741964105756672*^9}, {3.7419641557547593`*^9, 
  3.741964179576001*^9}, {3.74272417673969*^9, 3.7427241829485006`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "n", "]"}]], "Echo",
 CellChangeTimes->{3.7558645646377144`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7558645646777143`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}], "]"}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"f", "[", "n", "]"}]}], "+", 
  RowBox[{"f", "[", 
   RowBox[{"1", "+", "n"}], "]"}]}]], "Echo",
 CellChangeTimes->{3.7558645647077146`*^9}],

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{3.755864564737715*^9}]
}, Open  ]]
}, Open  ]],

Cell["Fourth order in accuarcy:", "Text",
 CellChangeTimes->{{3.7424639624922824`*^9, 3.7424639715246983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fdCoefficients", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fdCoefficients", "[", 
  RowBox[{"2", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7419606242121544`*^9, 3.7419606397185817`*^9}, {
  3.742463930200226*^9, 3.7424639421186466`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "12"], ",", 
   RowBox[{"-", 
    FractionBox["2", "3"]}], ",", "0", ",", 
   FractionBox["2", "3"], ",", 
   RowBox[{"-", 
    FractionBox["1", "12"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7424639371422377`*^9, 3.742463942493047*^9}, 
   3.742723849075714*^9, 3.7427240650746937`*^9, 3.7427257638290777`*^9, 
   3.7427265073039837`*^9, 3.742727961209338*^9, 3.742728216363386*^9, 
   3.7427284571664095`*^9, 3.7427287517261267`*^9, 3.742730315711874*^9, 
   3.7427310447496834`*^9, 3.7427363638889217`*^9, 3.74274396792192*^9, 
   3.7427446709693546`*^9, 3.7427519245377007`*^9, 3.7428247952437897`*^9, 
   3.742879200539613*^9, {3.7428943029068336`*^9, 3.742894330830883*^9}, 
   3.7558645647777147`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "12"]}], ",", 
   FractionBox["4", "3"], ",", 
   RowBox[{"-", 
    FractionBox["5", "2"]}], ",", 
   FractionBox["4", "3"], ",", 
   RowBox[{"-", 
    FractionBox["1", "12"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7424639371422377`*^9, 3.742463942493047*^9}, 
   3.742723849075714*^9, 3.7427240650746937`*^9, 3.7427257638290777`*^9, 
   3.7427265073039837`*^9, 3.742727961209338*^9, 3.742728216363386*^9, 
   3.7427284571664095`*^9, 3.7427287517261267`*^9, 3.742730315711874*^9, 
   3.7427310447496834`*^9, 3.7427363638889217`*^9, 3.74274396792192*^9, 
   3.7427446709693546`*^9, 3.7427519245377007`*^9, 3.7428247952437897`*^9, 
   3.742879200539613*^9, {3.7428943029068336`*^9, 3.742894330830883*^9}, 
   3.7558645647877145`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fdDerivative", "[", 
  RowBox[{"f", ",", "n", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fdDerivative", "[", 
  RowBox[{"f", ",", "n", ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7424642466993504`*^9, 3.7424642602713737`*^9}, {
  3.7427241953193226`*^9, 3.7427242089225464`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7424642608953753`*^9, 3.742723849075714*^9, 3.742724065090294*^9, 
   3.742724209187747*^9, 3.742725763844678*^9, 3.742726507319584*^9, 
   3.742727961209338*^9, 3.742728216363386*^9, 3.742728457182009*^9, 
   3.742728751741727*^9, 3.7427303157274737`*^9, 3.742731044765283*^9, 
   3.742736363904522*^9, 3.74274396793752*^9, 3.742744670984955*^9, 
   3.742751924553301*^9, 3.7428247952437897`*^9, 3.742879200555213*^9, {
   3.7428943029068336`*^9, 3.742894330830883*^9}, 3.7558645647977147`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "12"]}], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"f", "[", "n", "]"}]}], "2"], "+", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7424642608953753`*^9, 3.742723849075714*^9, 3.742724065090294*^9, 
   3.742724209187747*^9, 3.742725763844678*^9, 3.742726507319584*^9, 
   3.742727961209338*^9, 3.742728216363386*^9, 3.742728457182009*^9, 
   3.742728751741727*^9, 3.7427303157274737`*^9, 3.742731044765283*^9, 
   3.742736363904522*^9, 3.74274396793752*^9, 3.742744670984955*^9, 
   3.742751924553301*^9, 3.7428247952437897`*^9, 3.742879200555213*^9, {
   3.7428943029068336`*^9, 3.742894330830883*^9}, 3.7558645648077145`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fdCoefficients", "[", 
  RowBox[{"4", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7419606242121544`*^9, 3.7419606397185817`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.7419606406077833`*^9, 3.74196066144942*^9}, {
   3.741960879709403*^9, 3.741960921720277*^9}, 3.741966311869524*^9, 
   3.7419676741605167`*^9, 3.7419705578383074`*^9, 3.742463901823776*^9, 
   3.7427238490913143`*^9, 3.742724065105894*^9, 3.742725763844678*^9, 
   3.742726507319584*^9, 3.742727961224938*^9, 3.7427282163789864`*^9, 
   3.742728457182009*^9, 3.742728751741727*^9, 3.7427303157274737`*^9, 
   3.742731044765283*^9, 3.742736363904522*^9, 3.74274396796872*^9, 
   3.742744670984955*^9, 3.742751924553301*^9, 3.74282479525939*^9, 
   3.742879200570813*^9, {3.742894302922434*^9, 3.742894330846483*^9}, 
   3.7558645648177147`*^9}]
}, Open  ]],

Cell["Forward and backward differences:", "Text",
 CellChangeTimes->{{3.7424639624922824`*^9, 3.7424639902759314`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fdDerivative", "[", 
  RowBox[{"f", ",", "n", ",", "3", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.74196137284927*^9, 3.7419614184325495`*^9}, {
  3.7427242135557547`*^9, 3.7427242180329623`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"17", " ", 
     RowBox[{"f", "[", "n", "]"}]}], "4"]}], "+", 
  RowBox[{
   FractionBox["71", "4"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["59", "2"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["49", "2"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"3", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["41", "4"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"4", "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["7", "4"], " ", 
   RowBox[{"f", "[", 
    RowBox[{"5", "+", "n"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7419613874820957`*^9, 3.7419614187601504`*^9}, 
   3.741966311900724*^9, 3.741967674191717*^9, 3.741970557869508*^9, 
   3.742463901823776*^9, 3.7427238491069145`*^9, 3.742724065105894*^9, 
   3.742725763860278*^9, 3.742726507335184*^9, 3.742727961224938*^9, 
   3.7427282163789864`*^9, 3.742728457197609*^9, 3.7427287517573266`*^9, 
   3.742730315743074*^9, 3.7427310447808833`*^9, 3.742736363904522*^9, 
   3.74274396796872*^9, 3.742744671000555*^9, 3.742751924568901*^9, 
   3.74282479527499*^9, 3.742879200570813*^9, {3.742894302922434*^9, 
   3.742894330846483*^9}, 3.7558645648377147`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fdDerivative", "[", 
  RowBox[{"f", ",", "n", ",", "4", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7419614391493864`*^9, 3.7419614437981944`*^9}, {
  3.7419677212892*^9, 3.7419677255012074`*^9}, {3.7427242194837646`*^9, 
  3.7427242236645727`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["7", "2"]}], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "7"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["82", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "6"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["185", "2"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "5"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"176", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1219", "6"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"142", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["111", "2"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"28", " ", 
    RowBox[{"f", "[", "n", "]"}]}], "3"]}]], "Output",
 CellChangeTimes->{
  3.741961444203795*^9, 3.741966311931924*^9, 3.7419676742229176`*^9, 
   3.7419677258912077`*^9, 3.7419705578851075`*^9, 3.7424639018393755`*^9, 
   3.7427238491225147`*^9, 3.7427240651214943`*^9, 3.742724223960973*^9, 
   3.742725763860278*^9, 3.742726507335184*^9, 3.7427279612405376`*^9, 
   3.742728216394586*^9, 3.742728457197609*^9, 3.7427287517573266`*^9, 
   3.7427303157586737`*^9, 3.7427310447808833`*^9, 3.742736363920122*^9, 
   3.7427439679843197`*^9, 3.742744671016155*^9, 3.7427519245845013`*^9, 
   3.74282479527499*^9, 3.742879200586413*^9, {3.742894302938034*^9, 
   3.7428943308620834`*^9}, 3.7558645648477144`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extrapolation", "Subsection",
 CellChangeTimes->{{3.7419615981358666`*^9, 3.7419615997582693`*^9}, {
   3.7419623009367013`*^9, 3.741962304821108*^9}, {3.7419639319079657`*^9, 
   3.741963933405569*^9}, 3.7419670495334196`*^9, 3.741967154803405*^9, {
   3.7419673183540916`*^9, 3.7419673204444957`*^9}, {3.7419679022963176`*^9, 
   3.741967904558322*^9}, {3.7419699922675905`*^9, 3.741969992735591*^9}, 
   3.742885052453289*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"With", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"derivativeOrder", "=", "1"}], ",", 
        RowBox[{"accuracy", "=", "4"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "0", ",", "1"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"fdDerivative", "[", 
           RowBox[{"f", ",", "n", ",", "i", ",", 
            RowBox[{"s", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "i"}], "-", "accuracy"}], ";;"}], 
             "\[RightDoubleBracket]"}]}], "]"}], "/", 
          RowBox[{"i", "!"}]}], "//", "Echo"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "derivativeOrder"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
    "Total"}], "//", "Expand"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"%", "\[Equal]", "0"}], ",", 
        RowBox[{"f", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], "]"}], "\[LeftDoubleBracket]", "1",
       "\[RightDoubleBracket]"}]}], "//", "Expand"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{
   RowBox[{"Rational", "[", 
    RowBox[{"p_", ",", "q_"}], "]"}], "\[RuleDelayed]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p", "<", "0"}], ",", "\"\< - \>\"", ",", "\"\< + \>\""}], 
     "]"}], "<>", 
    RowBox[{"ToString", "@", 
     RowBox[{"Abs", "@", "p"}]}], "<>", "\"\<./\>\"", "<>", 
    RowBox[{"ToString", "@", "q"}], "<>", 
    "\"\<.\>\""}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"List", "@@", "%"}], "/.", 
   RowBox[{"Times", "\[Rule]", "List"}]}], "//", 
  "Flatten"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"i_", "+", "n"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "0"}], ",", 
        RowBox[{"\"\< * f(m,n+\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<)\>\""}], ",", 
        RowBox[{"\"\< * f(m,n-\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"-", "i"}], "]"}], "<>", "\"\<)\>\""}], ",", "\"\<??\>\""}],
        "]"}]}], ",", 
     RowBox[{
      RowBox[{"f", "[", "n", "]"}], "\[Rule]", "\"\< * f(m,n)\>\""}], ",", 
     RowBox[{
      RowBox[{"i_", "?", "NumericQ"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "<", "0"}], ",", "\"\< - \>\"", ",", "\"\< + \>\""}], 
        "]"}], "<>", 
       RowBox[{"ToString", "@", 
        RowBox[{"Abs", "@", "i"}]}]}]}]}], "}"}]}], "/.", 
  RowBox[{"List", "\[Rule]", "StringJoin"}]}]}], "Input",
 CellChangeTimes->{{3.7419616914396305`*^9, 3.741961878608759*^9}, {
   3.7419619146604223`*^9, 3.7419619203076324`*^9}, {3.741961950541486*^9, 
   3.7419620320078287`*^9}, {3.741962081600316*^9, 3.7419622817954674`*^9}, {
   3.741962383039645*^9, 3.7419624133192987`*^9}, {3.741962455158572*^9, 
   3.7419625101330686`*^9}, {3.7419625528147435`*^9, 
   3.7419626130776496`*^9}, {3.741962728970253*^9, 3.7419627420274763`*^9}, {
   3.741962791073962*^9, 3.741962798983176*^9}, {3.7419628467972603`*^9, 
   3.741962848014062*^9}, {3.7419629519112444`*^9, 3.741963116009933*^9}, {
   3.7419632194693146`*^9, 3.741963412566454*^9}, {3.741963464609145*^9, 
   3.7419635554013047`*^9}, {3.7419635879897623`*^9, 
   3.7419636462246647`*^9}, {3.7419636767227182`*^9, 
   3.7419638503354225`*^9}, {3.7419638961683035`*^9, 
   3.7419639023303137`*^9}, {3.74196630374191*^9, 3.741966354410799*^9}, {
   3.74196705541463*^9, 3.7419670620290413`*^9}, {3.741967178312646*^9, 
   3.741967188639864*^9}, {3.7419673238453016`*^9, 3.741967464137348*^9}, {
   3.741967531623067*^9, 3.74196757349354*^9}, 3.7419677607104692`*^9, {
   3.741967793938527*^9, 3.7419678054357476`*^9}, {3.7419705845923543`*^9, 
   3.741970591627967*^9}, {3.741970652764474*^9, 3.741970653653676*^9}, {
   3.741971067009602*^9, 3.74197149289135*^9}, {3.7427242278141794`*^9, 
   3.7427242326657877`*^9}, {3.742879191117196*^9, 3.742879193550801*^9}, {
   3.742879235858075*^9, 3.7428792390716805`*^9}, {3.742879294935379*^9, 
   3.7428793226566277`*^9}, {3.742879353185881*^9, 3.7428793586458907`*^9}, {
   3.7428794056019735`*^9, 3.742879541010211*^9}, {3.742879578497077*^9, 
   3.742879583099085*^9}, {3.7428796150791407`*^9, 3.7428797530925837`*^9}, {
   3.7428797897058477`*^9, 3.742879846240347*^9}, {3.7428799441149187`*^9, 
   3.742879949652929*^9}, {3.7428801251582375`*^9, 3.7428801469046755`*^9}, {
   3.7428826086306*^9, 3.742882677457921*^9}, {3.742882738547628*^9, 
   3.7428828223041754`*^9}, {3.7428828692602577`*^9, 3.742882970098835*^9}, {
   3.742883012265709*^9, 3.742883052201779*^9}, {3.742883082871433*^9, 
   3.742883121731101*^9}, {3.742885064012909*^9, 3.742885088988553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "n", "]"}]], "Echo",
 CellChangeTimes->{3.755864564867715*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"25", " ", 
    RowBox[{"f", "[", "n", "]"}]}], "12"]}]], "Echo",
 CellChangeTimes->{3.7558645648977146`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"37", " ", 
    RowBox[{"f", "[", "n", "]"}]}], "12"]}]], "Output",
 CellChangeTimes->{{3.7428795235693803`*^9, 3.742879547749423*^9}, {
   3.7428795789494777`*^9, 3.7428795838166857`*^9}, {3.7428796159839425`*^9, 
   3.742879663033625*^9}, {3.742879697587686*^9, 3.7428797534357843`*^9}, {
   3.742879790329849*^9, 3.7428798476911497`*^9}, {3.7428799447701197`*^9, 
   3.7428799500897293`*^9}, {3.74288013236545*^9, 3.742880147247876*^9}, {
   3.742882639440654*^9, 3.742882678035122*^9}, {3.7428827389064283`*^9, 
   3.742882793147724*^9}, 3.742882840790208*^9, 3.7428828712258615`*^9, {
   3.7428829029407167`*^9, 3.742882922986752*^9}, 3.7428830525917797`*^9, {
   3.742883107004675*^9, 3.7428831221211014`*^9}, {3.7428850749017277`*^9, 
   3.7428851001737723`*^9}, {3.742894302969234*^9, 3.742894330877683*^9}, 
   3.7558645649277143`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\<\" + 1./4.\"\>", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"\<\" - 4./3.\"\>", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{"\<\" + 37./12.\"\>", " ", 
   RowBox[{"f", "[", "n", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7428795235693803`*^9, 3.742879547749423*^9}, {
   3.7428795789494777`*^9, 3.7428795838166857`*^9}, {3.7428796159839425`*^9, 
   3.742879663033625*^9}, {3.742879697587686*^9, 3.7428797534357843`*^9}, {
   3.742879790329849*^9, 3.7428798476911497`*^9}, {3.7428799447701197`*^9, 
   3.7428799500897293`*^9}, {3.74288013236545*^9, 3.742880147247876*^9}, {
   3.742882639440654*^9, 3.742882678035122*^9}, {3.7428827389064283`*^9, 
   3.742882793147724*^9}, 3.742882840790208*^9, 3.7428828712258615`*^9, {
   3.7428829029407167`*^9, 3.742882922986752*^9}, 3.7428830525917797`*^9, {
   3.742883107004675*^9, 3.7428831221211014`*^9}, {3.7428850749017277`*^9, 
   3.7428851001737723`*^9}, {3.742894302969234*^9, 3.742894330877683*^9}, 
   3.7558645649277143`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\" + 1./4.\"\>", ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}], "]"}], ",", "\<\" - 4./3.\"\>", ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}], ",", "3", ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}], ",", 
   RowBox[{"-", "4"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}], ",", "\<\" + 37./12.\"\>", ",", 
   RowBox[{"f", "[", "n", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7428795235693803`*^9, 3.742879547749423*^9}, {
   3.7428795789494777`*^9, 3.7428795838166857`*^9}, {3.7428796159839425`*^9, 
   3.742879663033625*^9}, {3.742879697587686*^9, 3.7428797534357843`*^9}, {
   3.742879790329849*^9, 3.7428798476911497`*^9}, {3.7428799447701197`*^9, 
   3.7428799500897293`*^9}, {3.74288013236545*^9, 3.742880147247876*^9}, {
   3.742882639440654*^9, 3.742882678035122*^9}, {3.7428827389064283`*^9, 
   3.742882793147724*^9}, 3.742882840790208*^9, 3.7428828712258615`*^9, {
   3.7428829029407167`*^9, 3.742882922986752*^9}, 3.7428830525917797`*^9, {
   3.742883107004675*^9, 3.7428831221211014`*^9}, {3.7428850749017277`*^9, 
   3.7428851001737723`*^9}, {3.742894302969234*^9, 3.742894330877683*^9}, 
   3.7558645649277143`*^9}],

Cell[BoxData["\<\" + 1./4. * f(m,n-4) - 4./3. * f(m,n-3) + 3 * f(m,n-2) - 4 * \
f(m,n-1) + 37./12. * f(m,n)\"\>"], "Output",
 CellChangeTimes->{{3.7428795235693803`*^9, 3.742879547749423*^9}, {
   3.7428795789494777`*^9, 3.7428795838166857`*^9}, {3.7428796159839425`*^9, 
   3.742879663033625*^9}, {3.742879697587686*^9, 3.7428797534357843`*^9}, {
   3.742879790329849*^9, 3.7428798476911497`*^9}, {3.7428799447701197`*^9, 
   3.7428799500897293`*^9}, {3.74288013236545*^9, 3.742880147247876*^9}, {
   3.742882639440654*^9, 3.742882678035122*^9}, {3.7428827389064283`*^9, 
   3.742882793147724*^9}, 3.742882840790208*^9, 3.7428828712258615`*^9, {
   3.7428829029407167`*^9, 3.742882922986752*^9}, 3.7428830525917797`*^9, {
   3.742883107004675*^9, 3.7428831221211014`*^9}, {3.7428850749017277`*^9, 
   3.7428851001737723`*^9}, {3.742894302969234*^9, 3.742894330877683*^9}, 
   3.7558645649377146`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximal slicing in spherical symmetry", "Section",
 CellChangeTimes->{{3.741961558822798*^9, 3.74196156598321*^9}, {
  3.742303016622878*^9, 3.7423030232528896`*^9}, {3.74246517884404*^9, 
  3.7424652254413214`*^9}}],

Cell["\<\
Maximal slicing in spherical symmetry corresponds to solving an elliptic 1D \
PDE (i.e., an ODE with two BC),\
\>", "Text",
 CellChangeTimes->{{3.7424652150673037`*^9, 3.7424653352031145`*^9}, {
  3.7427256732553186`*^9, 3.7427256852517395`*^9}, {3.7427257201178007`*^9, 
  3.7427257203986015`*^9}, {3.743062195570235*^9, 3.743062201685446*^9}}],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["r", "2"]], 
     RowBox[{
      FractionBox["\[PartialD]", 
       RowBox[{"\[PartialD]", "r"}]], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["r", "2"], 
        RowBox[{
         FractionBox["\[PartialD]", 
          RowBox[{"\[PartialD]", "r"}]], "\[Alpha]"}]}], ")"}]}]}], "=", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"s", "(", "r", ")"}]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7424652150673037`*^9, 3.7424653268259*^9}, 
   3.743062174602798*^9}],

Cell["In particular, the source term reads:", "Text",
 CellChangeTimes->{{3.7424652150673037`*^9, 3.7424653497111397`*^9}, {
  3.7430621675515857`*^9, 3.743062172247194*^9}}],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"s", "(", "r", ")"}], "=", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["K", "1"], "2"], "+", 
      RowBox[{"2", 
       SuperscriptBox[
        SubscriptBox["K", "2"], "2"]}], "+", 
      RowBox[{
       SubscriptBox["\[Kappa]", "g"], "(", 
       RowBox[{"\[Rho]", "+", "J"}], ")"}]}]}]}], TraditionalForm]]],
 ",  where  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"J", "=", 
    RowBox[{
     SubscriptBox["J", "1"], "+", 
     RowBox[{"2", 
      SubscriptBox["J", "2"]}]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7424652150673037`*^9, 3.7424653514427433`*^9}, {
  3.743062130780321*^9, 3.743062160983974*^9}}],

Cell[TextData[{
 "The boundary conditions are Neumann\[CloseCurlyQuote]s on the left ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Alpha]", "\[Prime]"], "=", "0"}], ")"}], 
   TraditionalForm]]],
 " and Dirichelt\[CloseCurlyQuote]s on the right ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[Alpha]", "=", "1"}], ")"}], TraditionalForm]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.743062218034274*^9, 3.7430622737605724`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Example: Gaussian ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "ADM"], TraditionalForm]]],
 " to be used for the maximal slicing"
}], "Subsubsection",
 CellChangeTimes->{{3.74230308059859*^9, 3.7423030898182063`*^9}, {
   3.742303561526636*^9, 3.7423035711518526`*^9}, {3.7424653603971586`*^9, 
   3.7424653678393717`*^9}, 3.742731087836959*^9, {3.742731292259718*^9, 
   3.742731298530929*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]GR", "[", 
    RowBox[{"r_", ",", "\[Lambda]_"}], "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"Erf", "[", 
      FractionBox["r", 
       RowBox[{
        SqrtBox["2"], " ", "\[Lambda]"}]], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "r"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckCapitalD]", "[", 
    RowBox[{"r_", ",", "\[Lambda]_"}], "]"}], ":=", " ", 
   RowBox[{"8", "\[Pi]", " ", 
    RowBox[{"\[Phi]GR", "[", 
     RowBox[{"r", ",", "\[Lambda]"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["r", "2"], 
       RowBox[{"2", 
        SuperscriptBox["\[Lambda]", "2"]}]]}], "]"}], 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "\[Lambda]"}], ")"}], "3"]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]ADM", "[", 
    RowBox[{"r_", ",", "\[Lambda]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[DoubleStruckCapitalD]", "[", 
     RowBox[{"r", ",", "\[Lambda]"}], "]"}], "/", 
    SuperscriptBox[
     RowBox[{"\[Phi]GR", "[", 
      RowBox[{"r", ",", "\[Lambda]"}], "]"}], "6"]}]}], ";"}]}], "Input",
 CellChangeTimes->{3.7427310922829666`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Rho]ADM", "[", 
    RowBox[{"r", ",", "3"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.742303611665124*^9, 3.742303634144764*^9}, 
   3.742303675016835*^9, 3.7427310601937103`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
      CapForm["Butt"], LineBox[CompressedData["
1:eJwV13c4198XAHAjiih7Zu/x4TMolc+9pyibEF9E2URZDZWZChmhUvYoITuJ
tBQiW3YlKyEjKWT3+/z+eb+f13Of9z3n3nOe5zxvCUdvMxcGOjq6y7TH/9+s
m3GDjFlVSHqLnemOehY+uyMi10niMv7xPOlgAs1zUu65ueI3cYbDo+Fomrsc
Gl4ZDdzGQT/2LoTRXPzESlZXPBl/2Wfmc5HmSPqZuMPumVheccvWleby/DeB
ogMPcO8drSozmrM6I54IbzzCnogQcpDm2JVjEwLij7HPj8YKcZqviAsJ82kX
YT99SSsGmt11v5lwu5fiv2xGp0fUsrCShuXhHUefYP8um6kXNEu2vhhkHijH
xmT73gSaBe3F/Jk8KvDb6nNEF5o5Fq9xbtt4hr/MFK+q0bwpbHSUXrwaGyow
9DdRsvBi6ZORf09e4Mjt/83conlaiy9gS+sV5t2r63WM5gHP4dJ1txqcVRX1
9gM5C0/9k5DZDHyLmaNk40No/qZ33G/jyDvsU/innUzz56/P2db7a/Ggc2vK
LVIW7pObsV7LqsMZsmT5fTR/9BXJWz1dj4uigmQGiVn4A1PYoZX199iCJ85H
mOZnBIOLS2JN2OZpnLG3ShYu8w+qW5xqwiHW2x3WCVm46F0px+KTZixCVPp+
jeYHFjyFv7Va8e2BEK0o5SwcH/R1eN6tAxscZ7I/o5iFG75F3PMX6MS7d13e
PqiQhet3SFD/BnbilJhBSV2aa8zMo5aPfMQfnlRX8spn4cqJKuml/i4s+1jB
NlwmC1fsNG05r9mNz897FH2SptWTOO27mNWNt0xszynQXHxlT82f0z3YIKzH
9Y1kFs7ZddX693ov1nVXmn8tloUT9urfmhf7hA3+WY5zC2bhjMxtOt9iPmEx
7mtOwgK08+yo+de3+gkvyn+vFeWn5fuZ4vum+zM+nvpZWpA3C68FixyPjRjE
c4mskYMcWdix8Zeg0vwwHmrVcM/YnoU1kixO71YZweYfOKjOzFn4TWv5kZvO
I/iBcvymDFMWblE/uxX4cQQ36bzRTmfIwt+3j3k7F47iZdNlpsq1TCxY1GJG
OfUNk8570MuPZ+KsEXnV4sRv+KXOsVnSaCaW5Q3fKdf6DavOlDZThjKxWjDU
C+0fxz6vM06LDWRi42PP1Bm4v2Oz7cVu91oycdhihsDHhgk8sk2JxPQkE09r
+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

       "]]},
     Annotation[#, "Charting`Private`Tag$428849#1"]& ]}, {}, {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.1668065868422666`*^-11},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Rational[1, 1000000], 20}, {1.1668065868422666`*^-11, 
     0.03165873943998701}}, {{1.*^-6, 20}, {1.1668065868422666`*^-11, 
     0.03165873943998701}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7423036071879163`*^9, 3.742303634519164*^9}, 
   3.742303675469236*^9, 3.7423037901294374`*^9, 3.742304232597015*^9, 
   3.742465056009424*^9, 3.7424651694840236`*^9, 3.7427198769095373`*^9, 
   3.7427240653710947`*^9, 3.7427257773543015`*^9, 3.742726507491184*^9, 
   3.7427279613965387`*^9, 3.7427282165505867`*^9, 3.7427284573692093`*^9, 
   3.7427287519289265`*^9, 3.742730315945874*^9, {3.7427310450460835`*^9, 
   3.7427310611453123`*^9}, 3.7427363642009225`*^9, 3.7427439681559205`*^9, 
   3.7427446712033553`*^9, 3.7427519247561016`*^9, 3.7428247955245905`*^9, 
   3.742879200836014*^9, {3.7428943031720343`*^9, 3.742894330986883*^9}, 
   3.7558645650877147`*^9}]
}, Open  ]],

Cell[TextData[{
 "Find the maximal slicing for the example ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "ADM"], TraditionalForm]]],
 " in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ","
}], "Text",
 CellChangeTimes->{{3.74230308059859*^9, 3.7423030983982215`*^9}, {
   3.742303522120967*^9, 3.742303572930256*^9}, 3.7423036056435137`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"s", ",", "sol"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", "r_", "]"}], ":=", 
     RowBox[{"\[Rho]ADM", "[", 
      RowBox[{"r", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Alpha]sol", "=", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Alpha]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " "}], "r"], 
            RowBox[{
             SuperscriptBox["\[Alpha]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}]}], "\[Equal]", " ", 
          RowBox[{
           RowBox[{"\[Alpha]", "[", "r", "]"}], 
           RowBox[{"s", "[", "r", "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Alpha]", "'"}], "[", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]], "]"}], "\[Equal]", "3"}], ",", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", "30", "]"}], "\[Equal]", "1"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[Alpha]", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], ",", "60"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"\[Alpha]sol", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]], ",", "20"}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7423035083617425`*^9, 3.7423035146173534`*^9}, {
  3.7423035800594683`*^9, 3.7423035926798906`*^9}, {3.742303638403571*^9, 
  3.7423036618036118`*^9}, {3.742731053064498*^9, 3.7427310643433175`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
      CapForm["Butt"], LineBox[CompressedData["
1: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
3RJ/5pzB/g+nPp2Q
       "]]},
     Annotation[#, "Charting`Private`Tag$429002#1"]& ]}, {}, {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7683029911058168},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Rational[1, 1000000], 20}, {0.7683029911058168, 0.9819820899796772}}, {{
     1.*^-6, 20}, {0.7683029911058168, 0.9819820899796772}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7423030997398233`*^9, 3.742303413919177*^9, 3.742303481732496*^9, 
   3.742303517612559*^9, {3.7423035778598647`*^9, 3.7423035931478915`*^9}, {
   3.742303639916774*^9, 3.742303662318413*^9}, 3.742303790269838*^9, 
   3.7423042327374153`*^9, 3.742465056149824*^9, 3.742465169608824*^9, 
   3.7427198770499372`*^9, 3.7427240655114946`*^9, 3.742725777494702*^9, 
   3.742726507631584*^9, 3.7427279615369387`*^9, 3.7427282166909866`*^9, 
   3.74272845749401*^9, 3.742728752053727*^9, 3.7427303160706744`*^9, {
   3.742731045217684*^9, 3.7427310648737183`*^9}, 3.742736364356923*^9, 
   3.7427439682963204`*^9, 3.7427446713593554`*^9, 3.7427519248965015`*^9, 
   3.742824795696191*^9, 3.7428792009764137`*^9, {3.7428943033436346`*^9, 
   3.742894331111684*^9}, 3.7558645652077146`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The linear finite-difference algorithm (2nd order in accuarcy)\
\>", "Section",
 CellChangeTimes->{{3.7423036826608486`*^9, 3.7423037508797684`*^9}, {
  3.7424653842974005`*^9, 3.7424653908962126`*^9}, {3.7424654242022705`*^9, 
  3.7424654757915616`*^9}, {3.742724099488354*^9, 3.7427241029515605`*^9}}],

Cell["\<\
Here we verify the verification of Algorithm 11.3 from Burden & Faires (2016) \
Numerical Analysis.
(see Section \[OpenCurlyDoubleQuote]Finite-Difference Methods for Linear \
Problems\[CloseCurlyDoubleQuote] on p. 700)\
\>", "Text",
 CellChangeTimes->{{3.7423036826608486`*^9, 3.7423037508797684`*^9}, {
  3.7424653842974005`*^9, 3.7424653908962126`*^9}, {3.742465439693098*^9, 
  3.7424654462139096`*^9}, {3.7427279951705976`*^9, 3.74272802482625*^9}, {
  3.742728271588483*^9, 3.7427282745836887`*^9}}],

Cell["The differential equation we want to solve reads:", "Text",
 CellChangeTimes->{{3.7427252104005055`*^9, 3.7427252118825083`*^9}, {
  3.7427256028211946`*^9, 3.7427256455808697`*^9}, {3.7427256993073645`*^9, 
  3.7427257073257785`*^9}, {3.7427280372906713`*^9, 3.742728039755476*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DE", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"P", "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Q", "[", "x", "]"}], 
     RowBox[{"y", "[", "x", "]"}]}], "+", 
    RowBox[{"R", "[", "x", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.742303196257193*^9}, {
   3.74272519018287*^9, 3.742725233535346*^9}, {3.74272529821306*^9, 
   3.742725316496292*^9}, {3.742725420643075*^9, 3.7427254286458893`*^9}, {
   3.7427256003095903`*^9, 3.7427256283428397`*^9}, {3.7427257083709803`*^9, 
   3.7427257085269804`*^9}, {3.742726745353802*^9, 3.742726757755824*^9}, 
   3.742727010446068*^9, {3.742727119334259*^9, 3.742727132734683*^9}, {
   3.7427271843873734`*^9, 3.7427272077250147`*^9}, {3.742727759000783*^9, 
   3.7427277600615845`*^9}, {3.7427280451842856`*^9, 3.7427280945583725`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DE", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"P", "[", "x", "]"}], " ", 
     RowBox[{"y", "[", "x", "]"}]}], "+", 
    RowBox[{"R", "[", "x", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7558645413827143`*^9, 3.7558645546157146`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fdD", "=", "1"}], ";", 
   RowBox[{"fdG", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "required", " ", "accuracy", " ", "specified", " ", "by", " ", 
    "the", " ", "finite", " ", "difference", " ", "depth"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.742303196257193*^9}, {
   3.74272519018287*^9, 3.742725233535346*^9}, {3.74272529821306*^9, 
   3.742725316496292*^9}, {3.742725420643075*^9, 3.7427254286458893`*^9}, {
   3.7427256003095903`*^9, 3.7427256283428397`*^9}, {3.7427257083709803`*^9, 
   3.7427257085269804`*^9}, {3.742726745353802*^9, 3.742726757755824*^9}, 
   3.742727010446068*^9, {3.742727119334259*^9, 3.742727132734683*^9}, {
   3.7427271843873734`*^9, 3.7427272077250147`*^9}, {3.742727759000783*^9, 
   3.7427277600615845`*^9}, {3.7427280451842856`*^9, 3.742728097241577*^9}}],

Cell[CellGroupData[{

Cell["The finite differences", "Subsubsection",
 CellChangeTimes->{{3.7427270550777464`*^9, 3.742727059289754*^9}}],

Cell["\<\
Convert DE to finite difference equation using central FD derivatives:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
  3.74272626616556*^9, 3.742726305205629*^9}, {3.742726353128913*^9, 
  3.7427263666229367`*^9}, {3.742726400272196*^9, 3.7427264115354156`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "fdD"}], ",", "fdD", ",", "1"}], "]"}]}], 
             "]"}]}], "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "fdD"}], ",", "fdD", ",", "1"}], "]"}]}], 
             "]"}]}], "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723263928887*^9}, {
   3.742724573043786*^9, 3.742724591904219*^9}, {3.742724783426756*^9, 
   3.742724799104783*^9}, {3.7427257103053837`*^9, 3.7427257113817854`*^9}, {
   3.7427259295013685`*^9, 3.7427259799830575`*^9}, {3.742726643056422*^9, 
   3.7427266451156263`*^9}, {3.7427267382401896`*^9, 3.742726743981*^9}, 
   3.742727195525793*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7558650334391146`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]]}], "+", 
  RowBox[{
   FractionBox["2", "3"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", "n"]}], "-", 
  RowBox[{
   FractionBox["2", "3"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "+", 
  RowBox[{
   FractionBox["1", "12"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{"2", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.755865033469115*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Convert DE to  finite difference equation using forward FD derivatives on the \
left boundary:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
  3.74272626616556*^9, 3.7427264260434413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE$L", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}], "]"}]}], 
           "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}], "]"}]}], 
           "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723411801546*^9}, {
   3.742724485995633*^9, 3.7427245128900805`*^9}, {3.742724613915858*^9, 
   3.7427246231666737`*^9}, {3.7427253765417976`*^9, 3.742725380192204*^9}, {
   3.742725712239787*^9, 3.742725713347389*^9}, {3.7427259279725657`*^9, 
   3.7427259595626216`*^9}, {3.7427260475935764`*^9, 3.742726109853286*^9}, 
   3.742726253077137*^9, {3.7427265212192087`*^9, 3.742726576287305*^9}, {
   3.7427266375174127`*^9, 3.74272664171482*^9}, {3.742727157492926*^9, 
   3.74272715956773*^9}, 3.7427271975849967`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "4"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "6"], "+", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"3", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7558650335591145`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
  FractionBox[
   RowBox[{"5", " ", "h", " ", 
    SubscriptBox["w", "n"]}], "6"], "+", 
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", "n"]}], "-", 
  RowBox[{
   FractionBox["3", "2"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{"2", "+", "n"}]]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{"3", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.755865033599115*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Convert DE to  finite difference equation using backward FD derivatives on \
the right boundary:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
   3.74272626616556*^9, 3.742726346686102*^9}, {3.7427263836269665`*^9, 
   3.742726392893383*^9}, 3.7427264285238457`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE$R", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"-", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}]}], 
             "]"}]}], "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"-", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}]}], 
             "]"}]}], "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723411801546*^9}, {
   3.742724485995633*^9, 3.7427245128900805`*^9}, {3.742724613915858*^9, 
   3.7427246412471056`*^9}, {3.742725385574213*^9, 3.742725386666215*^9}, {
   3.7427257140961905`*^9, 3.7427257152193923`*^9}, {3.742725937784983*^9, 
   3.7427259387989855`*^9}, {3.742726131178523*^9, 3.7427261593521724`*^9}, {
   3.7427265803589125`*^9, 3.742726600888548*^9}, {3.742726648500832*^9, 
   3.7427266491560335`*^9}, {3.7427271633741364`*^9, 3.74272716505894*^9}, 
   3.742727199987401*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "12"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "6"], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.755865033639115*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "+", 
  RowBox[{
   FractionBox["1", "12"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}]]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]]}], "+", 
  RowBox[{
   FractionBox["3", "2"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "-", 
  FractionBox[
   RowBox[{"5", " ", "h", " ", 
    SubscriptBox["w", "n"]}], "6"], "+", 
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", "n"]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "h", " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.755865033679115*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The linear system to solve", "Subsubsection",
 CellChangeTimes->{{3.7427270550777464`*^9, 3.742727077448186*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fdN", "=", "5"}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464296744238*^9}, {3.7424645744053783`*^9, 
   3.7424645760121813`*^9}, 3.742464642655498*^9, {3.7424648383734417`*^9, 
   3.7424648386386423`*^9}, 3.7424649382292175`*^9, 3.74246499105091*^9, {
   3.7427219739668207`*^9, 3.7427220181616983`*^9}, 3.7427221480329266`*^9, {
   3.7427222198398523`*^9, 3.742722220541854*^9}, {3.74272467216636*^9, 
   3.742724673741963*^9}, {3.7427248325356417`*^9, 3.7427248768241196`*^9}, {
   3.7427249466654425`*^9, 3.7427249479134445`*^9}, 3.742724980174301*^9, {
   3.7427250150101624`*^9, 3.742725077425872*^9}, 3.7427251102171297`*^9, {
   3.742725492824402*^9, 3.742725569389336*^9}, {3.742725716030594*^9, 
   3.7427257181677976`*^9}, 3.742726174515399*^9, {3.742726450363884*^9, 
   3.742726451112685*^9}, {3.7427274231145926`*^9, 3.742727533281986*^9}, {
   3.742727564981242*^9, 3.742727577866864*^9}, 3.7427277332451377`*^9, 
   3.742727816112483*^9, {3.7427278763129888`*^9, 3.742727880821397*^9}, {
   3.742727950289319*^9, 3.742727952707323*^9}, {3.7427294343697257`*^9, 
   3.7427294646337786`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fdSys", "=", 
   RowBox[{"Table", "[", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"we", " ", "assume", " ", "that", " ", 
       SubscriptBox["w", "n"], " ", "starts", " ", "at", " ", "n"}], " ", 
      "\[Equal]", " ", 
      RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", "\[Equal]", "0"}], ",", "fdDE$L", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"n", "\[Equal]", "fdN"}], ",", "fdDE$R", ",", "fdDE"}], 
           "]"}]}], "]"}], "/.", 
        RowBox[{
         SubscriptBox["w", "n_"], "\[RuleDelayed]", 
         SuperscriptBox["x", 
          RowBox[{"n", "+", "2"}]]}]}], ",", "x", ",", 
       RowBox[{"fdN", "+", "4"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "fdN"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
      "fdSys", "\[LeftDoubleBracket]", "All", "\[RightDoubleBracket]"}], "//",
       "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["w", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"fdN", "+", "1"}]}], "}"}]}], "]"}]}], "]"}], "}"}]}], "//",
       "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< \[Equal] \>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "//", 
      "MatrixForm"}]}], "}"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"fdSys", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", 
         RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "//", 
      "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["w", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "}"}]}], "//",
       "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< \[Equal] \>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"-", 
          RowBox[{"fdSys", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"-", 
           RowBox[{"fdSys", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
         SubscriptBox["w", "L"]}], "+", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"-", 
           RowBox[{"fdSys", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
         SubscriptBox["w", "R"]}]}], "/.", 
       RowBox[{
        SubscriptBox["w", "n_"], "\[RuleDelayed]", 
        RowBox[{"Style", "[", 
         RowBox[{
          SubscriptBox["w", "n"], ",", "Red"}], "]"}]}]}], "//", 
      "MatrixForm"}]}], "}"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464296744238*^9}, {3.7424645744053783`*^9, 
   3.7424645760121813`*^9}, 3.742464642655498*^9, {3.7424648383734417`*^9, 
   3.7424648386386423`*^9}, 3.7424649382292175`*^9, 3.74246499105091*^9, {
   3.7427219739668207`*^9, 3.7427220181616983`*^9}, 3.7427221480329266`*^9, {
   3.7427222198398523`*^9, 3.742722220541854*^9}, {3.74272467216636*^9, 
   3.742724673741963*^9}, {3.7427248325356417`*^9, 3.7427248768241196`*^9}, {
   3.7427249466654425`*^9, 3.7427249479134445`*^9}, 3.742724980174301*^9, {
   3.7427250150101624`*^9, 3.742725077425872*^9}, 3.7427251102171297`*^9, {
   3.742725492824402*^9, 3.742725569389336*^9}, {3.742725716030594*^9, 
   3.7427257181677976`*^9}, 3.742726174515399*^9, {3.742726450363884*^9, 
   3.742726451112685*^9}, {3.7427274231145926`*^9, 3.742727533281986*^9}, {
   3.742727564981242*^9, 3.742727577866864*^9}, 3.7427277332451377`*^9, 
   3.742727816112483*^9, {3.7427278763129888`*^9, 3.742727880821397*^9}, {
   3.742727950289319*^9, 3.742727952707323*^9}, {3.7427294343697257`*^9, 
   3.7427294646337786`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "0"]}], 
         FractionBox["h", "4"], 
         RowBox[{
           FractionBox[
            RowBox[{"5", " ", "h"}], "6"], "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["P", "0"]}]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"3", " ", "h"}], "2"]}], 
         FractionBox["h", "2"], 
         RowBox[{"-", 
           FractionBox["h", "12"]}], "0", "0", "0"}, {
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "1"]}], 
         RowBox[{"-", 
           FractionBox["h", "12"]}], 
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["P", "1"]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}], 
         FractionBox["h", "12"], "0", "0", "0"}, {
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "2"]}], "0", 
         RowBox[{"-", 
           FractionBox["h", "12"]}], 
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["P", "2"]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}], 
         FractionBox["h", "12"], "0", "0"}, {
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "3"]}], "0", "0", 
         RowBox[{"-", 
           FractionBox["h", "12"]}], 
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["P", "3"]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}], 
         FractionBox["h", "12"], "0"}, {
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "4"]}], "0", "0", "0", 
         RowBox[{"-", 
           FractionBox["h", "12"]}], 
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["P", "4"]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}], 
         FractionBox["h", "12"]}, {
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["R", "5"]}], "0", "0", "0", 
         FractionBox["h", "12"], 
         RowBox[{"-", 
           FractionBox["h", "2"]}], 
         FractionBox[
          RowBox[{"3", " ", "h"}], "2"], 
         RowBox[{
           RowBox[{"-", 
             FractionBox[
              RowBox[{"5", " ", "h"}], "6"]}], "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["P", "5"]}]}], 
         RowBox[{"-", 
           FractionBox["h", "4"]}]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\"\[CenterDot]\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"1"}, {
         SubscriptBox["w", 
          RowBox[{"-", "1"}]]}, {
         SubscriptBox["w", "0"]}, {
         SubscriptBox["w", "1"]}, {
         SubscriptBox["w", "2"]}, {
         SubscriptBox["w", "3"]}, {
         SubscriptBox["w", "4"]}, {
         SubscriptBox["w", "5"]}, {
         SubscriptBox["w", "6"]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" \[Equal] \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{"0"}, {"0"}, {"0"}, {"0"}, {"0"}, {"0"}}, ColumnAlignments -> 
        Center, RowSpacings -> 1, ColumnAlignments -> Left], Column], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "Row",
  BaseStyle->Medium,
  DisplayFunction->(RowBox[{
     TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{
       RowBox[{"{", 
         TemplateSlotSequence[1, ","], "}"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7423032063660107`*^9, {3.742303304802184*^9, 3.7423033563602743`*^9}, {
   3.7423034107523713`*^9, 3.742303481748096*^9}, {3.7423037902854376`*^9, 
   3.7423038629659653`*^9}, 3.7423042327686152`*^9, 3.7424643908194866`*^9, 
   3.742464518978481*^9, {3.742464590489006*^9, 3.742464642983099*^9}, {
   3.742464676133157*^9, 3.742464696101192*^9}, {3.742464919867985*^9, 
   3.742464938775218*^9}, 3.7424649914565105`*^9, 3.7424650561966248`*^9, 
   3.742465169655624*^9, 3.742719877081137*^9, 3.7427211534481792`*^9, 
   3.7427211889538417`*^9, {3.7427212221361*^9, 3.742721230560115*^9}, 
   3.7427218552038116`*^9, 3.7427219892236476`*^9, 3.742722021827705*^9, {
   3.742722164256955*^9, 3.74272220701663*^9}, 3.742723480972068*^9, 
   3.7427240655738945`*^9, {3.7427247128980317`*^9, 3.742724747234692*^9}, 
   3.742724961828669*^9, 3.7427255774389505`*^9, 3.7427257857003164`*^9, 
   3.7427258229063816`*^9, 3.742725853934836*^9, 3.742726026611539*^9, 
   3.7427265077095847`*^9, {3.742727106807437*^9, 3.7427271350434866`*^9}, {
   3.742727168054145*^9, 3.742727210345819*^9}, 3.74272763218716*^9, 
   3.742727699938079*^9, {3.742727734243539*^9, 3.74272776325959*^9}, 
   3.742727816549284*^9, {3.7427278813049974`*^9, 3.7427278857354054`*^9}, {
   3.7427279529725237`*^9, 3.742727961661739*^9}, 3.742728216846987*^9, 
   3.7427284576188097`*^9, 3.742728752194127*^9, {3.7427294399545355`*^9, 
   3.742729467894184*^9}, 3.7427303162734747`*^9, 3.7427310454048843`*^9, 
   3.742736364544123*^9, 3.7427393150071387`*^9, 3.742743968514721*^9, 
   3.7427446715465555`*^9, 3.742751925068102*^9, 3.742824795898991*^9, 
   3.742879201179214*^9, {3.7428943035464354`*^9, 3.742894331298884*^9}, {
   3.7558645654577146`*^9, 3.7558645936617146`*^9}, {3.755865025415115*^9, 
   3.7558650371511145`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{
           FractionBox[
            RowBox[{"5", " ", "h"}], "6"], "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["P", "0"]}]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"3", " ", "h"}], "2"]}], 
         FractionBox["h", "2"], 
         RowBox[{"-", 
           FractionBox["h", "12"]}], "0", "0"}, {
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["P", "1"]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}], 
         FractionBox["h", "12"], "0", "0"}, {
         RowBox[{"-", 
           FractionBox["h", "12"]}], 
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["P", "2"]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}], 
         FractionBox["h", "12"], "0"}, {"0", 
         RowBox[{"-", 
           FractionBox["h", "12"]}], 
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["P", "3"]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}], 
         FractionBox["h", "12"]}, {"0", "0", 
         RowBox[{"-", 
           FractionBox["h", "12"]}], 
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["P", "4"]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}]}, {"0", "0", 
         FractionBox["h", "12"], 
         RowBox[{"-", 
           FractionBox["h", "2"]}], 
         FractionBox[
          RowBox[{"3", " ", "h"}], "2"], 
         RowBox[{
           RowBox[{"-", 
             FractionBox[
              RowBox[{"5", " ", "h"}], "6"]}], "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["P", "5"]}]}]}}, RowSpacings -> 1, ColumnSpacings -> 
       1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\"\[CenterDot]\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         SubscriptBox["w", "0"]}, {
         SubscriptBox["w", "1"]}, {
         SubscriptBox["w", "2"]}, {
         SubscriptBox["w", "3"]}, {
         SubscriptBox["w", "4"]}, {
         SubscriptBox["w", "5"]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" \[Equal] \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{
          RowBox[{
            RowBox[{"-", 
              FractionBox[
               RowBox[{"h", " ", 
                 StyleBox[
                  SubscriptBox["w", "L"], 
                  RGBColor[1, 0, 0], StripOnInput -> False]}], "4"]}], "-", 
            RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SubscriptBox["R", "0"]}]}]}, {
          RowBox[{
            FractionBox[
             RowBox[{"h", " ", 
               StyleBox[
                SubscriptBox["w", "L"], 
                RGBColor[1, 0, 0], StripOnInput -> False]}], "12"], "-", 
            RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SubscriptBox["R", "1"]}]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "2"]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "3"]}]}, {
          RowBox[{
            RowBox[{"-", 
              FractionBox[
               RowBox[{"h", " ", 
                 StyleBox[
                  SubscriptBox["w", "R"], 
                  RGBColor[1, 0, 0], StripOnInput -> False]}], "12"]}], "-", 
            RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SubscriptBox["R", "4"]}]}]}, {
          RowBox[{
            FractionBox[
             RowBox[{"h", " ", 
               StyleBox[
                SubscriptBox["w", "R"], 
                RGBColor[1, 0, 0], StripOnInput -> False]}], "4"], "-", 
            RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SubscriptBox["R", "5"]}]}]}}, RowSpacings -> 1, 
        ColumnAlignments -> Center, ColumnAlignments -> Left], Column], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "Row",
  BaseStyle->Medium,
  DisplayFunction->(RowBox[{
     TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{
       RowBox[{"{", 
         TemplateSlotSequence[1, ","], "}"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7423032063660107`*^9, {3.742303304802184*^9, 3.7423033563602743`*^9}, {
   3.7423034107523713`*^9, 3.742303481748096*^9}, {3.7423037902854376`*^9, 
   3.7423038629659653`*^9}, 3.7423042327686152`*^9, 3.7424643908194866`*^9, 
   3.742464518978481*^9, {3.742464590489006*^9, 3.742464642983099*^9}, {
   3.742464676133157*^9, 3.742464696101192*^9}, {3.742464919867985*^9, 
   3.742464938775218*^9}, 3.7424649914565105`*^9, 3.7424650561966248`*^9, 
   3.742465169655624*^9, 3.742719877081137*^9, 3.7427211534481792`*^9, 
   3.7427211889538417`*^9, {3.7427212221361*^9, 3.742721230560115*^9}, 
   3.7427218552038116`*^9, 3.7427219892236476`*^9, 3.742722021827705*^9, {
   3.742722164256955*^9, 3.74272220701663*^9}, 3.742723480972068*^9, 
   3.7427240655738945`*^9, {3.7427247128980317`*^9, 3.742724747234692*^9}, 
   3.742724961828669*^9, 3.7427255774389505`*^9, 3.7427257857003164`*^9, 
   3.7427258229063816`*^9, 3.742725853934836*^9, 3.742726026611539*^9, 
   3.7427265077095847`*^9, {3.742727106807437*^9, 3.7427271350434866`*^9}, {
   3.742727168054145*^9, 3.742727210345819*^9}, 3.74272763218716*^9, 
   3.742727699938079*^9, {3.742727734243539*^9, 3.74272776325959*^9}, 
   3.742727816549284*^9, {3.7427278813049974`*^9, 3.7427278857354054`*^9}, {
   3.7427279529725237`*^9, 3.742727961661739*^9}, 3.742728216846987*^9, 
   3.7427284576188097`*^9, 3.742728752194127*^9, {3.7427294399545355`*^9, 
   3.742729467894184*^9}, 3.7427303162734747`*^9, 3.7427310454048843`*^9, 
   3.742736364544123*^9, 3.7427393150071387`*^9, 3.742743968514721*^9, 
   3.7427446715465555`*^9, 3.742751925068102*^9, 3.742824795898991*^9, 
   3.742879201179214*^9, {3.7428943035464354`*^9, 3.742894331298884*^9}, {
   3.7558645654577146`*^9, 3.7558645936617146`*^9}, {3.755865025415115*^9, 
   3.755865037171115*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neumann BC on the left", "Subsubsection",
 CellChangeTimes->{{3.7427311193490143`*^9, 3.742731120363016*^9}, {
   3.742731247175639*^9, 3.742731249219242*^9}, {3.742731334332992*^9, 
   3.7427313380925984`*^9}, 3.7427363893833666`*^9}],

Cell[TextData[{
 "Here we use the Neumann BC on the left with the vanishing derivative so \
that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["w", "L"], "\[Equal]", 
    SubscriptBox["w", 
     RowBox[{"-", "1"}]], "\[Equal]", 
    SubscriptBox["w", "1"]}], TraditionalForm]]],
 ". Hence, ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"h", " ", 
     SubscriptBox["P", "0"]}], "2"], TraditionalForm]]],
 " cancels out in the first raw."
}], "Text",
 CellChangeTimes->{{3.7423037572289796`*^9, 3.7423037758086123`*^9}, {
  3.742303902075234*^9, 3.742303957096531*^9}, {3.742728683538407*^9, 
  3.74272868564441*^9}, {3.74273639108377*^9, 3.7427363919885716`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fdSys", ":=", 
   RowBox[{"Table", "[", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"we", " ", "assume", " ", "that", " ", 
       SubscriptBox["w", "n"], " ", "starts", " ", "at", " ", "n"}], " ", 
      "\[Equal]", " ", 
      RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"n", "\[Equal]", "0"}], ",", "fdDE$L", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"n", "\[Equal]", "fdN"}], ",", "fdDE$R", ",", "fdDE"}], 
            "]"}]}], "]"}], "/.", 
         RowBox[{
          SubscriptBox["w", 
           RowBox[{"-", "1"}]], "\[Rule]", 
          SubscriptBox["w", "1"]}]}], "/.", 
        RowBox[{
         SubscriptBox["w", "n_"], "\[RuleDelayed]", 
         SuperscriptBox["x", 
          RowBox[{"n", "+", "2"}]]}]}], ",", "x", ",", 
       RowBox[{"fdN", "+", "4"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "fdN"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"fdSys", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", 
         RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "//", 
      "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["w", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "}"}]}], "//",
       "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< \[Equal] \>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"-", 
          RowBox[{"fdSys", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"-", 
           RowBox[{"fdSys", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
         SubscriptBox["w", "L"]}], "+", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"-", 
           RowBox[{"fdSys", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
         SubscriptBox["w", "R"]}]}], "/.", 
       RowBox[{
        SubscriptBox["w", "n_"], "\[RuleDelayed]", 
        RowBox[{"Style", "[", 
         RowBox[{
          SubscriptBox["w", "n"], ",", "Red"}], "]"}]}]}], "//", 
      "MatrixForm"}]}], "}"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423031149654503`*^9}, 
   3.7423031548391204`*^9, {3.742303209111616*^9, 3.7423032326364574`*^9}, {
   3.7423040224606457`*^9, 3.7423040433178825`*^9}, {3.742465152479994*^9, 
   3.742465163337613*^9}, 3.742721252836954*^9, {3.7427247551907063`*^9, 
   3.742724776344343*^9}, {3.7427249455578403`*^9, 3.7427249700966835`*^9}, {
   3.7427256980593624`*^9, 3.7427256982621627`*^9}, {3.742725862546051*^9, 
   3.742725864074854*^9}, {3.7427276144499288`*^9, 3.7427276293479548`*^9}, {
   3.7427276784412413`*^9, 3.7427276859604545`*^9}, 3.742727719952914*^9, {
   3.7427277853960295`*^9, 3.7427278106368732`*^9}, {3.742727956264129*^9, 
   3.7427279594153347`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{
           FractionBox[
            RowBox[{"5", " ", "h"}], "6"], "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["P", "0"]}]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"5", " ", "h"}], "4"]}], 
         FractionBox["h", "2"], 
         RowBox[{"-", 
           FractionBox["h", "12"]}], "0", "0"}, {
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           RowBox[{"-", 
             FractionBox["h", "12"]}], "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["P", "1"]}]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}], 
         FractionBox["h", "12"], "0", "0"}, {
         RowBox[{"-", 
           FractionBox["h", "12"]}], 
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["P", "2"]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}], 
         FractionBox["h", "12"], "0"}, {"0", 
         RowBox[{"-", 
           FractionBox["h", "12"]}], 
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["P", "3"]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}], 
         FractionBox["h", "12"]}, {"0", "0", 
         RowBox[{"-", 
           FractionBox["h", "12"]}], 
         FractionBox[
          RowBox[{"2", " ", "h"}], "3"], 
         RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SubscriptBox["P", "4"]}], 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "h"}], "3"]}]}, {"0", "0", 
         FractionBox["h", "12"], 
         RowBox[{"-", 
           FractionBox["h", "2"]}], 
         FractionBox[
          RowBox[{"3", " ", "h"}], "2"], 
         RowBox[{
           RowBox[{"-", 
             FractionBox[
              RowBox[{"5", " ", "h"}], "6"]}], "+", 
           RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SubscriptBox["P", "5"]}]}]}}, RowSpacings -> 1, ColumnSpacings -> 
       1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\"\[CenterDot]\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         SubscriptBox["w", "0"]}, {
         SubscriptBox["w", "1"]}, {
         SubscriptBox["w", "2"]}, {
         SubscriptBox["w", "3"]}, {
         SubscriptBox["w", "4"]}, {
         SubscriptBox["w", "5"]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" \[Equal] \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "0"]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "1"]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "2"]}]}, {
          RowBox[{
            RowBox[{"-", 
              SuperscriptBox["h", "2"]}], " ", 
            SubscriptBox["R", "3"]}]}, {
          RowBox[{
            RowBox[{"-", 
              FractionBox[
               RowBox[{"h", " ", 
                 StyleBox[
                  SubscriptBox["w", "R"], 
                  RGBColor[1, 0, 0], StripOnInput -> False]}], "12"]}], "-", 
            RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SubscriptBox["R", "4"]}]}]}, {
          RowBox[{
            FractionBox[
             RowBox[{"h", " ", 
               StyleBox[
                SubscriptBox["w", "R"], 
                RGBColor[1, 0, 0], StripOnInput -> False]}], "4"], "-", 
            RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SubscriptBox["R", "5"]}]}]}}, RowSpacings -> 1, 
        ColumnAlignments -> Center, ColumnAlignments -> Left], Column], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "Row",
  BaseStyle->Medium,
  DisplayFunction->(RowBox[{
     TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{
       RowBox[{"{", 
         TemplateSlotSequence[1, ","], "}"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7423040339110656`*^9, 3.7423040436766825`*^9}, 
   3.7423042328778152`*^9, 3.7424649503036385`*^9, 3.7424649975249214`*^9, 
   3.7424650562590246`*^9, {3.7424651551475983`*^9, 3.742465169702424*^9}, 
   3.742719877174738*^9, 3.7427211535261793`*^9, 3.7427211890630417`*^9, {
   3.7427212222141*^9, 3.7427212590145645`*^9}, 3.7427218553286123`*^9, 
   3.7427221643037553`*^9, 3.7427240656518946`*^9, 3.7427247688407297`*^9, {
   3.742724961906669*^9, 3.742724970361884*^9}, 3.7427257858095164`*^9, 
   3.7427258718904676`*^9, 3.742726029559944*^9, 3.742726507756385*^9, {
   3.7427271069946375`*^9, 3.742727135074687*^9}, {3.7427271681009445`*^9, 
   3.742727210392619*^9}, {3.742727629862756*^9, 3.7427276322495604`*^9}, {
   3.742727686303655*^9, 3.742727720296115*^9}, 3.7427277633063903`*^9, {
   3.7427277944128447`*^9, 3.7427278111672745`*^9}, 3.7427278857666054`*^9, 
   3.742727961708539*^9, 3.742728216909387*^9, 3.7427284576656103`*^9, {
   3.7427287489025216`*^9, 3.7427287522409277`*^9}, 3.742729467956585*^9, 
   3.7427303163358746`*^9, 3.7427310454828844`*^9, 3.7427363646221232`*^9, 
   3.7427393150383387`*^9, 3.742743968561521*^9, 3.7427446716089563`*^9, 
   3.7427519250993023`*^9, 3.7428247959769917`*^9, 3.7428792012416143`*^9, {
   3.742894303608835*^9, 3.7428943313612843`*^9}, 3.7558645655077143`*^9, 
   3.7558645969917145`*^9}]
}, Open  ]],

Cell["\<\
The above tridiagonal linear system should be solved using the Crout \
factorization (Algorithm 6.7).\
\>", "Text",
 CellChangeTimes->{{3.7423040688863273`*^9, 3.7423040797751465`*^9}, {
  3.742304128603232*^9, 3.7423041365748463`*^9}, {3.742304213299781*^9, 
  3.7423042300230103`*^9}, {3.742465085602676*^9, 3.742465097037496*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The linear finite-difference algorithm (4th order in accuarcy)\
\>", "Section",
 CellChangeTimes->{{3.7423036826608486`*^9, 3.7423037508797684`*^9}, {
  3.7424653842974005`*^9, 3.7424653908962126`*^9}, {3.7424654242022705`*^9, 
  3.7424654757915616`*^9}, {3.7427198635715137`*^9, 3.7427198645387154`*^9}, {
  3.7427240929363427`*^9, 3.742724108005969*^9}}],

Cell["The differential equation we are interested in:", "Text",
 CellChangeTimes->{{3.7427252104005055`*^9, 3.7427252118825083`*^9}, {
  3.7427256028211946`*^9, 3.7427256455808697`*^9}, {3.7427256993073645`*^9, 
  3.7427257073257785`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DE", "=", 
   RowBox[{
    RowBox[{"-", "2"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "-", 
      RowBox[{
       RowBox[{"P", "[", "x", "]"}], " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Q", "[", "x", "]"}], 
       RowBox[{"y", "[", "x", "]"}]}], "-", 
      RowBox[{"R", "[", "x", "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DE", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"P", "[", "x", "]"}], " ", 
     RowBox[{"y", "[", "x", "]"}]}], "+", 
    RowBox[{"R", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fdD", "=", "1"}], ";", 
  RowBox[{"fdG", "=", "1"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"FD", " ", "depths"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"fdN", "=", "5"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.742303196257193*^9}, {
   3.74272519018287*^9, 3.742725233535346*^9}, {3.74272529821306*^9, 
   3.742725316496292*^9}, {3.742725420643075*^9, 3.7427254286458893`*^9}, {
   3.7427256003095903`*^9, 3.7427256283428397`*^9}, {3.7427257083709803`*^9, 
   3.7427257085269804`*^9}, {3.742726745353802*^9, 3.742726757755824*^9}, 
   3.74272723923707*^9, {3.742728108738797*^9, 3.7427281651328964`*^9}, {
   3.742728575882618*^9, 3.7427285812490273`*^9}, 3.7427372527137165`*^9, 
   3.742737411802796*^9, 3.742739440245159*^9, {3.742741845419792*^9, 
   3.7427418471981955`*^9}, 3.742744056935676*^9, 3.742744153187845*^9, {
   3.742744227927576*^9, 3.74274425282522*^9}, {3.742751807131895*^9, 
   3.7427518251967263`*^9}, 3.742751864368395*^9, {3.742824978372512*^9, 
   3.742825007076562*^9}, {3.742825207240514*^9, 3.742825208036115*^9}, {
   3.7558646105647144`*^9, 3.7558646107147145`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DE", "=", 
   RowBox[{"12", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "-", 
      RowBox[{
       RowBox[{"P", "[", "x", "]"}], " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Q", "[", "x", "]"}], 
       RowBox[{"y", "[", "x", "]"}]}], "-", 
      RowBox[{"R", "[", "x", "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fdD", "=", "2"}], ";", 
   RowBox[{"fdG", "=", "3"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"FD", " ", "depths"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fdN", "=", "50"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.742303196257193*^9}, {
   3.74272519018287*^9, 3.742725233535346*^9}, {3.74272529821306*^9, 
   3.742725316496292*^9}, {3.742725420643075*^9, 3.7427254286458893`*^9}, {
   3.7427256003095903`*^9, 3.7427256283428397`*^9}, {3.7427257083709803`*^9, 
   3.7427257085269804`*^9}, {3.742726745353802*^9, 3.742726757755824*^9}, 
   3.74272723923707*^9, {3.742728108738797*^9, 3.7427281651328964`*^9}, {
   3.742728575882618*^9, 3.7427285812490273`*^9}, 3.7427372527137165`*^9, 
   3.742737411802796*^9, 3.742739440245159*^9, {3.742741845419792*^9, 
   3.7427418471981955`*^9}, 3.742744056935676*^9, 3.742744153187845*^9, {
   3.742744227927576*^9, 3.74274425282522*^9}, {3.742751807131895*^9, 
   3.7427518251967263`*^9}, 3.742751864368395*^9, 3.7428944465518866`*^9}],

Cell["\<\
Use the following test equation to compare with Randall J. LeVeque (2006) \
Finite Difference Methods for Differential Equation, 10.1.1.111.1693:\
\>", "Text",
 CellChangeTimes->{{3.7427252104005055`*^9, 3.7427252118825083`*^9}, {
  3.7427256028211946`*^9, 3.7427256117444105`*^9}, {3.7427268446011763`*^9, 
  3.7427269287331247`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"False", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DE", "=", 
     RowBox[{"12", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "-", 
        RowBox[{"f", "[", "x", "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"fdD", "=", "2"}], ";", 
    RowBox[{"fdG", "=", "3"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"FD", " ", "depths"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"fdN", "=", "5"}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.742725709244582*^9, 3.7427257094005823`*^9}, {
   3.74272672683657*^9, 3.742726761765031*^9}, {3.742726941057146*^9, 
   3.742726956142372*^9}, {3.7427272600943065`*^9, 3.742727281871945*^9}, {
   3.74272813889365*^9, 3.7427281623872914`*^9}, {3.74272852608733*^9, 
   3.742728526617731*^9}, {3.7427374095251923`*^9, 3.742737410024393*^9}, 
   3.7427375782238884`*^9, 3.742737974729785*^9, {3.74273829626295*^9, 
   3.7427383036729627`*^9}, {3.7427389058184204`*^9, 3.742738906270821*^9}, {
   3.7427391708316855`*^9, 3.7427391713152866`*^9}, {3.742751802873087*^9, 
   3.742751862979993*^9}}],

Cell[CellGroupData[{

Cell["The finite differences", "Subsubsection",
 CellChangeTimes->{{3.7427270550777464`*^9, 3.742727059289754*^9}}],

Cell["\<\
Convert DE to finite difference equation using central FD derivatives:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
  3.74272626616556*^9, 3.742726305205629*^9}, {3.742726353128913*^9, 
  3.7427263666229367`*^9}, {3.742726400272196*^9, 3.7427264115354156`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "fdD"}], ",", "fdD", ",", "1"}], "]"}]}], 
             "]"}]}], "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "fdD"}], ",", "fdD", ",", "1"}], "]"}]}], 
             "]"}]}], "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723263928887*^9}, {
   3.742724573043786*^9, 3.742724591904219*^9}, {3.742724783426756*^9, 
   3.742724799104783*^9}, {3.7427257103053837`*^9, 3.7427257113817854`*^9}, {
   3.7427259295013685`*^9, 3.7427259799830575`*^9}, {3.742726643056422*^9, 
   3.7427266451156263`*^9}, {3.7427267382401896`*^9, 3.742726743981*^9}, 
   3.7427272193470345`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7558646134947147`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "12"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "2"], "+", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7558646135347147`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "12"}], " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "-", 
  SubscriptBox["w", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "n"}]], "-", 
  RowBox[{"h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]]}], "+", 
  RowBox[{"16", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
  RowBox[{"8", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "-", 
  RowBox[{"30", " ", 
   SubscriptBox["w", "n"]}], "-", 
  RowBox[{"12", " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["Q", "n"], " ", 
   SubscriptBox["w", "n"]}], "+", 
  RowBox[{"16", " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "-", 
  RowBox[{"8", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "-", 
  SubscriptBox["w", 
   RowBox[{"2", "+", "n"}]], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"2", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.7558646135647144`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Convert DE to  finite difference equation using forward FD derivatives on the \
left boundary:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
  3.74272626616556*^9, 3.7427264260434413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE$L", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}], "]"}]}], 
           "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}], "]"}]}], 
           "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723411801546*^9}, {
   3.742724485995633*^9, 3.7427245128900805`*^9}, {3.742724613915858*^9, 
   3.7427246231666737`*^9}, {3.7427253765417976`*^9, 3.742725380192204*^9}, {
   3.742725712239787*^9, 3.742725713347389*^9}, {3.7427259279725657`*^9, 
   3.7427259595626216`*^9}, {3.7427260475935764`*^9, 3.742726109853286*^9}, 
   3.742726253077137*^9, {3.7427265212192087`*^9, 3.742726576287305*^9}, {
   3.7427266375174127`*^9, 3.74272664171482*^9}, {3.7427272236526423`*^9, 
   3.742727246849883*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "4"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "6"], "+", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"3", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7558646136047144`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["11", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "3"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"3", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7558646136447144`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "12"}], " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "+", 
  RowBox[{"11", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
  RowBox[{"3", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "-", 
  RowBox[{"20", " ", 
   SubscriptBox["w", "n"]}], "+", 
  RowBox[{"10", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", "n"]}], "-", 
  RowBox[{"12", " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["Q", "n"], " ", 
   SubscriptBox["w", "n"]}], "+", 
  RowBox[{"6", " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "-", 
  RowBox[{"18", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "+", 
  RowBox[{"4", " ", 
   SubscriptBox["w", 
    RowBox[{"2", "+", "n"}]]}], "+", 
  RowBox[{"6", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"2", "+", "n"}]]}], "-", 
  SubscriptBox["w", 
   RowBox[{"3", "+", "n"}]], "-", 
  RowBox[{"h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"3", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.7558646136747146`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Convert DE to  finite difference equation using backward FD derivatives on \
the right boundary:\
\>", "Text",
 CellChangeTimes->{{3.742465008975342*^9, 3.742465052437018*^9}, {
   3.74272626616556*^9, 3.742726346686102*^9}, {3.7427263836269665`*^9, 
   3.742726392893383*^9}, 3.7427264285238457`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fdDE$R", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["h", "2"], "DE"}], "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "2", ",", 
              RowBox[{"-", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}]}], 
             "]"}]}], "/", 
           SuperscriptBox["h", "2"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f_", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Echo", "@", 
            RowBox[{"fdDerivative", "[", 
             RowBox[{"f", ",", "n", ",", "1", ",", 
              RowBox[{"-", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "fdG", ",", "1"}], "]"}]}]}], 
             "]"}]}], "/", "h"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f_", "[", "x", "]"}], "\[RuleDelayed]", 
          SubscriptBox["f", "n"]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "n_", "]"}], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}], ",", 
        RowBox[{
         SubscriptBox["y", "n"], "\[RuleDelayed]", 
         SubscriptBox["w", "n"]}]}], "}"}]}], "//", "Expand"}], "//", 
    "Echo"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464324871087*^9}, {3.7424645671825657`*^9, 
   3.742464571378973*^9}, 3.7424646394262924`*^9, {3.7424648420550485`*^9, 
   3.7424648422422485`*^9}, {3.7427199216660156`*^9, 
   3.7427199324456344`*^9}, {3.7427232274772234`*^9, 3.742723411801546*^9}, {
   3.742724485995633*^9, 3.7427245128900805`*^9}, {3.742724613915858*^9, 
   3.7427246412471056`*^9}, {3.742725385574213*^9, 3.742725386666215*^9}, {
   3.7427257140961905`*^9, 3.7427257152193923`*^9}, {3.742725937784983*^9, 
   3.7427259387989855`*^9}, {3.742726131178523*^9, 3.7427261593521724`*^9}, {
   3.7427265803589125`*^9, 3.742726600888548*^9}, {3.742726648500832*^9, 
   3.7427266491560335`*^9}, {3.7427272263046474`*^9, 
   3.7427272515142913`*^9}, {3.742737157132349*^9, 3.7427371866008005`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "12"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "6"], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7558646137147145`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "12"]}], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"y", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "n", "]"}]}], "3"], "+", 
  RowBox[{
   FractionBox["11", "12"], " ", 
   RowBox[{"y", "[", 
    RowBox[{"1", "+", "n"}], "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7558646137447147`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "12"}], " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["R", "n"]}], "-", 
  SubscriptBox["w", 
   RowBox[{
    RowBox[{"-", "3"}], "+", "n"}]], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}]]}], "+", 
  RowBox[{"4", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]]}], "-", 
  RowBox[{"6", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]]}], "+", 
  RowBox[{"6", " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
  RowBox[{"18", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}], "-", 
  RowBox[{"20", " ", 
   SubscriptBox["w", "n"]}], "-", 
  RowBox[{"10", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", "n"]}], "-", 
  RowBox[{"12", " ", 
   SuperscriptBox["h", "2"], " ", 
   SubscriptBox["Q", "n"], " ", 
   SubscriptBox["w", "n"]}], "+", 
  RowBox[{"11", " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}], "-", 
  RowBox[{"3", " ", "h", " ", 
   SubscriptBox["P", "n"], " ", 
   SubscriptBox["w", 
    RowBox[{"1", "+", "n"}]]}]}]], "Echo",
 CellChangeTimes->{3.7558646137747145`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["w", 
      RowBox[{"n", "+", "1"}]], "/.", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"fdDE$R", "\[Equal]", "0"}], ",", 
        SubscriptBox["w", 
         RowBox[{"n", "+", "1"}]]}], "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["R", "n_"], "\[RuleDelayed]", "0"}], ",", 
      RowBox[{
       SubscriptBox["P", "n_"], "\[RuleDelayed]", 
       RowBox[{"PP", "[", "n", "]"}]}], ",", 
      RowBox[{
       SubscriptBox["Q", "n_"], "\[RuleDelayed]", 
       RowBox[{"QQ", "[", "n", "]"}]}]}], "}"}]}], "/.", 
   RowBox[{
    SubscriptBox["w", "n_"], "\[RuleDelayed]", 
    RowBox[{"gAlp", "[", 
     RowBox[{"m", ",", "n"}], "]"}]}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "CForm"}]}], "Input",
 CellChangeTimes->{{3.742835978165125*^9, 3.7428360161700773`*^9}, {
  3.742836053079742*^9, 3.7428360944510145`*^9}, {3.742836148271109*^9, 
  3.7428362160688286`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"-", "11"}], "+", 
    RowBox[{"3", " ", "h", " ", 
     RowBox[{"PP", "[", "n", "]"}]}]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"gAlp", "[", 
      RowBox[{"m", ",", 
       RowBox[{
        RowBox[{"-", "3"}], "+", "n"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"h", " ", 
        RowBox[{"PP", "[", "n", "]"}]}]}], ")"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"gAlp", "[", 
         RowBox[{"m", ",", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "n"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "h", " ", 
           RowBox[{"PP", "[", "n", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"gAlp", "[", 
         RowBox[{"m", ",", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", "h", " ", 
           RowBox[{"PP", "[", "n", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"gAlp", "[", 
         RowBox[{"m", ",", "n"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"10", "+", 
          RowBox[{"5", " ", "h", " ", 
           RowBox[{"PP", "[", "n", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox["h", "2"], " ", 
           RowBox[{"QQ", "[", "n", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.7428359812227306`*^9, 3.742836016528878*^9, {3.742836062845359*^9, 
   3.742836094794215*^9}, {3.7428361495815115`*^9, 3.742836216458829*^9}, 
   3.7428363505254645`*^9, 3.742879201444414*^9, {3.742894304092436*^9, 
   3.7428943315952845`*^9}, 3.742894452573497*^9, 3.7558645660277147`*^9, 
   3.7558646138647146`*^9}],

Cell["\<\
(gAlp(m,-3 + n)*(-1 + h*PP(n)) - 
     2*(gAlp(m,-2 + n)*(-2 + 3*h*PP(n)) - 3*gAlp(m,-1 + n)*(1 + 3*h*PP(n)) + 
        gAlp(m,n)*(10 + 5*h*PP(n) + 6*Power(h,2)*QQ(n))))/(-11 + 3*h*PP(n))\
\>", "Output",
 CellChangeTimes->{
  3.7428359812227306`*^9, 3.742836016528878*^9, {3.742836062845359*^9, 
   3.742836094794215*^9}, {3.7428361495815115`*^9, 3.742836216458829*^9}, 
   3.7428363505254645`*^9, 3.742879201444414*^9, {3.742894304092436*^9, 
   3.7428943315952845`*^9}, 3.742894452573497*^9, 3.7558645660277147`*^9, 
   3.7558646138647146`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The linear system to solve", "Subsubsection",
 CellChangeTimes->{{3.7427270550777464`*^9, 3.742727077448186*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fdSys", "=", 
   RowBox[{"Table", "[", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"we", " ", "assume", " ", "that", " ", 
       SubscriptBox["w", "n"], " ", "starts", " ", "at", " ", "n"}], " ", 
      "\[Equal]", " ", 
      RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", "\[Equal]", "0"}], ",", "fdDE$L", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"n", "\[Equal]", "fdN"}], ",", "fdDE$R", ",", "fdDE"}], 
           "]"}]}], "]"}], "/.", 
        RowBox[{
         SubscriptBox["w", "n_"], "\[RuleDelayed]", 
         SuperscriptBox["x", 
          RowBox[{"n", "+", "2"}]]}]}], ",", "x", ",", 
       RowBox[{"fdN", "+", "4"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "fdN"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"fdN", "\[LessEqual]", " ", "5"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
        "fdSys", "\[LeftDoubleBracket]", "All", "\[RightDoubleBracket]"}], "//",
         "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              SubscriptBox["w", "i"], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"-", "1"}], ",", 
                RowBox[{"fdN", "+", "1"}]}], "}"}]}], "]"}]}], "]"}], "}"}]}],
         "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
       "\"\< \[Equal] \>\"", ",", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "//", 
        "MatrixForm"}]}], "}"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"fdN", "\[LessEqual]", "5"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"fdSys", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"3", ";;", 
           RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "//", 
        "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["w", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "}"}]}], "//",
         "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< \[Equal] \>\"", 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{"-", 
            RowBox[{"fdSys", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
          "+", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{"-", 
             RowBox[{"fdSys", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
           SubscriptBox["w", "L"]}], "+", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{"-", 
             RowBox[{"fdSys", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", 
               RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
           SubscriptBox["w", "R"]}]}], "/.", 
         RowBox[{
          SubscriptBox["w", "n_"], "\[RuleDelayed]", 
          RowBox[{"Style", "[", 
           RowBox[{
            SubscriptBox["w", "n"], ",", "Red"}], "]"}]}]}], "//", 
        "MatrixForm"}]}], "}"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423032060228105`*^9}, {
   3.7423032989053736`*^9, 3.742303358918679*^9}, {3.742303400596753*^9, 
   3.7423034742132826`*^9}, {3.742303808100669*^9, 3.742303862653965*^9}, {
   3.7424642752474003`*^9, 3.742464296744238*^9}, {3.7424645744053783`*^9, 
   3.7424645760121813`*^9}, 3.742464642655498*^9, {3.7424648383734417`*^9, 
   3.7424648386386423`*^9}, 3.7424649382292175`*^9, 3.74246499105091*^9, {
   3.7427219739668207`*^9, 3.7427220181616983`*^9}, 3.7427221480329266`*^9, {
   3.7427222198398523`*^9, 3.742722220541854*^9}, {3.74272467216636*^9, 
   3.742724673741963*^9}, {3.7427248325356417`*^9, 3.7427248768241196`*^9}, {
   3.7427249466654425`*^9, 3.7427249479134445`*^9}, 3.742724980174301*^9, {
   3.7427250150101624`*^9, 3.742725077425872*^9}, 3.7427251102171297`*^9, {
   3.742725492824402*^9, 3.742725569389336*^9}, {3.742725716030594*^9, 
   3.7427257181677976`*^9}, 3.742726174515399*^9, {3.742726450363884*^9, 
   3.742726451112685*^9}, {3.7427274231145926`*^9, 3.742727533281986*^9}, {
   3.742727564981242*^9, 3.742727577866864*^9}, 3.742727824692498*^9, {
   3.7427278960626235`*^9, 3.742727908293045*^9}, {3.742727941709304*^9, 
   3.742727944361308*^9}, {3.7427293265267363`*^9, 3.7427293925928526`*^9}, {
   3.7427383132825794`*^9, 3.742738317619387*^9}, {3.7427517846678553`*^9, 
   3.7427517905802655`*^9}}],

Cell[TextData[{
 "The vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "n"], TraditionalForm]]],
 " can be evaluated using a linear equation solver for band-diagonal systems \
(see NR3, section 2.4.2 on pp. 58--61)."
}], "Text",
 CellChangeTimes->{{3.742730338612714*^9, 3.7427303630423565`*^9}, {
  3.7427304021638546`*^9, 3.7427305370260916`*^9}}],

Cell["If you selected the test DE, compare the results with:", "Text",
 CellChangeTimes->{{3.7427266884449024`*^9, 3.7427266977113185`*^9}, {
  3.7427267835582695`*^9, 3.742726787629876*^9}, {3.742726970853198*^9, 
  3.7427269745972047`*^9}}],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnXucVMWZ96uZ7kEZbkMWyId3QpRV/BCjWZQXRY27rrfVRFEjMYnBC66J
qHgJxuuGeMF4ARPkTcRNWF/BNfhJAMUoyTpmvURQIroQxBvD6wUdrgrOgDDT
06ffU1WnZ/r0uXb36VP1nPl9//Ajp890V/dTT9XzO1XPUwdOufqcH/RhjE3f
z/zPORffcMKPfnTxTd8abP5j0lXTp/7wqkv/9bSrrrv0h5f+6Ogp/LYhacZ2
9WcsDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxWRXP3jJGJaacOVv
Vu1W3RYAAAAAAAAAiI7OP/0j6+ar87apbg8AAAAAAAAARMSWKSwz9Y8tra3v
Pj45bSqeAx7Pqm4SyO89nnnyjX2qWwcAAEBf1vXznED6/jmC98cMVQW1Nk6t
gfEBTd4+oW7ym9b/51YeafbXuul7qn5X6v6sHAwoAAAAKgN6R2Oox0cwPiDJ
9pNt8mbzRLPD1l1XdY+l7s/KwYACAACgMqB3NIZ6fATjA4pkb+1zhW01Z8NB
Zo+tf6za96Xuz8rBgAIAAKAyoHc0hnp8BOMDiqxtHP2+7YKxkOfwlFwsH+r+
rBwMKAAAACoDekdjqMdHWhu/86mxC2v6Ae8fdNsnNf2A5PD+CSOfUt2GHnIz
624tSdZpPcTssul5Vb4xdX9WjhxQxtw1y4WHO1W3DgAAgL5smu02d1wSsd7B
DFURtTZOrdHZ+O23pw9cXdNP2DUp9S8tNf2EpJCbp4H+7WHnEYwNvNumeLI3
Co1eZckC6v6sHDmgaNRVAAAAkGZ5xHoHM1SERGecWqOx8dumscYXavwZmyey
A1+u8WckgvYTWeraLtWt6GbjULPXZuYXXzIW8548/L1afBwdf1aOxgMKAAAA
gkDvaAyd+Ehf45tyZ9BSo9afAsETjlX9Wd8/qW5ED3Lb2fm2BchV+5uX+v21
Fh9Hx5+Vo++AAgAAgCLQOxpDJz5SYvytiy8bxupOvWu1z4KBKXfqH6q53Mnn
W4+B4AkmN5Oxsdtq/zn7Nqx+5ve/mHnxpH4sdYXP8aHvDuHddortDqGBauN0
dPxZOZhNAAAAREmy9M6nZ4uU4K9MvqDAUfzfqR8UP8FdM8K8VHeKdcMkHt6M
a1XWZD/oxEcKjL/3EdOOqaPHmLa88EOvmzpmsLobO+JozpomNmFDHB9Ema1j
WJ8ZuZp/TOclRfUBLvNRw3sv5g72pO2a0Dv71WQHJB1/Vo4OswkADtqm+T5B
AQDoS7L0jldZpOJWGQ84X6/Ndv2qoRMfxW/87VcwduCTu82P/sOxbIJH/eCu
eWn2zc9iaY+xrIGdHsPSBWmaM2z/lbX/mG2je1w743uWztY7Dj39CXv4Ipzu
CzUpP0HHn5Wjw2zi5OMnbjszzdiA79yyaL3vUxSj5bGbTjS/wIDvzf7L7rha
p4jdK/99Kn/qdMotv/tAdVtqDq9Xr1uvDIGxblzjCtWNAEA1ydI77UvvmzVr
5oVjuqOdpkvumTVr1m/eKL7pw1/P+ulJPQFR0wU/m/1nPZ/Y0ImPYjd+26WM
DX3d/J8t15gBSJ+bXR/iG8392ag33F6pAR03xLWUFJLQc1xsk2H2csaObauq
HaEiztyKJY/d99OjhXuXm4mTu5f/lU8rq4COPytHh9mkhOxfp6aLnpF99QHP
6D774mR+Z90/D+M3jvxVgh+DGBvvHl70cOHqTaobVGPeHqlZrwxF59IRLP0b
1a0AQDXJ0jsWHdfL4XfQb71aY7RcI+augbf7P6dTC534KG7jZ29lstDXnguF
pce5LuJsGh9P8o5ks/lp/xnbpwUSeo6LbzLcNMrvZJvgdoSPODmf/m9+06E7
ymtj+xk8Ur2zJnak48/K0Wg2sfiAzxjpb/1s1qxrredpA2d/6nrnx/zOwxe0
mMPTrlXX92PsgMf1fJ5WPVtuNb9e3cSHX/u4tfXNJ67sl/QkRjHd6NQrw5Bb
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
TB7zhO1CVElapvcW/+s5+n7bsZf/x6tDXiiDXv/PH57hlTt36N/+04PrIt9Z
XHXnd47yeoxd/+a6377XptIZlvbKbNRQNDhH850td18/e/Y1+lIvmXD2D2fP
nv2zZ8vf9NpPZ//D0YO5zoTT//G6/+o18dtdISg+IjypZ/M3lNrjGe9/3rgw
r9Sw74YNaSsuGqkmPRvyQgp0X5rSJ1eNE9SeraNDgVN67h6v8j+zXYpKycpU
fPnacYNhUucFa9pRNAO2/ddp+bJ72fkzH6rbG/Q+5r+146/G6ndO/BeJN9jS
XZmNG5IG52i+U9J9SVCto39e71OLqy7028Soq55LX0wlKD4iPKmj9wqlchd5
Sc7WM/xLeXLYU5w1U1I5eSewzju5f0/ryTVEUHu2jg4FDiksO1OH3E7lOwnL
9MYVw71MYOqtT7++du3z95w3XMiEyuLyE72TO/3WJ1avXbvy19/QUV7u6N+G
f4+8roPAj89b5X3NblpyiXe6e/5S2o3vdFdm44aowbmd7xRm+TFibnpP/ff4
ceQhKwz+VmcIio8IT+p4fKRSXfd5dbmw07+WD9xY+57t56iUjmbTir8ekdqH
V40R1J6to0OBM95eGDxpcCnfSVimwsIDvQD5tGUDwwqKq6YpCbu89cwdoT5+
x1sD/ywsPlifbNe1W2vfWvy999qo6we+QIsrjvfOeEbIG92V8sps2JA1OLfz
ne1f9mPEnaOKV5yv0hpOCYqPCE/CbfH6Xn9WWd/M4FHlqbWpe3FBpxrz+/aX
rV22naVyXxc6ptooQe3ZOjoU2Ld17et/fPDmaQOziZ3Idxoq05YfeHHjxP8o
f9qxebo62vmba92z8l3XVpTyhcn6bEPymOJj41XlVg7vTFcqd/LmoS9l6zJR
mQ0Y6gbndr7z6gf9s54QNUixeK/KX5fO4TKC4iPCk3CP7OT9WQ73ut6+C/xL
eae7at/z2kfVsEsinmCKt3SM6rrTdiEcIKg9W0eHAtsGV0Tq+MrhjuQ7jZXJ
C4dVxZCn4tLzvFhypweGvJytKS4YUbMZ3cMj/bOumQv6/N5Kdf24UH7orWO8
N17sft+RjcpMbugbnNv5ziPBGKATtkW8p3CD2j2Vo9lExUeEJ6F6L9N/lvML
Oi3vDL895c/wGfuChcK1Te9FSu0bvjBdpghqz9bRocC2Uvi165m3vthzgVv5
TrIy+RHyX5SvcfWU3sND5S53/AbxK/vUzmfd9rXgjuF9lYf9rUuqR4MvHaMk
zIjNRmUmN/QNzul8pzR9p2NWVIV2n6qOFDVWMzlB8RHhSag39QqDnbfp/+25
42O5T/9HSOa+fEydVdvSwzvFjivTfYpJCGrP1tGhwLbi8rvuuu+pVTq66HMm
32mgTN16DHVF2D8wqtrxduUHfhNmLKmI+/TEBa1y/FbfTSpkwoO+w6Y+8qch
L2iLMlGZDRj6Bud0vpNk+k7/qx8cdnVqEtxKguIjwpNQT+jhbLssjnqL7prT
+oByQM/ZaX+ElYig9mwdHQoc4ky+UyauTMX5nUrlTttW8yPOt6uNn/RLOWpB
xdFnglkduzxafnDVh71Dx9TMDn16VyVrkHh6K7M5Wcx3kkzf6X+ks+u+qNcF
ExQfEZ6EKc6Nv36Xj1G5b6ZvLfVKizpT/wwrAUHt2To6FDhEYr6zbIL3cuVC
OAMh8oluf+G8tHtQzIPfLj+6bkIw3OeGsmN939d/gjk1n7BF7z0q6RZbeiuz
OVnMdxJN35nlL3+VSoLiI8KTML3n6L9K5HBL/XgnRTMO69BfP+NW2i6FbYLa
s3V0KHCIwHzH36ij6lZaMItUdc5tQ/FasKK0PtfIioSllO+oGWXDedZM8g4M
r13ctHCNd3zYzELNC65Kb2U2J4P5TqLpO9u/nNrpO5LiI8KTMMFz+fOjet0/
7VF9GyuNCnNUaldRTE5Qe7aODgUOkZfv6F0Oqgd/+es8C9icJnG+E8zpmbS+
5hOK9+oX9ntj6MtqSHorszkZzHcSTt+JzockExQfEZ6E8Z/LR7bZwg1xCX06
PDdGqYNqv5ayRVB7to4OBQ6Rl+9sOEK/enj1LjSF53559zOujywuTWSoyldC
8p3uU+v1Ev5kH0EDJ9Jbmc3JYL6TcPpOdD4kmaD4iPAkzCK9SfDOj0a8Qz8B
CnkcnzrvT61dSTRzBLVn6+hQ4BBx+U5xQT52bIyzer/jR35VIwJe3iM4+pPq
Q2EDKP6s12rOXSQmGUhvZTYng/nOomTTd6LzIckExUeEJyH0wxulPrAq4i36
Gq+5bZNCBX0pT+uNf2OaCWrP1tGhwCHi8p0tx+sXo5cGddfmi70Af9S1lSO1
luwSjPcZvH8YjFoLXZ93/b76pcnv1r7iphRXZlOyl+/4U86qluOosf3L0fmQ
aILiI8KTEMFyBVF9rt6PVNKsyubpL6v03plIRlB7to4OBQ4Rl+/oBZmV2nNt
m8tkSvG1pU+vqzo0v2aQWxAihv4Fgv5j+B+GtpjmpLkym5G9fGf751R8Vpvm
6TuS4iPCkxCbp+g/yqkRuwDo/UgFDTJuwYYDlOq6y3Yp7BLUnq2jQ4FDpOU7
pZvFaVqquPdC/5TK9zUIQsTOO0PeHfQfcr5xMlaZsbKX75Sm70RntYtSPH1H
UnxEeBLCH10cmY/r/UhTu5x6Bf/b6ltihlMPCUHt2To6FDhEWr4TrAyaqp3Y
S5uQlm+qEwxaC+1Qgz+OnJvhGavMWNnLd0q770TdHteZb4oHyQiKjwhPQvhX
cNQtJn/F9dQup16hOM871QM22C6GVYLas3V0KHCItHznj6PqPvmQKpjO3XFl
2T2z50fH5DtypoxmrDJjZS7fGdh9J3L6ztbjUjx9R1J8RHhSqzhX/02ihhDr
Fddzl8fctuld9sOjvZb/lZtfHHhj8eUfHabUhP8zb7Wxsg49/SgrCyvRRRDU
nq2jQ4FDhOU7pbkuaepqtp3ln9IR5bN69HdKdL5z7PvtKl+LslWZ8TKX75R2
34mevvPyHnKeWDZOUHxEeDKocOtYFeKTr9W8Uw/ZjLltU1xxivezIz+hb/Bc
GexL+v6PRyj1Pyar2hVsXKYXCM2ncivoxAS1Z+voUOAQYflO36X+V06wX2fv
4qsPUSp36Hl3vCQ4Vnp8pD6jvZaWH1tYPxEo5Tt7S9nKO1uVGS9z+U6i6TsL
8ymeviMpPiI8GRT8LWpUbhbt0wPeohP6nrkjckff9edi/4a541TuS3ppms3T
1ScWrO/vf2/JOfncNDEJz9bDVNYn8Ahqz9bRocAhwvKd0leQ3gqhuPxE/a5j
9f6bHVN/I7VBrTvGT3eeLD8W9KdhX6w7kgQxa5plqjITyFy+w/QdSfER4cmg
4tIfz9Zm6tHFw06cHbhxUc1QYn/AW+RyBd2z8qNvCR7JFxd0qtzJm/vfPz93
kt+J9/zqs5L28PQ7sCxsNVSfoPZsHR0KHCIs31k3YeDpRuEX4zqn/3aTd+yN
e7zvi46vPdvuYhqxebo+nylPVRyMyneiXnNRlioziazlO0zfERUfEZ7Uekbf
hYkarua36ajtebx0Z/COlt50rPPm3jn5v1pfek1JemLiX8zZWIuuHkHt2To6
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
+YqZAnoOQ8WG8nqNKv+Eu2ftcksrUxjqxHzK1PJskuIjJyrfokWdftXrldYK
N3iX4HUNXFjvHGfkAY+zl76evTPmiRZ+W1oIas/WZb1DAQAYlbZ85/nR1XMY
9N328jkM/r14Pdxo0w92uqylhdRe2j005lOmlmeTFB85Ufn2BDUVpC3+ZJW1
8T8z6He7qZ3uin9bDGcv/XVTVMf3elr5dSkhqD1bl/EOBQBgVtryHb3lYuVq
V4vyKjetslAvTFYfmjlzv1E3vd/S71oxPDzom2FoeTZJ8ZETlW9PKd/Z7aFg
skqDO3r2zW40Qwrj6qWvF2Q4Yl1Lvy4lBLVn6zLeoQAAzEpbvvP+D/7H+a9U
HNl8+QcvqY4lN8w9MX/AFStM5SVDRVB85ETlW7Qw753+nr8u+pNVOhp9eLLp
JANPQFy99H+3m9pjSft+ncMEtWfrst6hAACMSlu+kyqC4qOsV/7aj6pJ/6kn
r/TNyee++lajP75qsv9sKI3WH666WporlB6C2rN1We9QAABGke84TFB8lPXK
L947ouOUJ7r7N/zziNxJjQ/e0stZH/jSEJTLuu6ZjT/uSitB7dm6rHcoAACj
yHccJig+ynzlFxYeqFT+IKU6/35DMz8+f0Tuq6bW9XNI4fbO3MmbbZfCEYLa
s3WZ71AAACaR7zhMUHxE5fe/ecfXh6sJMxY3t41n4ZZ8x4yt8e+Tpfjwbk2M
7ksrQe3ZOjoUAIBB5DsOExQfUfmt6r5hePoGfj01nnRnkKD2bB0dCgDAIPId
hwmKj6j8lhXmj+i6sdd2KYx6YXLHmaQ7Owhqz9bRoQAADCLfcZig+IjKb13h
4QO7Wt921CFrJndembohei0Q1J6to0MBABhEvuMwQfERlW/C63N+Z7sIJm38
8WPNTWZKKUHt2To6FACAQeQ7DhMUH1H5QAxB7dk6OhQAgEHkOw4TFB9R+UAM
Qe3ZOjoUAIBB5DsOExQfUflADEHt2To6FACAQeQ7DhMUH1H5QAxB7dk6OhQA
gEHkOw4TFB9R+UAMQe3ZOjoUAIBB5DsOExQfUflADEHt2To6FACAQeQ7DhMU
H1H5QAxB7dk6OhQAgEHkOw4TFB9R+UAMQe3ZOjoUAIBB5DsOExQfUflADEHt
2To6FACAQeQ7DhMUH1H5QAxB7dk6OhQAgEHkOw4TFB9R+UAMQe3ZOjoUAIBB
5DsOExQfUflADEHt2To6FACAQeQ7DhMUH1H5QAxB7dk6OhQAgEHkOw4TFB9R
+UAMQe3ZOjoUAIBB5DsOExQfUflADEHt2To6FACAQeQ7DhMUH1H5QAxB7dk6
OhQAgEHkOw4TFB9R+UAMQe3ZOjoUAIBB5DsOExQfUflADEHt2To6FACAQeQ7
DhMUH1H5QAxB7dk6OhQAgEHkOw4TFB9R+UAMQe3ZOjoUAIBB5DsOExQfUflA
DEHt2To6FACAQeQ7DhMUH1H5QAxB7dm6zfvrv9XBW2yXAwCQCoWL9ddKfp6B
j+IbyjSDlTPUqHwghqD2bB03UAAABvF8x2GC7gdT+UAMQe3ZOjoUAIBB5DsO
ExQfUflADEHt2To6FACAQeQ7DhMUH1H5QAxB7dk6OhQAgEHkOw4TFB9R+UAM
Qe3ZOjoUAIBB5DsOExQfUflADEHt2To6FACAQeQ7DhMUH1H5QAxB7dk6OhQA
gEHkOw4TFB9R+UAMQe3ZOjoUAIBB5DsOExQfUflADEHt2To6FACAQeQ7DhMU
H1H5QAxB7dk6OhQAgEHkOw4TFB9R+UAMQe3ZOjoUAIBB5DsOExQfUflADEHt
2To6FACAQeQ7DhMUH1H5QAxB7dk6OhQAgEHkOw4TFB9R+UAMQe3ZOjoUAIBB
5DsOExQfUflADEHt2To6FACAQeQ7DhMUH1H5QAxB7dk6OhQAgEHkOw4TFB9R
+UAMQe3ZOjoUAIBB5DsOExQfUflADEHt2To6FACAQeQ7DhMUH1H5QAxB7dk6
OhQAgEHkOw4TFB9R+UAMQe3ZOjoUAIBB5DsOExQfUflADEHt2To6FACAQeQ7
DhMUH1H5SInepTefvZ/KHXrez5a8Z/aTBbVn6+hQAAAGke84TFB8ROUjFXoe
+Kza4WNz1pv8bEHt2To6FACAQeQ7DhMUH1H5SIM3pqnOc36zau3al355Wt67
ovf8Za+5DxfUnq2jQwEAGES+4zBB8RGVjxR48ciO054v/X9h8cHeJd0xY6ux
TxfUnq2jQwEAGES+4zBB8RGVD/neOqYivVk3VSc8Fxu7qAW1Z+voUAAABpHv
OExQfETlQ7zeK4adW/E0Z+Xe3kXddaepzxfUnq2jQwEAGES+4zBB8RGVD/GW
j9l3dcWB4m16Dk/VweYJas/W0aEAAAwi33GYoPjItcrv+dVBt9kug0mr977y
bdtlMG/1kRN/ZbsMgwrXdFxRNVln7Ue9qzo/x9AvENSerXOtQwEAiEa+4zBB
8ZFjlb/lqvxeS20XwqRNJ+X+9yrbhTCtMMehS6a/f+MnlRp1bUXG03uZf1kb
WrJAUHu2zrEOBQAgG/mOwwTFR25V/ubpasyjtgth1rqpaq8nbRfCsC1HqdxF
fbZLscPLe3iXcOfc8kPFBfqyHveKmV8gqD1b51aHAgAQjnzHYYLiI6cq30t3
Rt9dtF0Kw1KY8CwZqXZ6wHYhBq0Yrq/hU3vKjy3ZxTs0/PdmfoGg9mydUx0K
AEA68h2HCYqP2lb5by741ljVcdwPltZ/LuClO123pC3d6e9fe5jTCc/r91x+
lHcJ7HrGj5cnfGRTuEapg9YPbam07SuXPviLH11z1knDVe7ciO1DX9pdX8PT
Kt7h50CmWqCg9mwd3yYAAIMczXfe+ZL+LLX/aacP+JT+d+5vy2++Lhuvt8c4
tvSGk3RkMnmtid/uCkHxUZvCk223e3WeO2Q/r97PeK3Oe7pnqo7Luoe4IDYs
m6AOXWm7EOF6H/uGXslMTdCNsONryxNlm2/up4bNLAx10fp7zlaDvhWRi207
S7e2+yqO+fnOzobGRgpqz9aR7wAADHI03wmGltQq//Sg6JVMjbR3g6D4qD3h
yVvnKrXXfe95v+7+w9Wh4csE983Jq79+d2jLYUfx3hHq8214HtKwwrJTlPrY
jUve9NKcN+75rFKj50Y8RtlhUafaZfGQF65//b6D/UNn5F46b159wOfvqSz5
Qv1THzC0UoSg9mwd+Q5gTnHF5DFP2C5Es5IW/r3F/3qOvhd67OX/8eqQF8qg
1//zh2d45c4d+rf/9OC6qDcWV935HX8Uxd9c99v32lU6w6xWpqP5zpa7r589
+xp9DZRMOPuHs2fP/tmz5W967aez/+HowVhmwun/eN1/JYmzxBAUH7UlPNn8
DaX2eMb7nzcuzCs17Lth9+qLi0aqSc+GvJAC3Zc6+eRq4w+Gd3z1gR1Vv26q
SjSesPfbSh2+ue7LSbrF1++58ovelbDrKZfPf67u36XwxF13Xv8Ph/h9RKMz
cQqz9E9FlLIhgtqzdeQ7gDE9d49X+Z/ZLkWTkhW++PK148rubF2wph1FM2Db
f52WL7tlnz/zoXqdXu9j/js7/mqsfuPEf3Hx3mcsu5XpaL5T0n1JcL6jf17v
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
Hv2mR/0/WW0KS+cs4k1JZMGOE8xHvvRBybuNp8xtPP0TQbu0/none4tHr++8
Ke2sz8HZdTQ/7qcW0YDrbIOIhVtkHrJZw3StcMkEWBP0sY9i7Px2akkHF6qk
aabd6m6xi5++eWW0ZcaMLLvf2dJSopbFjg2qmsLVBYqT0Bue/wu7p2YeM5am
Jzrc86jfKPE4W2DQoJljXL0NK2huyPWTh+84CsuySVVI4rauqZa5SPSZz9KB
3gFAEDv/jk4mGRXHag+vTi7fhVw0+2lwS/1/2YwN47kR/puuInTf4bNdl9VV
XN1kWlTfK3GH2TDez08+Kvrrnfzu8+lkLvdvyT47kaTO2uT+lk8unUf1IrOI
mt6zPcEKOB1vl5zUnUpM6u/o6GMfxdf5PM1xcOgHC/NxScxonfdYHms7Tkj/
hF4enF3Mmtwxpe4H9naLHRtUNTlM7poTesPzf2HH+MF/zu+Z7sgAkvsDzQo/
2edrbp/g9D6utBVh108evuM46GMxntZI3TPdO8FCDOgzn6UDvQOAGLbM5kvj
8P/skt2U2Mn+lhUoIembPpHdFMF0TqNduLQYPPzCWD3kzty0z3Zd5m7OvlT9
/baaFh1TXIz7ykmA3mE/ialt7IE62RWXmKborQEnytQiKrWqqPtR6S3BX4bJ
y6+lj30UX+ezAJgQETAsz/QkZ2gJr9WVOmcb/U/39eTrn9KouGJ+Aq9QEDFj
g7VK+t166A0v4IUrBtIfePOkustLfrGehQ3mLzPd70StPROYUTxsK0Kvnzx8
x+FLyPJm85HauyD9tV352qHPfJYO9A4AVbF7XqvJ3CtOKa6O6bNvoo+1/txR
yUV7jOfpF7v22L7vOvRbPzYfmJccicfcGjI/tGJ4tt1rbrqp053VahTDWJbx
2a5JebYg46WJpi0xa5v139zLJ5v/vUSY3EmE3sl/8gNqAg277V1unmY3LKLZ
iVv+EHR0Sy2iUmcjGixS4jvF3KFczOiaoI99FF/nU5URyqGQntu7iQ+a1f2g
nzLl23VbevIGFmtSuDPNvXCMx+GBmLFBb51keUOG3/BCvtAUbyxY6e1JpOX5
PiVorL/EfP24JR51RhnZK4oZ0apsbvj10z18J9/bSqzM5T2/aLBHY8WPPvNZ
OtA7AFRFR5PnKpnAeWX5cZTjnrJVT3p+Psb8RkOverTtmSVXj6YW773qX2Jx
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
AAAAAAAAAAAAAACE4f8DKcM4DQ==
     "], {{0, 1042}, {3312, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{555.369230769232, Automatic},
   ImageSizeRaw->{3312, 1042},
   PlotRange->{{0, 3312}, {0, 1042}}]],ImageCache->GraphicsData[
  "CompressedBitmap", "\<\
eJzt3QmYJVdZN/BO93T3TDZAAUkCIQwQlgSioBAii8qiEqMRDKKoGFDZRBCQ
ReRDooIi4r6huINLDBAjuEQBBQ2LRtQgooBxQ+PCpuJOfed36vzrnr70dN+e
7gwTn6nnmZ6+1XWrznnP/93f99QFFz/tsV/5xIuf9rhHX3zGZz7l4ic/9nGP
fuoZD3rSU8qpleOWlpb/aGlp6a/PWPL7UH7Nj5X3DMPwvvZvqf6sP97mx3Hv
cnJpaeVfh9mxNPv1bX4c98F20fu2uugfj1206UXn+bk6fOQjH6mfHz59vMn0
2/2m386cfnvZ9Nu+Q9/73PpzZfi93/u94cwzzxxOPfXUpeXhlFNOKeducYtb
DJ//+Z8/G+jD2sV/9Vd/Ndz61reul+Xi008/fXjwgx88/M///M/SSe26v/7r
vx7ucpe7DKeddlr5NF53j3vcY/iP//iPesW923V/93d/N9z2trfdcL9b3epW
wwMe8IDhP//zP5cOtuve/e53D3e84x033O++973v8L//+7/1ip9q1/3qr/5q
HXx/v9vc5jbDk5/85HrF8vb0+PVf/3V/HH7oh36oXP4zP/Mz5dxP//RPD7/2
a782T4/9w7/8y78ML3/5y+sF5dL6+6Mf/ejhpje9KXqc1C77sz/7s3rPb/7m
bx5e9rKX1Ut95ZWvfKXL7tMu+7d/+7fh537u5zbc7TGPecxwoxvdaPj3f//3
g+2yP/qjP6p3+/Zv//YNd/ulX/ola36LNpHf/u3fHj784Q/XT5/QzkHS7/zO
71iHacJvfetbh3e+8531093rz/W6fj/1Uz9Vb52R3Ote9xo+7dM+rXxjWxqi
1Y1vfGOPG+n15e0Pl112WV2fHiuIc+DAgeEv/uIvlu7Szv33f//3dNOM/Yor
rhg+/uM/HiUmXCDFCSecMPzDP/zD0sn13L7hD/7gDyze8GM/9mMwdHy79Pu/
//uHn/zJnwSZpVM6En3DN3xDPXdWO/ee97xn+Ju/+Zv66UA79wu/8AvDV3/1
V2+Yo8+FHDuBlXV83/vet5EkyFyAuilJ/vAP/3DpdvXcCcNTnvKU4c///M/r
d//rv/5reNKTnjT84z/+Y/38r//6r8OLX/ziioZrr712KRAAJlCcJ9nxxx/v
XhPJ7nOf+wz3u9/9hpe+9KXDs5/97Ez7Na95zTTtE+vPNbevQ4lMQu1nPetZ
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
0Fx5Bg2TNq0gkYHeLIkNSCTa0SrnMAUtoFtk3tIs1shkA9CKKXGPYb/r/PRq
VcaKmOJnCObfrv0NIyAdCeR7BY1TJ60gDaGXtA80kRKmERSKfYnQCxtE/Js+
lzaBGrBTpVOQPU2fqRLj+2AbC3/Dvo7xr3pISkW5b1KmsoXr6+u1H3KnkCSL
5g1RggENdgLJNMPw/AVAqUYGj+XLPHGiVieS/Zxu7nlWYGju2QUo5yghhmuv
PZj3DJ0ehpwiSkwGPIKO8mK36/6ehyhZi87FOpjGSVW7rsxjuq8iDMUEwzDr
tYIhzzKfPbAxA1E2OuVDKuDSwm0TRA0XhHg4hGCBZdNGq9XeV5Jo6ZGFzB5d
mrUaWuVGWxoWcuuWS0RIkhZD+zP5ytQrw7htuzPis8l5CwBuP9eE3ICRvU2B
kR+eUrTMzhyicR/T5OtUHXCG3vOe92QJORzcbhshgCIJmh7aRaEJjiQ5i2w+
ugdaaVAN5ElNbGnot2qsx08yU8YkqjBM2Eu0SOK0REPLvtSDUQH6YIV6NiBP
05W/gZ9QjDCGv5fvpjIEpdSnoGDhpNAcCvq9hOTgChL2AIObNV2ducm51e6c
ufluzB74JVawauIfPtNWPt2xnetDY7mfa+Jc7sxvGTFOw0IpTOCBopUCIRLJ
0vkTjIuSLgqhtGjxQziZ/i9TD3qsBWNNE3luiS/EkeX0bt2GIFgk8W5GVt2G
S6EQQ5Gr3ZuzPYX6mGkolApA95TgV/f24Q9/ODCR/uSZ5yD/zjvvvD2ASf1L
Cla3W59Ulm9H5FSWww9roq8sd13M5pzDBUQGFZOOK14ZlcmpdFgZ6pecPFrn
ncwPxBDA5LhSMHKk3PtoHXaariwDMShrd5OjdKyXHRvXkRiXyAOPUuRhw7g4
OVv59BnXdr56xiUFuxe19sfW8di4bgjjekA7x+xvVQ7TPrY8HrF2n+51hMe/
VYPVdnP6lHpuX3V1Eh4vKjA1TGQJp1t7egqHegs04cJsni9LdaSn3zdOtV6S
eojSPe95z1tuM5RvZeALLxXzLC4t00xWw24iy20LLTH7DC9PXIyQqzUITvqK
CYrRCU3EVWUxSnOpVhmfP24sJ62VqjVAEoBL+adQB5+LL1OuybDJbamm4hFP
w+aKzle4qm82Y5/SYHNkF2bWI5Uujs16pEyZWzf1SK3XW4mXqYcWg2KNsSpR
NI7toqsiJmza4mjq5PoYl1oF3spstU+s8ca2PVG1XiXq2zvBqg8uU+teVqWM
54Q2ZEliw1VqogMAHMUmaM24Kb7u73Zf3IMVeWF7tJKCNBrlzS3wRomf0q6B
Jedca6jxYuQU4tkI9rLnpf5v31iHf8zXdv7qq69OKFzRGaIUl28K3iIWKCtc
rMW6df+PQuv5XXeNEzBbkVA2SzKkFLcZYqbhTQyLRjPSG+Ucp4xTV77f90bZ
EcaBXeZ7o0QSUJApncY5lOMVZMtxtbFdwnk7GGbhuKIyJuNNh4mTZc5nNePr
1flC8OZi1myKRRczS9BC/LS1CtSDEHnOc54TcWfPeouDkAWhafCU/8lk6TAh
kyw90ZTNWu+xd8iEGi6/AiedGSJfIgTa3YJMIiEF4PJ0gnw+882TSkAUiRs+
tmGqsnjuc5+bTiJamXxnvQpbs06xupKjRNiys1laiVVJlaFmyThRlvJFL3pR
eeo555yzNJYaODeLlK/VfjFl+BKjIm1+f/vb3352GwkiiG2IVJuMAdOrQl07
iwyvVaFnJsAn5iHIVzC9QNOSYsQcwFAgH6UgpsavLeJpy6YljChnJUy+aFlP
kGAJdASiW6Au/5xK83EsB2o0hnSlBEhhYWiggxoGiQBRxo0rMbNSrExVFkQC
OYdnFInef4VKnp+q6fevKrH0DB0GTIbLDEhx7mHyQ58FflE7B4SW2afsb5M9
4QwpCQaqm6LIkfxM4YvJvCNqZX3tdpXyHDJNjYbkRFQsKqmlL/cIZWjcNE1G
esPJxmKV0WiRKiqCf1oIgVpBYLuQJlCLnyRBKZyAZbsscrihbfq9oR2I0lGm
Iieyy3Ygi+tPXiKwWn+uZC/ODVMVQ9WqA+99K/ZWzvC53bScm8Wgx2aR9qqg
Ca8AacfNVuFdJeL04qqaq6/GikPZMvGtaLW9O7HKbIBqrwqp1Ljvfe/bV4Yh
nDmutZn29np/ndLQIjCnOKekXMPMBPddZJkDdzMiMKztPNylTEN8uSaVCXbd
XekeD/Kk5BntnACz7xYTbJLrWKVtlVgHpESgWMO5jWyq0krNfYE6NUw99OtP
im7cvnRl2rwaDAN1TZXSjuC/aMN2oK5kcftumzGNSSbqSFiuL5sbNzYWl9S9
gtSt22Z83NiOy7TLQZ5JSgjh7tRSIThwfVG0GzaHBxC7bWRbPI5fOtPI1UL5
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
X7voA1td9M/jRcf9f3DgvpE=\
\>"]]
}], "Text",
 CellChangeTimes->{{3.7427266884449024`*^9, 3.7427266977113185`*^9}, {
  3.7427267835582695`*^9, 3.7427268037447047`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neumann BC on the left", "Subsubsection",
 CellChangeTimes->{{3.7427311193490143`*^9, 3.742731120363016*^9}, {
  3.742731247175639*^9, 3.742731249219242*^9}, {3.742731334332992*^9, 
  3.7427313380925984`*^9}, {3.7427363935641747`*^9, 3.7427363954673777`*^9}}],

Cell[TextData[{
 "Now we use the Neumann BC on the left with the vanishing derivative so that \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["w", "L"], "\[Equal]", 
    SubscriptBox["w", 
     RowBox[{"-", "1"}]], "\[Equal]", 
    SubscriptBox["w", "1"]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7423037572289796`*^9, 3.7423037758086123`*^9}, {
   3.742303902075234*^9, 3.742303957096531*^9}, {3.7427282603720636`*^9, 
   3.7427282606684637`*^9}, {3.742728635100322*^9, 3.742728642541535*^9}, 
   3.742736384438158*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fdSys", ":=", 
   RowBox[{"Table", "[", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"we", " ", "assume", " ", "that", " ", 
       SubscriptBox["w", "n"], " ", "starts", " ", "at", " ", "n"}], " ", 
      "\[Equal]", " ", 
      RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"n", "\[Equal]", "0"}], ",", "fdDE$L", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"n", "\[Equal]", "fdN"}], ",", "fdDE$R", ",", "fdDE"}], 
            "]"}]}], "]"}], "/.", 
         RowBox[{
          SubscriptBox["w", 
           RowBox[{"-", "1"}]], "\[Rule]", 
          SubscriptBox["w", "1"]}]}], "/.", 
        RowBox[{
         SubscriptBox["w", "n_"], "\[RuleDelayed]", 
         SuperscriptBox["x", 
          RowBox[{"n", "+", "2"}]]}]}], ",", "x", ",", 
       RowBox[{"fdN", "+", "4"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "fdN"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"fdN", "\[LessEqual]", "5"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"fdSys", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"3", ";;", 
           RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "//", 
        "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["w", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "}"}]}], "//",
         "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< \[Equal] \>\"", 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{"-", 
            RowBox[{"fdSys", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
          "+", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{"-", 
             RowBox[{"fdSys", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
           SubscriptBox["w", "L"]}], "+", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{"-", 
             RowBox[{"fdSys", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", 
               RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
           SubscriptBox["w", "R"]}]}], "/.", 
         RowBox[{
          SubscriptBox["w", "n_"], "\[RuleDelayed]", 
          RowBox[{"Style", "[", 
           RowBox[{
            SubscriptBox["w", "n"], ",", "Red"}], "]"}]}]}], "//", 
        "MatrixForm"}]}], "}"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", "Medium"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7423031136862483`*^9, 3.7423031149654503`*^9}, 
   3.7423031548391204`*^9, {3.742303209111616*^9, 3.7423032326364574`*^9}, {
   3.7423040224606457`*^9, 3.7423040433178825`*^9}, {3.742465152479994*^9, 
   3.742465163337613*^9}, 3.742721252836954*^9, {3.7427247551907063`*^9, 
   3.742724776344343*^9}, {3.7427249455578403`*^9, 3.7427249700966835`*^9}, {
   3.7427256980593624`*^9, 3.7427256982621627`*^9}, {3.742725862546051*^9, 
   3.742725864074854*^9}, {3.7427276144499288`*^9, 3.7427276293479548`*^9}, {
   3.7427276784412413`*^9, 3.7427276859604545`*^9}, 3.742727719952914*^9, {
   3.7427277853960295`*^9, 3.7427278106368732`*^9}, {3.742727956264129*^9, 
   3.7427279594153347`*^9}, {3.742728815452238*^9, 3.742728828493861*^9}, {
   3.7427288899901695`*^9, 3.742728899537386*^9}, {3.7427293700352125`*^9, 
   3.742729375479622*^9}, {3.7427517482261915`*^9, 3.7427517786774445`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Convert to the compactly stored band-diagonal matrix (to be used by \
\[OpenCurlyQuote]banded.h\[CloseCurlyQuote])\
\>", "Subsubsection",
 CellChangeTimes->{{3.7427311193490143`*^9, 3.742731120363016*^9}, {
   3.742731247175639*^9, 3.742731249219242*^9}, 3.7427313686530523`*^9, {
   3.7427364082906*^9, 3.7427364091954017`*^9}, {3.742751596437925*^9, 
   3.7427517042965145`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<i = \>\"", "<>", 
      RowBox[{"ToString", "@", "n"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "fdN"}], "}"}]}], "]"}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"-", "j"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"fdSys", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", 
           RowBox[{"3", ";;", 
            RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"1", "+", "n", "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "<", "0"}], ",", 
             RowBox[{"-", "j"}], ",", "0"}], "]"}]}], ",", 
          RowBox[{"1", "+", "n", "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", ">", "0"}], ",", "j", ",", "0"}], "]"}]}]}], 
         "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", 
          RowBox[{"fdN", "-", 
           RowBox[{"Abs", "@", "j"}]}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "j", "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"-", 
       RowBox[{"Max", "[", 
        RowBox[{"fdD", ",", "fdG"}], "]"}]}], ",", 
      RowBox[{"Max", "[", 
       RowBox[{"fdD", ",", "fdG"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"-", 
       RowBox[{"fdSys", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], "+", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"-", 
        RowBox[{"fdSys", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
      SubscriptBox["w", "L"]}], "+", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"-", 
        RowBox[{"fdSys", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
      SubscriptBox["w", "R"]}]}], "/.", 
    RowBox[{
     SubscriptBox["w", "n_"], "\[RuleDelayed]", 
     RowBox[{"Style", "[", 
      RowBox[{
       SubscriptBox["w", "n"], ",", "Red"}], "]"}]}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"fdN", "<", "10"}], ",", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"\"\<\>\"", ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\"\<j = \>\"", "<>", 
               RowBox[{"ToString", "@", "j"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "0", ",", 
                RowBox[{"2", 
                 RowBox[{"Max", "[", 
                  RowBox[{"fdD", ",", "fdG"}], "]"}]}]}], "}"}]}], "]"}]}]}], 
          "}"}], "}"}], ",", 
        RowBox[{"Transpose", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"%%%", ",", "%%", ",", "%"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"Dividers", "\[Rule]", "All"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["R", "n_"], "\[RuleDelayed]", "0"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7427311366182446`*^9, 3.7427311994083548`*^9}, {
  3.7427313717886577`*^9, 3.7427313719446583`*^9}, {3.7427364145618114`*^9, 
  3.7427367837832594`*^9}, {3.7427368444609995`*^9, 3.7427369263299437`*^9}, {
  3.7427374974625463`*^9, 3.7427375367278156`*^9}, {3.7427377172825327`*^9, 
  3.7427379365253177`*^9}, {3.742738063805941*^9, 3.742738238496048*^9}, {
  3.742738590931867*^9, 3.7427387213948965`*^9}, {3.7427387752149906`*^9, 
  3.7427387841538067`*^9}, {3.742738815884262*^9, 3.742738856194733*^9}, {
  3.7427389198116446`*^9, 3.7427391643108745`*^9}, {3.7427392030613422`*^9, 
  3.7427392045433445`*^9}, {3.7427418086661277`*^9, 3.742741808884528*^9}, {
  3.7427439546462965`*^9, 3.742743955551098*^9}, {3.742744060320882*^9, 
  3.7427440857021265`*^9}, {3.7427459108661666`*^9, 3.742745965653463*^9}, {
  3.7427517517205973`*^9, 3.742751755480204*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solve the example with the Gaussian ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "PF"], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.7427311193490143`*^9, 3.742731120363016*^9}, {
  3.742731247175639*^9, 3.742731285832507*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"test$Q", "[", "r_", "]"}], "=", 
   RowBox[{"\[Rho]ADM", "[", 
    RowBox[{"r", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matA", "=", 
   RowBox[{"fdSys", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecb", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"-", 
      RowBox[{"fdSys", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], "+", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"-", 
       RowBox[{"fdSys", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
     SubscriptBox["w", "L"]}], "+", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"-", 
       RowBox[{"fdSys", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
     SubscriptBox["w", "R"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matA", "=", 
   RowBox[{
    RowBox[{"matA", "//.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["w", "R"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["P", "n_"], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "/", 
          SubscriptBox["r", "n"]}], ")"}]}], ",", 
       RowBox[{
        SubscriptBox["Q", "n_"], "\[RuleDelayed]", 
        RowBox[{"test$Q", "[", 
         SubscriptBox["r", "n"], "]"}]}], ",", 
       RowBox[{
        SubscriptBox["R", "n_"], "\[RuleDelayed]", "0"}], ",", 
       RowBox[{"h", "\[Rule]", 
        RowBox[{"40", "/", "fdN"}]}], ",", 
       RowBox[{
        SubscriptBox["r", "n_"], "\[RuleDelayed]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], "h"}]}]}], "}"}]}], "//", 
    "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecb", "=", 
   RowBox[{
    RowBox[{"vecb", "//.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["w", "R"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["P", "n_"], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "/", 
          SubscriptBox["r", "n"]}], ")"}]}], ",", 
       RowBox[{
        SubscriptBox["Q", "n_"], "\[RuleDelayed]", 
        RowBox[{"test$Q", "[", 
         SubscriptBox["r", "n"], "]"}]}], ",", 
       RowBox[{
        SubscriptBox["R", "n_"], "\[RuleDelayed]", "0"}], ",", 
       RowBox[{"h", "\[Rule]", 
        RowBox[{"40", "/", "fdN"}]}], ",", 
       RowBox[{
        SubscriptBox["r", "n_"], "\[RuleDelayed]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], "h"}]}]}], "}"}]}], "//", 
    "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["r", "n"], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "fdN", ",", "1"}], "}"}]}], "]"}], "//.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["w", "R"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["P", "n_"], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "/", 
          SubscriptBox["r", "n"]}], ")"}]}], ",", 
       RowBox[{
        SubscriptBox["Q", "n_"], "\[RuleDelayed]", 
        RowBox[{"test$Q", "[", 
         SubscriptBox["r", "n"], "]"}]}], ",", 
       RowBox[{
        SubscriptBox["R", "n_"], "\[RuleDelayed]", "0"}], ",", 
       RowBox[{"h", "\[Rule]", 
        RowBox[{"40", "/", "fdN"}]}], ",", 
       RowBox[{
        SubscriptBox["r", "n_"], "\[RuleDelayed]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"1", "/", "2"}]}], ")"}], "h"}]}]}], "}"}]}], "//", 
    "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Inverse", "@", "matA"}], ".", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", "vecb", "}"}]}]}], "//", "Flatten"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"vecr", ",", "matx"}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Full"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "sol", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]sol", "=", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Alpha]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " "}], "r"], 
            RowBox[{
             SuperscriptBox["\[Alpha]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}]}], "\[Equal]", " ", 
          RowBox[{
           RowBox[{"\[Alpha]", "[", "r", "]"}], 
           RowBox[{"test$Q", "[", "r", "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Alpha]", "'"}], "[", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]], "]"}], "\[Equal]", "3"}], ",", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", "40", "]"}], "\[Equal]", "1"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[Alpha]", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], ",", "40"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Quiet", "@", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"vecr", ",", 
          RowBox[{"Log10", "@", 
           RowBox[{"Abs", "[", 
            RowBox[{"matx", "-", 
             RowBox[{"(", 
              RowBox[{"\[Alpha]sol", "/@", "vecr"}], ")"}]}], "]"}]}]}], 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Full"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Row", "@", 
         RowBox[{"{", 
          RowBox[{"\"\<The accuracy should lie around \>\"", ",", 
           RowBox[{
            RowBox[{"Log10", "[", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"40", "/", "fdN"}], ")"}], "4"], "]"}], "//", "N"}]}], 
          "}"}]}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7427289190530205`*^9, 3.742729298477887*^9}, {
  3.742729413715289*^9, 3.742729422061304*^9}, {3.7427295184382734`*^9, 
  3.74272956764276*^9}, {3.742729625316061*^9, 3.7427296463760977`*^9}, {
  3.7427297077310057`*^9, 3.7427298430300436`*^9}, {3.7427298766481028`*^9, 
  3.7427299091897593`*^9}, {3.7427299416534166`*^9, 3.7427299975171146`*^9}, {
  3.742730056266818*^9, 3.742730180880837*^9}, {3.7427302279305196`*^9, 
  3.742730294823437*^9}, {3.742737654866823*^9, 3.742737688921683*^9}, {
  3.742894352202921*^9, 3.742894375712162*^9}, {3.7428944757707376`*^9, 
  3.742894483991952*^9}, {3.742894525519225*^9, 3.742894752203223*^9}, {
  3.742894787927286*^9, 3.7428947923264933`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1zXtIk2EYBfAvsTnoapZpkXlbmWXmpnPe9p05GyVIlKUlYTias1ZYZuAf
mpGWU5BQwzDC1GJmrJW2wiQyIrRChQQzqQkZOafum10wSaKavs+Bl/ePw/M7
Qdr8AzoPjuNk/5/7v9Hgzggv6frqW5U9wcsW8oNHu9YnzzjBc4tB47OCQ/b3
E3zuQkSwjZsN2hQH39/nznJkzTleXe118IueN0xyZU1axiTr12J0xDK+zD7J
PD+07Sv09CqYYnsbMWBodcx/m2J+AGp3NrfGHp9m94HIn/arC349zfpgmFQh
6dUBTuaFQul/c8jjhJPtS3ApeVuYps3J/K3o6BALnp+dzAuDYibTYPUWmBeO
9iWz2spEgXk78Ff/UlOiFZgXgZzG4ZWHywXmRaL54u60rha634UN71LfSp5T
H4WZFf3pnsPkScE1WX6anQLbl6K0ImFS7+Fivgyf+ITWs+tczItGfWBcyJ8t
LubFoKTyyJ2YWBfz5KhZrZNA42KeHD29RWcSD5IXiwudCk6TQ54CdeWPrYWn
yYvD0UibzlZEXjyk9rGs2jLy4rFnXm2+XU1eAmyDL65tvk5eIuR5JuuaJvKS
cD5CnGq8S54SLVO/j1U9JE+JgYxzs0Gd5PGoT/ENzeyme2BpsUgW1UM9YDtl
fPqkjzwVivXbHzgHaV+F8Cav0o8fyFfhlvHK+suj5CXjZLbvnPCFvGQ8CvZP
2uQgT43o+/vv+QjkqTFeJrIOfSdPDc4irsj9RV4KxvZ2r3oz7+L/AfyoZiI=

      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7496432022282465},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImagePadding->All,
  ImageSize->{547.1153846153974, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 40.4}, {0.7615404555525102, 0.9994855220377838}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.742729808382383*^9, 3.7427298446368465`*^9}, 
   3.7427299109681625`*^9, {3.7427299436502204`*^9, 3.7427299986091166`*^9}, {
   3.7427300788400574`*^9, 3.7427301834548416`*^9}, {3.7427302171197004`*^9, 
   3.7427302295061226`*^9}, {3.742730280923813*^9, 3.7427303167570753`*^9}, 
   3.7427310461536856`*^9, 3.7427363652929244`*^9, 3.7427370715973983`*^9, 
   3.7427372548665204`*^9, 3.7427374147980013`*^9, 3.7427375809382935`*^9, {
   3.7427376556780243`*^9, 3.7427376893584833`*^9}, 3.742737994323419*^9, 
   3.7427383058413663`*^9, 3.7427389092972264`*^9, 3.742739173904891*^9, 
   3.7427394429751635`*^9, {3.7427418275889606`*^9, 3.742741850599001*^9}, 
   3.742743976423935*^9, {3.7427441131737747`*^9, 3.7427441843879004`*^9}, {
   3.7427442423732023`*^9, 3.7427442626532373`*^9}, 3.7427446721861567`*^9, {
   3.7427518353523445`*^9, 3.7427518668956*^9}, 3.742751925426903*^9, 
   3.7428247965073924`*^9, {3.7428249836297207`*^9, 3.7428250095725665`*^9}, 
   3.7428252108753204`*^9, 3.742836350743865*^9, 3.7428792019124155`*^9, {
   3.7428943043732367`*^9, 3.7428943760397625`*^9}, {3.7428944545547004`*^9, 
   3.742894484537953*^9}, {3.7428945259872255`*^9, 3.742894576765315*^9}, {
   3.7428946949823227`*^9, 3.742894752655624*^9}, {3.7428947885980873`*^9, 
   3.7428947929816947`*^9}, 3.7558645675177145`*^9, 3.7558646152647147`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1zV1IU3EYBvApy+0cjSFYbUWbjeWcWH6snC3dnjk3RIVqzKYEtYw0LTAH
MlAHSZkNskJZ5AeGhlezqIsiwYsR68LIKIXCxNa0WTYcC5vRB5LT8z5wOPx5
eH/Pvtomy/lEHo+n3vji//6+eGb1u3RO63UJ61NvZlW/5pdcSXWzPt5WMBCt
L1qXsb66zSRh1NEtGwwzvqnX8aTAO+NnDK8Y35aXijexxuc3HlOfBlVN+bi8
n+E8MeSK+oyGTobb24OQ153COhjOl2KleIRfZaf7dDxoH7J6j1MvB04uTWiN
5CnQuNcjCGpofz+cT+auVR0kX4lwa8+EIYO8TATM5iabjLwszLZvf1QtIS8b
vXXzizvTyDuAlGGVo0lEXg5m+2K2smS6z0XlSGVHt4D6PCTsPn0ih09ePuR5
/n/pCbSfD2lHv8S2LuR8NZpVycrJv0LOO4Tps1L28m8h5x2GKck6YPol5LwC
TG4bbymNCTmvADtk2ZoLq+RpcK/Lwzz8QV4hFnre3xdFyTuCxN4Prbci5Gnx
LCZwKVbI02JtrPrM2zB5R8FGr5678528IrTWsHdrl8krxkefxW76Rp4O/JfH
xjRfydMhy1JlKlwiT48Zq7vZHKJ7QD8seGf/Qj0gHgr+7Fwkz4C5Lrb46QLt
G3DTOeqKBMk3oCLr4qXcIHkl8AxOi9o+k1cCm9lhmwqQZ0RDpkusDJBnREj7
oqXrE3lGtP0p90TmyStFpOL28qmN93+dDE7z
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, -3.0976433428578587`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImagePadding->All,
  ImageSize->{547.1153846153974, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    TemplateBox[{"\"The accuracy should lie around \"", 
      RowBox[{"-", "0.3876400520322256`"}]}, "RowDefault"], TraditionalForm],
  PlotRange->{{0, 40.4}, {-3.316927910601062, -3.108085465131345}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.742729808382383*^9, 3.7427298446368465`*^9}, 
   3.7427299109681625`*^9, {3.7427299436502204`*^9, 3.7427299986091166`*^9}, {
   3.7427300788400574`*^9, 3.7427301834548416`*^9}, {3.7427302171197004`*^9, 
   3.7427302295061226`*^9}, {3.742730280923813*^9, 3.7427303167570753`*^9}, 
   3.7427310461536856`*^9, 3.7427363652929244`*^9, 3.7427370715973983`*^9, 
   3.7427372548665204`*^9, 3.7427374147980013`*^9, 3.7427375809382935`*^9, {
   3.7427376556780243`*^9, 3.7427376893584833`*^9}, 3.742737994323419*^9, 
   3.7427383058413663`*^9, 3.7427389092972264`*^9, 3.742739173904891*^9, 
   3.7427394429751635`*^9, {3.7427418275889606`*^9, 3.742741850599001*^9}, 
   3.742743976423935*^9, {3.7427441131737747`*^9, 3.7427441843879004`*^9}, {
   3.7427442423732023`*^9, 3.7427442626532373`*^9}, 3.7427446721861567`*^9, {
   3.7427518353523445`*^9, 3.7427518668956*^9}, 3.742751925426903*^9, 
   3.7428247965073924`*^9, {3.7428249836297207`*^9, 3.7428250095725665`*^9}, 
   3.7428252108753204`*^9, 3.742836350743865*^9, 3.7428792019124155`*^9, {
   3.7428943043732367`*^9, 3.7428943760397625`*^9}, {3.7428944545547004`*^9, 
   3.742894484537953*^9}, {3.7428945259872255`*^9, 3.742894576765315*^9}, {
   3.7428946949823227`*^9, 3.742894752655624*^9}, {3.7428947885980873`*^9, 
   3.7428947929816947`*^9}, 3.7558645675177145`*^9, 3.7558646153547144`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Banded matrix test (for \[OpenCurlyQuote]banded.h\[CloseCurlyQuote])", \
"Section",
 CellChangeTimes->{{3.742719185777523*^9, 3.7427192091775637`*^9}, {
  3.7427517133601303`*^9, 3.742751715606534*^9}}],

Cell["A sample equation Ax=b where A is a band matrix:", "Text",
 CellChangeTimes->{{3.7427191649514866`*^9, 3.742719181222315*^9}, {
  3.742730560628933*^9, 3.7427305692557487`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "3", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "\[IndentingNewLine]", "4", ",", "1", ",", "5", ",", "0", ",", "0", ",",
       "0", ",", "0", ",", "\[IndentingNewLine]", "9", ",", "2", ",", "6", 
      ",", "5", ",", "0", ",", "0", ",", "0", ",", "\[IndentingNewLine]", "0",
       ",", "3", ",", "5", ",", "8", ",", "9", ",", "0", ",", "0", ",", 
      "\[IndentingNewLine]", "0", ",", "0", ",", "7", ",", "9", ",", "3", ",",
       "2", ",", "0", ",", "\[IndentingNewLine]", "0", ",", "0", ",", "0", 
      ",", "3", ",", "8", ",", "4", ",", "6", ",", "\[IndentingNewLine]", "0",
       ",", "0", ",", "0", ",", "0", ",", "2", ",", "4", ",", "4"}], 
     "\[IndentingNewLine]", "}"}], ",", "7"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "@", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1"}], "}"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"%%", "//", "MatrixForm"}], ",", "\"\<\[CenterDot]\>\"", ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Inverse", "@", "%%"}], ".", "%"}], "//", "N"}], "//", 
      "Flatten"}], "//", "MatrixForm"}], ",", "\"\< \[Equal] \>\"", ",", 
    RowBox[{"%", "//", "MatrixForm"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.742719237008013*^9, 3.7427193421209974`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"3", "1", "0", "0", "0", "0", "0"}, {
        "4", "1", "5", "0", "0", "0", "0"}, {
        "9", "2", "6", "5", "0", "0", "0"}, {
        "0", "3", "5", "8", "9", "0", "0"}, {
        "0", "0", "7", "9", "3", "2", "0"}, {
        "0", "0", "0", "3", "8", "4", "6"}, {
        "0", "0", "0", "0", "2", "4", "4"}}, RowSpacings -> 1, ColumnSpacings -> 
       1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
      "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\"\[CenterDot]\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{"4.669123351435221`"}, {
          RowBox[{"-", "7.007370054305663`"}]}, {
          RowBox[{"-", "1.1338246702870443`"}]}, {
          RowBox[{"-", "3.2408844065166797`"}]}, {"6.290923196276183`"}, {
         "10.615981380915438`"}, {
          RowBox[{"-", "13.51144297905353`"}]}}, ColumnAlignments -> Center, 
        RowSpacings -> 1, ColumnAlignments -> Left], Column], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\" \[Equal] \"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"7"}, {"6"}, {"5"}, {"4"}, {"3"}, {"2"}, {"1"}}, RowSpacings -> 
       1, ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.7427192158075757`*^9, {3.742719256461247*^9, 3.742719342542198*^9}, 
   3.7427198772059374`*^9, 3.7427240661666956`*^9, {3.7427265028423758`*^9, 
   3.742726507990385*^9}, 3.742727961864539*^9, 3.7427282171121874`*^9, 
   3.7427284578216105`*^9, 3.7427287525061283`*^9, 3.742730316913076*^9, 
   3.742731046418886*^9, 3.7427363654645247`*^9, 3.7427439765955353`*^9, 
   3.742744672326557*^9, 3.742751925598503*^9, 3.7428247966789927`*^9, 
   3.7428792020996156`*^9, {3.742894304544837*^9, 3.742894332000885*^9}, 
   3.7558645676277146`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1080, 1838},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.3 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Section"], FontFamily -> "Arial", FontSize -> 28, FontWeight -> 
    "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsection"], CellMargins -> {{35, 3.}, {8., 12.}}, FontFamily -> 
    "Arial", FontSize -> 20, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubsection"], CellMargins -> {{40, Inherited}, {2, 10}}, 
    FontFamily -> "Arial", FontSize -> 19, FontWeight -> "Plain", FontSlant -> 
    "Plain", FontVariations -> {
     "StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Text"], CellMargins -> {{40, 10}, {7, 7}}, FontFamily -> 
    "Cambria", FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemParagraph"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubitemParagraph"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemParagraph"], FontFamily -> "Cambria", FontSize -> 14,
     FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubitemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["mk-test"], CellFrame -> {{0.3, 0}, {0, 0.3}}, PageBreakBelow -> 
    False, CellChangeTimes -> {3.704299599624503*^9}, MenuSortingValue -> 
    10000, FontFamily -> "Cambria", FontSize -> 14, FontWeight -> "Plain", 
    FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}]}, 
  Visible -> False, FrontEndVersion -> 
  "11.0 for Microsoft Windows (64-bit) (September 21, 2016)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 343, 4, 81, "Section"],
Cell[926, 28, 401, 9, 39, "Text"],
Cell[1330, 39, 101, 1, 39, "Text"],
Cell[1434, 42, 221, 7, 39, "Text"],
Cell[1658, 51, 362, 11, 39, "Text"],
Cell[2023, 64, 1280, 36, 102, "Input"],
Cell[3306, 102, 590, 14, 39, "Input"],
Cell[CellGroupData[{
Cell[3921, 120, 197, 3, 57, "Subsection"],
Cell[4121, 125, 111, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[4257, 130, 585, 14, 39, "Input"],
Cell[CellGroupData[{
Cell[4867, 148, 97, 2, 31, "Echo"],
Cell[4967, 152, 331, 12, 45, "Echo"],
Cell[5301, 166, 278, 9, 31, "Echo"],
Cell[5582, 177, 68, 1, 31, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[5677, 182, 111, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[5813, 187, 552, 16, 65, "Input"],
Cell[6368, 205, 772, 16, 54, "Output"],
Cell[7143, 223, 814, 18, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7994, 246, 590, 16, 65, "Input"],
Cell[8587, 264, 1030, 27, 54, "Output"],
Cell[9620, 293, 1135, 31, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10792, 329, 302, 8, 39, "Input"],
Cell[11097, 339, 808, 14, 39, "Output"]
}, Open  ]],
Cell[11920, 356, 119, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[12064, 361, 320, 7, 39, "Input"],
Cell[12387, 370, 1304, 34, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13728, 409, 536, 14, 39, "Input"],
Cell[14267, 425, 1670, 48, 95, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15986, 479, 435, 6, 57, "Subsection"],
Cell[CellGroupData[{
Cell[16446, 489, 5323, 119, 340, "Input"],
Cell[CellGroupData[{
Cell[21794, 612, 95, 2, 31, "Echo"],
Cell[21892, 616, 635, 23, 46, "Echo"]
}, Open  ]],
Cell[22542, 642, 1370, 33, 55, "Output"],
Cell[23915, 677, 1348, 30, 39, "Output"],
Cell[25266, 709, 1325, 27, 39, "Output"],
Cell[26594, 738, 901, 12, 39, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27556, 757, 222, 3, 81, "Section"],
Cell[27781, 762, 355, 6, 39, "Text"],
Cell[28139, 770, 614, 22, 48, "Text"],
Cell[28756, 794, 174, 2, 39, "Text"],
Cell[28933, 798, 738, 27, 42, "Text"],
Cell[29674, 827, 475, 15, 39, "Text"],
Cell[CellGroupData[{
Cell[30174, 846, 423, 10, 43, "Subsubsection"],
Cell[30600, 858, 1422, 45, 165, "Input"],
Cell[CellGroupData[{
Cell[32047, 907, 534, 13, 43, "Input"],
Cell[32584, 922, 15667, 272, 475, "Output"]
}, Open  ]],
Cell[48266, 1197, 357, 11, 39, "Text"],
Cell[CellGroupData[{
Cell[48648, 1212, 2122, 54, 298, "Input"],
Cell[50773, 1268, 5460, 104, 481, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56294, 1379, 313, 5, 81, "Section"],
Cell[56610, 1386, 514, 9, 64, "Text"],
Cell[57127, 1397, 289, 3, 39, "Text"],
Cell[57419, 1402, 1100, 24, 39, "Input"],
Cell[58522, 1428, 407, 12, 39, "Input"],
Cell[58932, 1442, 910, 17, 39, "Input"],
Cell[CellGroupData[{
Cell[59867, 1463, 115, 1, 43, "Subsubsection"],
Cell[59985, 1466, 307, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[60317, 1475, 2579, 59, 152, "Input"],
Cell[CellGroupData[{
Cell[62921, 1538, 552, 20, 45, "Echo"],
Cell[63476, 1560, 761, 27, 45, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[64264, 1591, 234, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[64523, 1600, 2748, 61, 152, "Input"],
Cell[CellGroupData[{
Cell[67296, 1665, 635, 23, 45, "Echo"],
Cell[67934, 1690, 828, 29, 46, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[68789, 1723, 311, 6, 39, "Text"],
Cell[CellGroupData[{
Cell[69125, 1733, 2797, 63, 152, "Input"],
Cell[CellGroupData[{
Cell[71947, 1800, 675, 25, 45, "Echo"],
Cell[72625, 1827, 870, 31, 46, "Echo"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73556, 1865, 119, 1, 43, "Subsubsection"],
Cell[73678, 1868, 1371, 20, 39, "Input"],
Cell[CellGroupData[{
Cell[75074, 1892, 5064, 121, 262, "Input"],
Cell[80141, 2015, 6275, 153, 201, "Output"],
Cell[86419, 2170, 6958, 172, 201, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93426, 2348, 241, 3, 43, "Subsubsection"],
Cell[93670, 2353, 686, 20, 74, "Text"],
Cell[CellGroupData[{
Cell[94381, 2377, 3610, 89, 211, "Input"],
Cell[97994, 2468, 6183, 157, 201, "Output"]
}, Open  ]],
Cell[104192, 2628, 343, 6, 39, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104584, 2640, 366, 6, 81, "Section"],
Cell[104953, 2648, 239, 3, 39, "Text"],
Cell[105195, 2653, 2083, 48, 115, "Input"],
Cell[107281, 2703, 1628, 36, 90, "Input"],
Cell[108912, 2741, 345, 6, 64, "Text"],
Cell[109260, 2749, 1251, 25, 140, "Input"],
Cell[CellGroupData[{
Cell[110536, 2778, 115, 1, 43, "Subsubsection"],
Cell[110654, 2781, 307, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[110986, 2790, 2581, 59, 152, "Input"],
Cell[CellGroupData[{
Cell[113592, 2853, 552, 20, 45, "Echo"],
Cell[114147, 2875, 657, 24, 45, "Echo"],
Cell[114807, 2901, 1200, 42, 31, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[116034, 2947, 234, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[116293, 2956, 2727, 61, 152, "Input"],
Cell[CellGroupData[{
Cell[119045, 3021, 635, 23, 45, "Echo"],
Cell[119683, 3046, 617, 22, 45, "Echo"],
Cell[120303, 3070, 1294, 44, 54, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[121624, 3118, 311, 6, 39, "Text"],
Cell[CellGroupData[{
Cell[121960, 3128, 2826, 63, 152, "Input"],
Cell[CellGroupData[{
Cell[124811, 3195, 677, 25, 45, "Echo"],
Cell[125491, 3222, 679, 25, 45, "Echo"],
Cell[126173, 3249, 1377, 48, 54, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127599, 3303, 1108, 32, 69, "Input"],
Cell[128710, 3337, 1911, 57, 116, "Output"],
Cell[130624, 3396, 556, 10, 100, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[131229, 3412, 119, 1, 43, "Subsubsection"],
Cell[131351, 3415, 5503, 132, 316, "Input"],
Cell[136857, 3549, 357, 9, 64, "Text"],
Cell[137217, 3560, 242, 3, 39, "Text"],
Cell[137462, 3565, 133217, 2192, 245, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270716, 5762, 265, 3, 43, "Subsubsection"],
Cell[270984, 5767, 552, 15, 39, "Text"],
Cell[271539, 5784, 4009, 96, 211, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275585, 5885, 391, 7, 43, "Subsubsection"],
Cell[275979, 5894, 4671, 122, 357, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280687, 6021, 272, 7, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[280984, 6032, 7739, 215, 596, "Input"],
Cell[288726, 6249, 3666, 69, 461, "Output"],
Cell[292395, 6320, 3800, 71, 475, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[296256, 6398, 208, 3, 81, "Section"],
Cell[296467, 6403, 183, 2, 39, "Text"],
Cell[CellGroupData[{
Cell[296675, 6409, 1565, 35, 290, "Input"],
Cell[298243, 6446, 2041, 41, 168, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

