(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    372955,       7624]
NotebookOptionsPosition[    363754,       7375]
NotebookOutlinePosition[    366871,       7443]
CellTagsIndexPosition[    366828,       7440]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Construct a C++ descriptor for MoL", "Text",
 CellChangeTimes->{{3.7490972408813887`*^9, 3.7490972725338445`*^9}, {
  3.749133713175959*^9, 3.7491337408504076`*^9}},
 FontSize->24,
 FontWeight->"Bold"],

Cell["Mikica Kocic", "Text"],

Cell["Created 2018-10-20", "Text",
 CellChangeTimes->{{3.7490972259209623`*^9, 3.7490972280893664`*^9}}],

Cell[TextData[{
 "This notebook calculates the MoL coefficients ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "i"], TraditionalForm]]],
 " from the given Butcher tableau."
}], "Text",
 CellChangeTimes->{{3.7490936145169287`*^9, 3.7490936508025923`*^9}, {
  3.7490938980235167`*^9, 3.7490938988347178`*^9}, {3.749097186838893*^9, 
  3.7490971938433056`*^9}, {3.7491130979352427`*^9, 3.7491130985748434`*^9}, {
  3.7491337597420406`*^9, 3.7491337787740746`*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Section",
 CellChangeTimes->{{3.7490641428546777`*^9, 3.749064158485905*^9}, {
   3.7490642835393257`*^9, 3.749064345019034*^9}, 3.7490936115061235`*^9, {
   3.7491331090073524`*^9, 3.7491331101773543`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "MoL algorithm (expressions with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "i"], TraditionalForm]]],
 " involving ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Y", 
    RowBox[{"(", "i", ")"}]], TraditionalForm]]],
 ")"
}], "Subsubsection",
 CellChangeTimes->{{3.749059348938057*^9, 3.74905940191575*^9}, {
  3.749093905043529*^9, 3.749093956274019*^9}}],

Cell[TextData[{
 "We denote ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Y", 
    RowBox[{"(", "i", ")"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as ",
 Cell[BoxData[
  RowBox[{"LYs", "[", "i", "]"}]],
  CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
   3.7490600620511093`*^9}, {3.7490601189444094`*^9, 
   3.7490601229224167`*^9}, {3.7490602578938537`*^9, 
   3.7490602608422585`*^9}, {3.7490617715539126`*^9, 
   3.7490617729579153`*^9}, {3.7490632700779448`*^9, 3.7490632740871515`*^9}}],
 ". We also define  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"LYs", "[", "i", "]"}], ":=", " ", 
   RowBox[{"L", "[", 
    RowBox[{"Ys", "[", "i", "]"}], "]"}]}]],
  CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
   3.7490600620511093`*^9}, {3.7490601189444094`*^9, 
   3.7490601229224167`*^9}, {3.7490602578938537`*^9, 
   3.7490602608422585`*^9}, {3.7490617715539126`*^9, 
   3.7490617729579153`*^9}, {3.7490632700779448`*^9, 3.7490632740871515`*^9}}],
 " which further correpsonds to ",
 Cell[BoxData[
  SubscriptBox["k", 
   RowBox[{"i", "+", "1"}]]],
  CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
   3.7490600620511093`*^9}, {3.7490601189444094`*^9, 
   3.7490601229224167`*^9}, {3.7490602578938537`*^9, 
   3.7490602608422585`*^9}, {3.7490617715539126`*^9, 
   3.7490617729579153`*^9}, {3.7490632700779448`*^9, 3.7490632740871515`*^9}}],
 ". "
}], "Text",
 CellChangeTimes->{{3.749113274028352*^9, 3.7491133046980057`*^9}, {
  3.7491133470676804`*^9, 3.74911336973452*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ys", "[", "0", "]"}], ":=", 
  RowBox[{"Y", "[", "m", "]"}]}]], "Input",
 CellChangeTimes->{{3.749054225910042*^9, 3.749054255659294*^9}, 
   3.7491131732677746`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ys", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", 
     SubscriptBox["\[Beta]", 
      RowBox[{"i", "-", "1"}]], 
     RowBox[{"LYs", "[", 
      RowBox[{"i", "-", "1"}], "]"}]}], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Alpha]", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "j"}]], 
       RowBox[{"Ys", "[", "j", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", 
        RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}]}], "//", 
   RowBox[{
    RowBox[{"Collect", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LYs", "[", "n_", "]"}], ",", "Simplify"}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.749054017852476*^9, 3.7490541049162292`*^9}, {
  3.74905415093631*^9, 3.749054153354314*^9}, {3.7490541842891684`*^9, 
  3.7490542060980067`*^9}, {3.749054272819324*^9, 3.7490542879669504`*^9}, {
  3.7490948723856277`*^9, 3.749094884428849*^9}}],

Cell["Sanity check:", "Text",
 CellChangeTimes->{{3.7491133820117416`*^9, 3.749113384492146*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Echo", "@", 
     RowBox[{"Ys", "[", "4", "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"LYs", "[", "i_", "]"}], "\[RuleDelayed]", 
       SubscriptBox["k", 
        RowBox[{"i", "+", "1"}]]}], ",", 
      RowBox[{
       RowBox[{"Y", "[", "m_", "]"}], "\[RuleDelayed]", 
       SubscriptBox["y", "m"]}]}], "}"}]}], "//", "Echo"}], ";"}]], "Input",
 CellChangeTimes->{{3.7490541080674343`*^9, 3.7490541102202387`*^9}, {
   3.7490541641651335`*^9, 3.7490541770195556`*^9}, {3.7490543402582426`*^9, 
   3.7490544512992373`*^9}, {3.7490593378308372`*^9, 
   3.7490593383456383`*^9}, {3.7490937038738856`*^9, 3.749093704201486*^9}, 
   3.7490948985936737`*^9, {3.7491131772301817`*^9, 3.749113177448582*^9}, {
   3.749113208742237*^9, 3.749113221066259*^9}, {3.749113481836317*^9, 
   3.749113505376758*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", " ", 
   RowBox[{"LYs", "[", "3", "]"}], " ", 
   SubscriptBox["\[Beta]", "3"]}], "+", 
  RowBox[{"h", " ", 
   RowBox[{"LYs", "[", "2", "]"}], " ", 
   SubscriptBox["\[Beta]", "2"], " ", 
   SubscriptBox["\[Alpha]", 
    RowBox[{"3", ",", "3"}]]}], "+", 
  RowBox[{"h", " ", 
   RowBox[{"LYs", "[", "1", "]"}], " ", 
   SubscriptBox["\[Beta]", "1"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "2"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"2", ",", "2"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
  RowBox[{"h", " ", 
   RowBox[{"LYs", "[", "0", "]"}], " ", 
   SubscriptBox["\[Beta]", "0"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "1"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"2", ",", "1"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"1", ",", "1"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"3", ",", "2"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"2", ",", "2"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "0"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"0", ",", "0"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "1"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"1", ",", "0"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"0", ",", "0"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"1", ",", "1"}]]}]}], ")"}], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "2"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"2", ",", "0"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"1", ",", "0"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"2", ",", "2"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"0", ",", "0"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Alpha]", 
            RowBox[{"2", ",", "1"}]], "+", 
           RowBox[{
            SubscriptBox["\[Alpha]", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["\[Alpha]", 
             RowBox[{"2", ",", "2"}]]}]}], ")"}]}]}], ")"}], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}]}], ")"}], " ", 
   RowBox[{"Y", "[", "m", "]"}]}]}]], "Echo",
 CellChangeTimes->{3.74996258316955*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", " ", 
   SubscriptBox["k", "4"], " ", 
   SubscriptBox["\[Beta]", "3"]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "3"], " ", 
   SubscriptBox["\[Beta]", "2"], " ", 
   SubscriptBox["\[Alpha]", 
    RowBox[{"3", ",", "3"}]]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "2"], " ", 
   SubscriptBox["\[Beta]", "1"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "2"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"2", ",", "2"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["y", "m"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "0"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"0", ",", "0"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "1"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"1", ",", "0"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"0", ",", "0"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"1", ",", "1"}]]}]}], ")"}], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "2"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"2", ",", "0"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"1", ",", "0"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"2", ",", "2"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"0", ",", "0"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Alpha]", 
            RowBox[{"2", ",", "1"}]], "+", 
           RowBox[{
            SubscriptBox["\[Alpha]", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["\[Alpha]", 
             RowBox[{"2", ",", "2"}]]}]}], ")"}]}]}], ")"}], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "1"], " ", 
   SubscriptBox["\[Beta]", "0"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "1"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"2", ",", "1"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"1", ",", "1"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"3", ",", "2"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"2", ",", "2"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}], ")"}]}]}]], "Echo",
 CellChangeTimes->{3.74996258323195*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Algorithm based on the Butcher tableau (expressions with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "i"], TraditionalForm]]],
 " involving ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "i"], TraditionalForm]]],
 ")"
}], "Subsubsection",
 CellChangeTimes->{{3.749059348938057*^9, 3.7490593915573316`*^9}, {
  3.749093835647317*^9, 3.7490938591877584`*^9}, {3.749093890878704*^9, 
  3.7490938942951097`*^9}, {3.749093942920396*^9, 3.7490939476628036`*^9}}],

Cell["The intermediate steps:", "Text",
 CellChangeTimes->{{3.749093985820471*^9, 3.749093998004092*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["bt$k", "s_"], ":=", 
  RowBox[{
   SubscriptBox["y", "m"], "+", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"h", " ", 
      SubscriptBox["a", 
       RowBox[{
        RowBox[{"s", "-", "1"}], ",", "j"}]], 
      SubscriptBox["k", "j"]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"s", "-", "1"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7490545747890544`*^9, 3.749054594211088*^9}, {
  3.7490569608994627`*^9, 3.749057023315172*^9}, {3.749057054187626*^9, 
  3.749057054359226*^9}, {3.749057151952998*^9, 3.7490571557126045`*^9}, {
  3.749058370361938*^9, 3.7490583714383397`*^9}, {3.749094081760639*^9, 
  3.749094083726243*^9}}],

Cell[TextData[{
 "The cummulative step: ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["y", 
    RowBox[{"m", "+", "1"}]], "\[Equal]", 
   RowBox[{
    SubscriptBox["y", "m"], "+"}]}]],
  CellChangeTimes->{{3.7490570849664803`*^9, 3.7490571032809124`*^9}}],
 " ..."
}], "Text",
 CellChangeTimes->{{3.749093990672079*^9, 3.7490940276753445`*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["bt$y", "s_"], ":=", 
  RowBox[{
   SubscriptBox["y", "m"], "+", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"h", " ", 
      SubscriptBox["b", "j"], 
      SubscriptBox["k", "j"]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "s"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7490570849664803`*^9, 3.7490571032809124`*^9}, {
  3.7490940341961555`*^9, 3.749094100355872*^9}}],

Cell["Sanity check:", "Text",
 CellChangeTimes->{{3.7491134042105803`*^9, 3.7491134059889836`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Echo", "@", 
     SubscriptBox["bt$k", "#"]}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "4", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Echo", "@", 
   SubscriptBox["bt$y", "4"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7490570311463857`*^9, 3.7490570469492135`*^9}, {
  3.7490593425420456`*^9, 3.749059342807246*^9}, {3.7490940857230463`*^9, 
  3.7490940873454494`*^9}, {3.749113410076191*^9, 3.749113459216277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["y", "m"]], "Echo",
 CellChangeTimes->{3.74996258332555*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["y", "m"], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "1"], " ", 
   SubscriptBox["a", 
    RowBox[{"1", ",", "1"}]]}]}]], "Echo",
 CellChangeTimes->{3.7499625833411503`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["y", "m"], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "1"], " ", 
   SubscriptBox["a", 
    RowBox[{"2", ",", "1"}]]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "2"], " ", 
   SubscriptBox["a", 
    RowBox[{"2", ",", "2"}]]}]}]], "Echo",
 CellChangeTimes->{3.7499625833723497`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["y", "m"], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "1"], " ", 
   SubscriptBox["a", 
    RowBox[{"3", ",", "1"}]]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "2"], " ", 
   SubscriptBox["a", 
    RowBox[{"3", ",", "2"}]]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "3"], " ", 
   SubscriptBox["a", 
    RowBox[{"3", ",", "3"}]]}]}]], "Echo",
 CellChangeTimes->{3.74996258338795*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", " ", 
   SubscriptBox["b", "1"], " ", 
   SubscriptBox["k", "1"]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["b", "2"], " ", 
   SubscriptBox["k", "2"]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["b", "3"], " ", 
   SubscriptBox["k", "3"]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["b", "4"], " ", 
   SubscriptBox["k", "4"]}], "+", 
  SubscriptBox["y", "m"]}]], "Echo",
 CellChangeTimes->{3.74996258340355*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solve the coefficients ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "i"], TraditionalForm]]],
 " from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "i"], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.7490574262482796`*^9, 3.74905743206709*^9}, {
  3.7490594063929577`*^9, 3.7490594144893723`*^9}, {3.7490630224431095`*^9, 
  3.7490630405235415`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol1", "[", "order_", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{
          RowBox[{
           SubscriptBox["bt$k", "s"], "-", 
           RowBox[{"Ys", "[", 
            RowBox[{"s", "-", "1"}], "]"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"LYs", "[", "i_", "]"}], "\[RuleDelayed]", 
             SubscriptBox["k", 
              RowBox[{"i", "+", "1"}]]}], ",", 
            RowBox[{
             RowBox[{"Y", "[", "m_", "]"}], "\[RuleDelayed]", 
             SubscriptBox["y", "m"]}]}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"tmp", "/.", 
            RowBox[{
             SubscriptBox["k", "n_"], "\[RuleDelayed]", 
             SuperscriptBox["X", "n"]}]}], ",", "X"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"Thread", "[", 
          RowBox[{"tmp", "\[Equal]", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               SubscriptBox["\[Alpha]", 
                RowBox[{
                 RowBox[{"s", "-", "2"}], ",", "j"}]], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "0", ",", 
                 RowBox[{"s", "-", "2"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              SubscriptBox["\[Beta]", 
               RowBox[{"s", "-", "2"}]], "}"}]}], "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"s", ",", "1", ",", "order"}], "}"}]}], "\[IndentingNewLine]",
       "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7490571160417347`*^9, 3.7490572325895395`*^9}, {
   3.749057267689601*^9, 3.74905740365944*^9}, {3.74905744942992*^9, 
   3.7490575842609572`*^9}, 3.749057687969939*^9, {3.7490579908756714`*^9, 
   3.7490579915308723`*^9}, {3.7490582182304707`*^9, 3.7490582918157997`*^9}, 
   3.7490583973811855`*^9, {3.7490589296395206`*^9, 3.7490589427591434`*^9}, {
   3.749059050056132*^9, 3.749059053098137*^9}, 3.749059423194187*^9, {
   3.7490941069858837`*^9, 3.749094107734685*^9}, 3.749094923132517*^9, {
   3.7491363502347994`*^9, 3.7491363578632126`*^9}, {3.74913639035807*^9, 
   3.7491363981736836`*^9}, 3.749136428843337*^9, 3.7491365682607822`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solve the coefficient ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "i"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"0", ",", "0"}]], TraditionalForm]]],
 " from the last step (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", 
      RowBox[{"m", "+", "1"}]], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["y", "m"], "+"}], "..."}], "=", 
      SuperscriptBox["Y", 
       RowBox[{"(", "s", ")"}]]}]}], ")"}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.7490629986374683`*^9, 3.7490630910364304`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol2", "[", "order_", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", "order"}], ",", "tmp"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tmp", "=", 
      RowBox[{
       RowBox[{
        SubscriptBox["bt$y", "s"], "-", 
        RowBox[{"Ys", "[", "s", "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"LYs", "[", "i_", "]"}], "\[RuleDelayed]", 
          SubscriptBox["k", 
           RowBox[{"i", "+", "1"}]]}], ",", 
         RowBox[{
          RowBox[{"Y", "[", "m_", "]"}], "\[RuleDelayed]", 
          SubscriptBox["y", "m"]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"CoefficientList", "[", 
       RowBox[{
        RowBox[{"tmp", "/.", 
         RowBox[{
          SubscriptBox["k", "n_"], "\[RuleDelayed]", 
          SuperscriptBox["X", "n"]}]}], ",", "X"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{"tmp", "\[Equal]", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{"tmp", ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["b", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "s"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           SubscriptBox["\[Alpha]", 
            RowBox[{"0", ",", "0"}]], "}"}]}], "]"}]}], "]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.749057708390375*^9, 3.749057768606481*^9}, {
   3.7490578059373465`*^9, 3.7490579084295263`*^9}, {3.749057955198409*^9, 
   3.7490579562280107`*^9}, {3.749057999237286*^9, 3.7490580043384953`*^9}, {
   3.749058953507562*^9, 3.749059043956521*^9}, 3.7490594283421965`*^9, {
   3.749061985882689*^9, 3.749061994322304*^9}, {3.749062401061818*^9, 
   3.7490624046498246`*^9}, {3.7490941174535017`*^9, 3.7490941211195087`*^9}, 
   3.7490949305737305`*^9, {3.749136366833228*^9, 3.7491363856624613`*^9}, 
   3.7491364267373333`*^9, 3.7491365482771473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Combine the two solutions and resolve all ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.7490631127828684`*^9, 3.7490631264172926`*^9}, {
  3.7490946926889124`*^9, 3.749094695824518*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MoL$desc", "[", 
   RowBox[{"order_", ",", 
    RowBox[{"values_:", 
     RowBox[{"{", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", "order"}], ",", "tmp1", ",", "tmp2", ",", "tmp"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tmp1", "=", 
      RowBox[{
       RowBox[{"sol1", "[", "s", "]"}], "/.", "values"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tmp1", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"tmp1", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tmp1", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//.", 
          "tmp1"}], ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp2", "=", 
      RowBox[{
       RowBox[{"sol2", "[", "s", "]"}], "/.", "values"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tmp2", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"tmp2", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tmp2", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//.", 
          "tmp1"}], ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"tmp1", ",", "tmp2"}], "]"}], "/.", 
       RowBox[{"Rule", "\[Rule]", "Equal"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{"Flatten", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["\[Beta]", "i"], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  SubscriptBox["\[Alpha]", 
                   RowBox[{"i", ",", "j"}]], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "0", ",", "i"}], "}"}]}], "]"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"s", "-", "1"}]}], "}"}]}], "]"}]}]}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
        "Sort"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"i_", ",", "j_"}]], "\[RuleDelayed]", "0"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7490580062572985`*^9, 3.749058172709591*^9}, {
   3.7490584123260117`*^9, 3.7490585341310253`*^9}, {3.7490590573569446`*^9, 
   3.749059104422227*^9}, 3.7490594336930056`*^9, {3.7490602315610075`*^9, 
   3.749060249391839*^9}, {3.749060801352008*^9, 3.7490608773397417`*^9}, {
   3.749060915701209*^9, 3.749060925373226*^9}, {3.7490609711749067`*^9, 
   3.7490610820287013`*^9}, {3.7490612234429493`*^9, 
   3.7490612238485503`*^9}, {3.749062853214012*^9, 3.7490628539784136`*^9}, {
   3.7490628963480883`*^9, 3.749062904896903*^9}, {3.7490941417583447`*^9, 
   3.749094144285549*^9}, {3.7490944247272415`*^9, 3.749094445912079*^9}, {
   3.749136376630046*^9, 3.7491363823084555`*^9}, 3.749136423851329*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Echo", "/@", 
   RowBox[{"Expand", "@", 
    RowBox[{"MoL$desc", "[", "4", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7490628428233943`*^9, 3.749062843806196*^9}, {
   3.749062879718459*^9, 3.7490628825108643`*^9}, {3.749062912712517*^9, 
   3.749062931978551*^9}, 3.749094148279156*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Beta]", "0"], "\[Rule]", 
  SubscriptBox["a", 
   RowBox[{"1", ",", "1"}]]}]], "Echo",
 CellChangeTimes->{3.749962584027551*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Beta]", "1"], "\[Rule]", 
  SubscriptBox["a", 
   RowBox[{"2", ",", "2"}]]}]], "Echo",
 CellChangeTimes->{3.749962584043151*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Beta]", "2"], "\[Rule]", 
  SubscriptBox["a", 
   RowBox[{"3", ",", "3"}]]}]], "Echo",
 CellChangeTimes->{3.7499625840743513`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Beta]", "3"], "\[Rule]", 
  SubscriptBox["b", "4"]}]], "Echo",
 CellChangeTimes->{3.7499625841055517`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"0", ",", "0"}]], "\[Rule]", "1"}]], "Echo",
 CellChangeTimes->{3.749962584121152*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"1", ",", "0"}]], "\[Rule]", 
  RowBox[{"1", "-", 
   FractionBox[
    SubscriptBox["a", 
     RowBox[{"2", ",", "1"}]], 
    SubscriptBox["a", 
     RowBox[{"1", ",", "1"}]]]}]}]], "Echo",
 CellChangeTimes->{3.7499625841523514`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"1", ",", "1"}]], "\[Rule]", 
  FractionBox[
   SubscriptBox["a", 
    RowBox[{"2", ",", "1"}]], 
   SubscriptBox["a", 
    RowBox[{"1", ",", "1"}]]]}]], "Echo",
 CellChangeTimes->{3.7499625841679516`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"2", ",", "0"}]], "\[Rule]", 
  RowBox[{"1", "-", 
   FractionBox[
    SubscriptBox["a", 
     RowBox[{"3", ",", "1"}]], 
    SubscriptBox["a", 
     RowBox[{"1", ",", "1"}]]], "-", 
   FractionBox[
    SubscriptBox["a", 
     RowBox[{"3", ",", "2"}]], 
    SubscriptBox["a", 
     RowBox[{"2", ",", "2"}]]], "+", 
   FractionBox[
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]]}]]}]}]], "Echo",
 CellChangeTimes->{3.7499625841991515`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"2", ",", "1"}]], "\[Rule]", 
  RowBox[{
   FractionBox[
    SubscriptBox["a", 
     RowBox[{"3", ",", "1"}]], 
    SubscriptBox["a", 
     RowBox[{"1", ",", "1"}]]], "-", 
   FractionBox[
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]]}]]}]}]], "Echo",
 CellChangeTimes->{3.7499625842303514`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"2", ",", "2"}]], "\[Rule]", 
  FractionBox[
   SubscriptBox["a", 
    RowBox[{"3", ",", "2"}]], 
   SubscriptBox["a", 
    RowBox[{"2", ",", "2"}]]]}]], "Echo",
 CellChangeTimes->{3.749962584261552*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"3", ",", "0"}]], "\[Rule]", 
  RowBox[{"1", "-", 
   FractionBox[
    SubscriptBox["b", "1"], 
    SubscriptBox["a", 
     RowBox[{"1", ",", "1"}]]], "-", 
   FractionBox[
    SubscriptBox["b", "2"], 
    SubscriptBox["a", 
     RowBox[{"2", ",", "2"}]]], "+", 
   FractionBox[
    RowBox[{
     SubscriptBox["b", "2"], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]]}]], "-", 
   FractionBox[
    SubscriptBox["b", "3"], 
    SubscriptBox["a", 
     RowBox[{"3", ",", "3"}]]], "+", 
   FractionBox[
    RowBox[{
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "1"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]], "+", 
   FractionBox[
    RowBox[{
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]], "-", 
   FractionBox[
    RowBox[{
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]]}]}]], "Echo",
 CellChangeTimes->{3.749962584292752*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"3", ",", "1"}]], "\[Rule]", 
  RowBox[{
   FractionBox[
    SubscriptBox["b", "1"], 
    SubscriptBox["a", 
     RowBox[{"1", ",", "1"}]]], "-", 
   FractionBox[
    RowBox[{
     SubscriptBox["b", "2"], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]]}]], "-", 
   FractionBox[
    RowBox[{
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "1"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]], "+", 
   FractionBox[
    RowBox[{
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]]}]}]], "Echo",
 CellChangeTimes->{3.7499625843239517`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"3", ",", "2"}]], "\[Rule]", 
  RowBox[{
   FractionBox[
    SubscriptBox["b", "2"], 
    SubscriptBox["a", 
     RowBox[{"2", ",", "2"}]]], "-", 
   FractionBox[
    RowBox[{
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]]}]}]], "Echo",
 CellChangeTimes->{3.749962584355152*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"3", ",", "3"}]], "\[Rule]", 
  FractionBox[
   SubscriptBox["b", "3"], 
   SubscriptBox["a", 
    RowBox[{"3", ",", "3"}]]]}]], "Echo",
 CellChangeTimes->{3.7499625843707523`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"i_", ",", "j_"}]], "\[RuleDelayed]", "0"}]], "Echo",
 CellChangeTimes->{3.749962584401952*^9}]
}, Open  ]]
}, Open  ]],

Cell["Export the MoL descriptor C++ definition:", "Text",
 CellChangeTimes->{{3.7491331356989994`*^9, 3.7491331466034184`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"numsToCppMatrix", "[", "expr_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"expr", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"n_", ",", "m_"}], "]"}], "\[RuleDelayed]", 
           RowBox[{
            RowBox[{"ToString", "@", "n"}], "<>", "\"\<./\>\"", "<>", 
            RowBox[{"ToString", "@", "m"}], "<>", "\"\<.\>\""}]}], ",", 
          RowBox[{"n_Integer", "\[RuleDelayed]", 
           RowBox[{
            RowBox[{"ToString", "@", "n"}], "<>", "\"\<.\>\""}]}]}], "}"}]}], 
       "//", "ToString"}], "//", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<}, \>\"", "\[Rule]", "\"\<},\\n      \>\""}], ",", 
           RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<{ \>\""}], ",", 
           RowBox[{"\"\<}\>\"", "\[Rule]", "\"\< }\>\""}]}], "}"}]}], "]"}], 
       "&"}]}], "//", 
     RowBox[{
      RowBox[{"StringDrop", "[", 
       RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"#", ",", 
       RowBox[{"-", "2"}]}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7494360272224607`*^9, 3.7494360278620615`*^9}, {
  3.7494786770123615`*^9, 3.7494787027056065`*^9}, {3.749478802888983*^9, 
  3.7494788076313915`*^9}, {3.7494788452430573`*^9, 3.7494788510930676`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"numsToCppArray", "[", "expr_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"expr", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"n_", ",", "m_"}], "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"ToString", "@", "n"}], "<>", "\"\<./\>\"", "<>", 
           RowBox[{"ToString", "@", "m"}], "<>", "\"\<.\>\""}]}], ",", 
         RowBox[{"n_Integer", "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"ToString", "@", "n"}], "<>", "\"\<.\>\""}]}]}], "}"}]}], "//",
       "ToString"}], "//", 
     RowBox[{
      RowBox[{"StringDrop", "[", 
       RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"#", ",", 
       RowBox[{"-", "1"}]}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7494360295312643`*^9, 3.7494360300616655`*^9}, {
  3.749436148310873*^9, 3.7494361887617445`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cppDeclareMoL", "[", 
   RowBox[{"className_", ",", "verbose_", ",", "\[Alpha]_", ",", "\[Beta]_"}],
    "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"order", "=", 
      RowBox[{"Length", "@", "\[Beta]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<MoLDescriptor \>\"", "<>", "className", "<>", 
     "\"\< = \\n{\\n    \\\"\>\"", "<>", "\[IndentingNewLine]", "verbose", 
     "<>", "\"\<\\\", \>\"", "<>", 
     RowBox[{"ToString", "@", "order"}], "<>", "\[IndentingNewLine]", 
     "\"\<, 0,\\n    {\>\"", "<>", 
     RowBox[{"numsToCppMatrix", "@", "\[Alpha]"}], "<>", 
     "\"\<\\n    },\\n    { \>\"", "<>", 
     RowBox[{"numsToCppArray", "@", "\[Beta]"}], "<>", "\[IndentingNewLine]", 
     "\"\<}\\n};\>\""}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ/exffOjRd68dTdV1ckA027z/+SB6RXTWGhCt8Gnv
FhDN8e44mH73QCXrGZCeoLmoAUQ7XJjaDqLfiq2ZAKLZ7jyZAqLDuvctA9F5
uxUOgmidp8lHQLTGK99bINolLRxM/+t/m/0cSG961ZALolet2z8TRK99uHk2
iG45N4v5JZD+oj2DHUR7ro6orXoP1L/4WyuI9js+cwKI/iZ8ejeIllf+cQhE
p3AbHQbRh3NLz4Forf+fL4JoW/O9N0D0sUOCt0F04P1FT0C0r/OEF2D9q0M/
gmi5CdPB9AqHPOZqIM0w9y8LiFbSiZMA0TklclIgWkezNQBE/zpWEgii534t
rFgFpNmen60E0T8kGyaA6B3TW8E0AGUv454=
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cppDeclareMoL", "[", 
   RowBox[{
   "className_", ",", "verbose_", ",", "pOrder_", ",", "\[Alpha]_", ",", 
    "\[Beta]_", ",", "\[Alpha]2_", ",", "\[Beta]2_"}], "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"order", "=", 
      RowBox[{"Length", "@", "\[Beta]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<MoLDescriptor \>\"", "<>", "className", "<>", 
     "\"\< = \\n{\\n    \\\"\>\"", "<>", "\[IndentingNewLine]", "verbose", 
     "<>", "\"\<\\\", \>\"", "<>", 
     RowBox[{"ToString", "@", "order"}], "<>", "\"\<, \>\"", "<>", 
     RowBox[{"ToString", "@", "pOrder"}], "<>", "\[IndentingNewLine]", 
     "\"\<,\\n    {\>\"", "<>", 
     RowBox[{"numsToCppMatrix", "@", "\[Alpha]"}], "<>", 
     "\[IndentingNewLine]", 
     "\"\<,\\n      // Alternative alpha[N-1]:\\n      { \>\"", "<>", 
     RowBox[{"numsToCppArray", "@", 
      RowBox[{
      "\[Alpha]2", "\[LeftDoubleBracket]", "order", 
       "\[RightDoubleBracket]"}]}], "<>", "\[IndentingNewLine]", 
     "\"\<}\\n    },\\n    { \>\"", "<>", 
     RowBox[{"numsToCppArray", "@", "\[Beta]"}], "<>", "\[IndentingNewLine]", 
     "\"\<},\\n    // Alternative beta:\>\"", "<>", "\[IndentingNewLine]", 
     "\"\<\\n    { \>\"", "<>", 
     RowBox[{"numsToCppArray", "@", "\[Beta]2"}], "<>", "\"\<}\\n};\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdy0sowwEAx/E1bRYnlFeZyYTZhVpkCXFxmJjGSlJeh9nstIjUDsPByv8w
2UPKlLTNCLmseWzYQWarHeZRaA9M2/JaTpv/73/49jl9K0aU4nE6jUYrJYPR
9LDkMvHRLqjmyyFzI6OEO4MyG+R8OY8gK+GhTDxzZVFSotashm2+1SUYL7QR
kPkY1sH+5ZNtOOXgnEN+ZPQC1sRE97BzYoAyvRKffCU9iKkV0GI/NcDdl0MT
1HiNWe+kP3X6bNhllc7PJsl/K7UAuz0GAqYKrh2wvPLPBcdyG9zQrVB5IS/z
7Yctjc4gvHLlPcDeJ3MYijqIN+q3Sj4hm1ijpN+cMeZI5aHffDizV1YEA5kQ
G/qGirmwyd/Dg6YgUQ8jcYYArrdKm6FNnxTCzRyWGC4aS/qg9rZKZSHdt0en
oe5OqIXHDg3lP0zRAJU=
  "]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classical RK4", "Section",
 CellChangeTimes->{{3.749059505546732*^9, 3.749059511318742*^9}, {
  3.74906427431971*^9, 3.749064277814116*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RK4$A", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1", "/", "2"}], "0", "0"},
       {"0", 
        RowBox[{"1", "/", "2"}], "0"},
       {"0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RK4$b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "6"}], ",", 
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"1", "/", "6"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
  3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
  3.7490600620511093`*^9}, {3.7490601189444094`*^9, 3.7490601229224167`*^9}, {
  3.7490602578938537`*^9, 3.7490602608422585`*^9}, {3.7490617715539126`*^9, 
  3.7490617729579153`*^9}, {3.7490632700779448`*^9, 3.7490632740871515`*^9}, {
  3.7490947507210145`*^9, 3.749094765728241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MoL$order", "=", 
   RowBox[{"Length", "@", "RK4$b"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"coeffs", "=", 
  RowBox[{"MoL$desc", "[", 
   RowBox[{"MoL$order", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["a", 
        RowBox[{"i_", ",", "j_"}]], "\[RuleDelayed]", 
       RowBox[{"RK4$A", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{
       SubscriptBox["b", "i_"], "\[RuleDelayed]", 
       RowBox[{
       "RK4$b", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
   3.7490600620511093`*^9}, {3.7490601189444094`*^9, 
   3.7490601229224167`*^9}, {3.7490602578938537`*^9, 
   3.7490602608422585`*^9}, {3.7490617715539126`*^9, 
   3.7490617729579153`*^9}, {3.7490632700779448`*^9, 3.749063280654763*^9}, {
   3.749094154612767*^9, 3.7490942066700587`*^9}, {3.7490947689730463`*^9, 
   3.7490947727326527`*^9}, 3.749113551615239*^9, {3.7495325086946516`*^9, 
   3.749532519848671*^9}, {3.749532693820176*^9, 3.749532694678178*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Beta]", "0"], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "1"], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "2"], "\[Rule]", "1"}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "3"], "\[Rule]", 
    FractionBox["1", "6"]}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"0", ",", "0"}]], "\[Rule]", "1"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"1", ",", "0"}]], "\[Rule]", "1"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"1", ",", "1"}]], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"2", ",", "0"}]], "\[Rule]", "1"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"2", ",", "1"}]], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"2", ",", "2"}]], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"3", ",", "0"}]], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", "3"]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"3", ",", "1"}]], "\[Rule]", 
    FractionBox["1", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"3", ",", "2"}]], "\[Rule]", 
    FractionBox["2", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"3", ",", "3"}]], "\[Rule]", 
    FractionBox["1", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"i_", ",", "j_"}]], "\[RuleDelayed]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.749532832769621*^9, 3.749962584932353*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RK4\[Alpha]", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"i", ",", "j"}]], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"MoL$order", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", 
        RowBox[{"MoL$order", "-", "1"}]}], "}"}]}], "]"}], "/.", "coeffs"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"RK4\[Beta]", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     SubscriptBox["\[Beta]", "i"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"MoL$order", "-", "1"}]}], "}"}]}], "]"}], "/.", 
   "coeffs"}]}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
   3.7490600620511093`*^9}, {3.7490601189444094`*^9, 
   3.7490601229224167`*^9}, {3.7490602578938537`*^9, 3.7490602608422585`*^9}, 
   3.7490617715539126`*^9, {3.7490628072709312`*^9, 3.7490628154765463`*^9}, {
   3.7490640773189626`*^9, 3.7490640841517744`*^9}, {3.7490942133624706`*^9, 
   3.7490942162952757`*^9}, {3.749094478656536*^9, 3.7490944820417423`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"1", "0", "0", "0"},
     {"1", "0", "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["1", "3"]}], 
      FractionBox["1", "3"], 
      FractionBox["2", "3"], 
      FractionBox["1", "3"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7495328328164206`*^9, 3.7499625850259533`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["1", "2"], ",", "1", ",", 
   FractionBox["1", "6"]}], "}"}]], "Output",
 CellChangeTimes->{3.7495328328164206`*^9, 3.7499625850415535`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cppDeclareMoL", "[", 
   RowBox[{
   "\"\<RK4\>\"", ",", "\"\<Runge-Kutta\>\"", ",", "RK4\[Alpha]", ",", 
    "RK4\[Beta]"}], "]"}], "//", "Framed"}]], "Input",
 CellChangeTimes->{{3.7490640500033145`*^9, 3.7490640931685905`*^9}, {
   3.7491312738099813`*^9, 3.7491312850264015`*^9}, {3.749131412400625*^9, 
   3.7491314144130287`*^9}, {3.749131591176939*^9, 3.7491315922377405`*^9}, {
   3.749131794850897*^9, 3.749131815427333*^9}, 3.749133179379076*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RK4 = \\n{\\n    \\\"Runge-Kutta\\\", 4, 0,\\n   \
 { { 1., 0., 0., 0.},\\n      { 1., 0., 0., 0.},\\n      { 1., 0., 0., \
0.},\\n      { -1./3., 1./3., 2./3., 1./3. }\\n    },\\n    { 1./2., 1./2., \
1., 1./6.}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.7495328328632207`*^9, 3.7499625852599535`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The methods of Fehlberg and Dormand & Prince", "Section",
 CellChangeTimes->{{3.749059505546732*^9, 3.749059511318742*^9}, {
  3.7490596145977235`*^9, 3.7490596243165407`*^9}, {3.749062978716233*^9, 
  3.7490629839890423`*^9}, {3.7490971050011497`*^9, 3.7490971590240445`*^9}, {
  3.7491332761928463`*^9, 3.7491332866916647`*^9}, {3.7491363063831224`*^9, 
  3.7491363190503445`*^9}, {3.749145571433773*^9, 3.7491455743353777`*^9}, {
  3.749145819271408*^9, 3.749145826821821*^9}, {3.7493931965907607`*^9, 
  3.7493932077291803`*^9}}],

Cell["References: ", "Text",
 CellChangeTimes->{{3.749391684320122*^9, 3.7493917034925556`*^9}, {
  3.749393211863188*^9, 3.7493932130955896`*^9}}],

Cell["\<\
Erwin Fehlberg (1968). Classical fifth, sixth, seventh and eighth order \
Runge-Kutta formulas with stepsize control, NASA, TR R 287.\
\>", "Text",
 CellChangeTimes->{
  3.74939323009962*^9, {3.749393280817809*^9, 3.7493933234214835`*^9}}],

Cell["\<\
Erwin Fehlberg (1969). Low-order classical Runge-Kutta formulas with step \
size control and their application to some heat transfer problems. NASA \
Technical Report 315.\
\>", "Text",
 CellChangeTimes->{
  3.74939323009962*^9, {3.749393280817809*^9, 3.7493933234214835`*^9}}],

Cell["\<\
Dormand, J. R., and P. J. Prince. \"A Family of Embedded Runge-Kutta \
Formulae.\" Journal of Computational and Applied Mathematics 6, no. 1 (March \
1, 1980): 19\[Dash]26. https://doi.org/10.1016/0771-050X(80)90013-3.\
\>", "Text",
 CellChangeTimes->{{3.749391684320122*^9, 3.7493917034925556`*^9}, {
  3.749393211863188*^9, 3.7493932130955896`*^9}}],

Cell["\<\
See also Butcher (2008) Numerical Methods for Ordinary Differential Equations \
(2nd ed).\
\>", "Text",
 CellChangeTimes->{{3.749391684320122*^9, 3.7493917034925556`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cppCode", "=", "\"\<\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.749439962190374*^9, 3.7494399635787764`*^9}}],

Cell[CellGroupData[{

Cell["Fehlberg\[CloseCurlyQuote]s 4(5) method", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
   3.74914584334225*^9, 3.7491458924667363`*^9}, {3.749391640671245*^9, 
   3.7493916898737316`*^9}, {3.7493937267622795`*^9, 3.7493937416135054`*^9}, 
   3.749393788631988*^9, 3.749393916100112*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cppClassName", "=", "\"\<RKF45\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methodName", "=", "\"\<RKF45\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "methodDescription", "=", "\"\<Runge-Kutta, Fehlberg's 4(5) method\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "4"], "0", "0", "0", "0"},
       {
        FractionBox["3", "32"], 
        FractionBox["9", "32"], "0", "0", "0"},
       {
        FractionBox["1932", "2197"], 
        RowBox[{"-", 
         FractionBox["7200", "2197"]}], 
        FractionBox["7296", "2197"], "0", "0"},
       {
        FractionBox["439", "216"], 
        RowBox[{"-", "8"}], 
        FractionBox["3680", "513"], 
        RowBox[{"-", 
         FractionBox["845", "4104"]}], "0"},
       {
        RowBox[{"-", 
         FractionBox["8", "27"]}], "2", 
        RowBox[{"-", 
         FractionBox["3544", "2565"]}], 
        FractionBox["1859", "4104"], 
        RowBox[{"-", 
         FractionBox["11", "40"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]1", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["16", "135"], ",", "0", ",", 
      FractionBox["6656", "12825"], ",", 
      FractionBox["28561", "56430"], ",", 
      RowBox[{"-", 
       FractionBox["9", "50"]}], ",", 
      FractionBox["2", "55"]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"higher", " ", "order", " ", "first"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]2", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["25", "216"], ",", "0", ",", 
      FractionBox["1408", "2565"], ",", 
      FractionBox["2197", "4104"], ",", 
      RowBox[{"-", 
       FractionBox["1", "5"]}], ",", "0"}], "}"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, {3.749145162759855*^9, 3.749145333174554*^9}, 
   3.7491461752640333`*^9, {3.749391320489483*^9, 3.7493913243270893`*^9}, {
   3.749391778468787*^9, 3.749391780574791*^9}, {3.7493919175398316`*^9, 
   3.749392129092803*^9}, 3.7493926782922688`*^9, {3.7493927107247252`*^9, 
   3.7493927147495327`*^9}, {3.7493935436154575`*^9, 3.7493935550190773`*^9}, 
   3.749393615547184*^9, {3.7493936615828648`*^9, 3.7493936938306217`*^9}, {
   3.749396058254485*^9, 3.7493960592528863`*^9}, {3.7493962622429433`*^9, 
   3.749396282837479*^9}, {3.7494372130137434`*^9, 3.7494373241351395`*^9}, {
   3.749437418530905*^9, 3.7494374388733406`*^9}, {3.7494376956497917`*^9, 
   3.7494377938831644`*^9}, {3.749438148316787*^9, 3.7494381514367924`*^9}, {
   3.749438437759695*^9, 3.7494384438593063`*^9}, {3.749440097021411*^9, 
   3.7494401022474203`*^9}, {3.7494402962077637`*^9, 3.749440335613433*^9}, {
   3.7494811214893436`*^9, 3.749481128181755*^9}, {3.749481175418638*^9, 
   3.749481200191482*^9}, {3.7494812302839346`*^9, 3.749481245103961*^9}, {
   3.749532530051089*^9, 3.7495325315798917`*^9}, {3.749532703382993*^9, 
   3.7495327038821945`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
   "\"\<MoL descriptors (generator).nb\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, {3.749145162759855*^9, 3.749145333174554*^9}, 
   3.7491461752640333`*^9, {3.749391320489483*^9, 3.7493913243270893`*^9}, {
   3.749391778468787*^9, 3.749391780574791*^9}, {3.7493919175398316`*^9, 
   3.749392129092803*^9}, 3.7493926782922688`*^9, {3.7493927107247252`*^9, 
   3.7493927147495327`*^9}, {3.7493935436154575`*^9, 3.7493935550190773`*^9}, 
   3.749393615547184*^9, {3.7493936615828648`*^9, 3.7493936938306217`*^9}, {
   3.749396058254485*^9, 3.7493960592528863`*^9}, {3.7493962622429433`*^9, 
   3.749396282837479*^9}, {3.7494372130137434`*^9, 3.7494373241351395`*^9}, {
   3.749437418530905*^9, 3.7494374388733406`*^9}, {3.7494376956497917`*^9, 
   3.7494377938831644`*^9}, {3.749438148316787*^9, 3.7494381514367924`*^9}, 
   3.749438437759695*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"The two choices of \[Alpha] and \[Beta]:\"\>", TextForm]], 
    "InlineText"],
   Text["The two choices of \[Alpha] and \[Beta]:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.749962587085157*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0"},
    {
     FractionBox["5", "8"], 
     FractionBox["3", "8"], "0", "0", "0", "0", 
     FractionBox["5", "8"], 
     FractionBox["3", "8"], "0", "0", "0", "0"},
    {
     FractionBox["10469", "2197"], 
     FractionBox["17328", "2197"], 
     RowBox[{"-", 
      FractionBox["25600", "2197"]}], "0", "0", "0", 
     FractionBox["10469", "2197"], 
     FractionBox["17328", "2197"], 
     RowBox[{"-", 
      FractionBox["25600", "2197"]}], "0", "0", "0"},
    {
     FractionBox["115", "324"], 
     FractionBox["95", "54"], 
     RowBox[{"-", 
      FractionBox["95744", "29241"]}], 
     FractionBox["252655", "116964"], "0", "0", 
     FractionBox["115", "324"], 
     FractionBox["95", "54"], 
     RowBox[{"-", 
      FractionBox["95744", "29241"]}], 
     FractionBox["252655", "116964"], "0", "0"},
    {
     FractionBox["121", "240"], 
     FractionBox["33", "10"], 
     RowBox[{"-", 
      FractionBox["1408", "285"]}], 
     FractionBox["6591", "1520"], 
     RowBox[{"-", 
      FractionBox["11", "5"]}], "0", 
     FractionBox["121", "240"], 
     FractionBox["33", "10"], 
     RowBox[{"-", 
      FractionBox["1408", "285"]}], 
     FractionBox["6591", "1520"], 
     RowBox[{"-", 
      FractionBox["11", "5"]}], "0"},
    {
     FractionBox["641", "1980"], 
     FractionBox["232", "165"], 
     RowBox[{"-", 
      FractionBox["512", "171"]}], 
     FractionBox["2197", "836"], 
     RowBox[{"-", 
      FractionBox["56", "55"]}], 
     FractionBox["36", "55"], 
     FractionBox["11", "36"], 
     FractionBox["4", "3"], 
     RowBox[{"-", 
      FractionBox["512", "171"]}], 
     FractionBox["2197", "836"], 
     RowBox[{"-", "1"}], 
     FractionBox["8", "11"]},
    {
     FractionBox["1", "4"], 
     FractionBox["9", "32"], 
     FractionBox["7296", "2197"], 
     RowBox[{"-", 
      FractionBox["845", "4104"]}], 
     RowBox[{"-", 
      FractionBox["11", "40"]}], 
     FractionBox["2", "55"], 
     FractionBox["1", "4"], 
     FractionBox["9", "32"], 
     FractionBox["7296", "2197"], 
     RowBox[{"-", 
      FractionBox["845", "4104"]}], 
     RowBox[{"-", 
      FractionBox["11", "40"]}], "0"}
   },
   AutoDelete->False,
   GridBoxDividers->{"ColumnsIndexed" -> {1 -> GrayLevel[0], 7 -> {
         GrayLevel[0], 
         Thickness[Large]}, -1 -> GrayLevel[0]}, 
     "RowsIndexed" -> {1 -> GrayLevel[0], -2 -> {
         Thickness[Large], 
         RGBColor[1, 0, 0]}, -1 -> GrayLevel[0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.749962587147557*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RKF45 = \\n{\\n    \\\"RKF45\\\", 6, 5,\\n    { \
{ 1., 0., 0., 0., 0., 0.},\\n      { 5./8., 3./8., 0., 0., 0., 0.},\\n      { \
10469./2197., 17328./2197., -25600./2197., 0., 0., 0.},\\n      { 115./324., \
95./54., -95744./29241., 252655./116964., 0., 0.},\\n      { 121./240., \
33./10., -1408./285., 6591./1520., -11./5., 0.},\\n      { 641./1980., \
232./165., -512./171., 2197./836., -56./55., 36./55. },\\n      // \
Alternative alpha[N-1]:\\n      { 11./36., 4./3., -512./171., 2197./836., \
-1., 8./11.}\\n    },\\n    { 1./4., 9./32., 7296./2197., -845./4104., \
-11./40., 2./55.},\\n    // Alternative beta:\\n    { 1./4., 9./32., \
7296./2197., -845./4104., -11./40., 0.}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.749962587225557*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Sanity check:\"\>", TextForm]], "InlineText"],
   Text["Sanity check:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.749962587350357*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.6650282940772778115496933402086549416576731093396716295663`30.", 
     "0.6170813975654184327069030064746985813808806438327385042732`30.\
071583158236713"},
    {"0.8103046953237705179318280651386476314363006314353694651018`29.\
938531689449068", 
     "0.7244972276940240258026470388383181905697699092967544928368`30.\
051525825019034"},
    {"0.9113923168208260522915484750943984959854275209189253800284`29.\
907392154317268", 
     "0.7903575026999979066673709189761457878678716015413306663237`30.\
0583008290328"},
    {"1.4118172764994359863412971202782228910076479941063061346778`29.\
130084764326035", 
     "0.9873894247109813849403722552382208520369472719151146343775`29.\
775285806767236"},
    {"1.5356336425986627842803178870978610732251932797467107940956`28.\
812029409385296", 
     "0.9993818565141190603425837580130092590094156890362274503575`30.\
079480730175217"},
    {"0.9913910852614360096572378194580598128022989891243804153682`29.\
145643691248203", 
     "0.8367884438280890381083095213327543066762665362585396678494`29.\
333609333783624"},
    {"1.450038102026407267534990946966331502983811282784902605726`29.\
649692423035678", 
     "1.450038102026407267534990946966331502983811282784902605726`29.\
649692423035678"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7499625874595575`*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``29.18728301321782", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7499625874751573`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.6650282940772778115496933402086549416576731093396716295663`30.", 
     "0.6170813975654184327069030064746985813808806438327385042732`30.\
071583158236713"},
    {"0.8103046953237705179318280651386476314363006314353694651018`29.\
938531689449068", 
     "0.7244972276940240258026470388383181905697699092967544928368`30.\
051525825019034"},
    {"0.9113923168208260522915484750943984959854275209189253800284`29.\
907392154317268", 
     "0.7903575026999979066673709189761457878678716015413306663237`30.\
0583008290328"},
    {"1.4118172764994359863412971202782228910076479941063061346778`29.\
130084764326035", 
     "0.9873894247109813849403722552382208520369472719151146343775`29.\
775285806767236"},
    {"1.5356336425986627842803178870978610732251932797467107940956`28.\
812029409385296", 
     "0.9993818565141190603425837580130092590094156890362274503575`30.\
079480730175217"},
    {"0.9913910852614360096572378194580598128022989891243804153682`29.\
145643691248203", 
     "0.8367884438280890381083095213327543066762665362585396678494`29.\
333609333783624"},
    {"1.4503825276573292174995483275512359431794652898469337331339`29.\
65188450420551", 
     "1.4503825276573292174995483275512359431794652898469337331339`29.\
65188450420551"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7499625876467576`*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``29.189371949243725", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7499625876935577`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dormand and Prince 4(5) -- obtained from ode45.m", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
  3.74914584334225*^9, 3.7491458924667363`*^9}, {3.749391640671245*^9, 
  3.7493916898737316`*^9}, {3.7493937458723125`*^9, 3.7493937635783443`*^9}, {
  3.749478194506714*^9, 3.749478206237935*^9}, {3.749480895008146*^9, 
  3.74948090868937*^9}, {3.7494809684374747`*^9, 3.749480969716677*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cppClassName", "=", "\"\<RKDP45\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methodName", "=", "\"\<RKDP45\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "methodDescription", "=", 
   "\"\<Runge-Kutta, Dormand-Prince from ode45.m\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "5"], "0", "0", "0", "0", "0"},
       {
        FractionBox["3", "40"], 
        FractionBox["9", "40"], "0", "0", "0", "0"},
       {
        FractionBox["44", "45"], 
        RowBox[{"-", 
         FractionBox["56", "15"]}], 
        FractionBox["32", "9"], "0", "0", "0"},
       {
        FractionBox["19372", "6561"], 
        RowBox[{"-", 
         FractionBox["25360", "2187"]}], 
        FractionBox["64448", "6561"], 
        RowBox[{"-", 
         FractionBox["212", "729"]}], "0", "0"},
       {
        FractionBox["9017", "3168"], 
        RowBox[{"-", 
         FractionBox["355", "33"]}], 
        FractionBox["46732", "5247"], 
        FractionBox["49", "176"], 
        RowBox[{"-", 
         FractionBox["5103", "18656"]}], "0"},
       {
        FractionBox["35", "384"], "0", 
        FractionBox["500", "1113"], 
        FractionBox["125", "192"], 
        RowBox[{"-", 
         FractionBox["2187", "6784"]}], 
        FractionBox["11", "84"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]1", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["35", "384"], ",", "0", ",", 
      FractionBox["500", "1113"], ",", 
      FractionBox["125", "192"], ",", 
      RowBox[{"-", 
       FractionBox["2187", "6784"]}], ",", 
      FractionBox["11", "84"], ",", "0"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"higher", " ", "order", " ", "first"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckB]2", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5179", "57600"], ",", "0", ",", 
     FractionBox["7571", "16695"], ",", 
     FractionBox["393", "640"], ",", 
     RowBox[{"-", 
      FractionBox["92097", "339200"]}], ",", 
     FractionBox["187", "2100"], ",", 
     FractionBox["1", "40"]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.749478366743417*^9, 3.749478423558717*^9}, {
   3.7494784619659843`*^9, 3.749478466911193*^9}, {3.7494785341005106`*^9, 
   3.749478587125004*^9}, {3.749482436556853*^9, 3.7494824414864616`*^9}, 
   3.7494830255442877`*^9, {3.7495325400039062`*^9, 3.749532540300307*^9}, {
   3.7495327059257975`*^9, 3.749532706783799*^9}, {3.749565952468335*^9, 
   3.7495659568675423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
   "\"\<MoL descriptors (generator).nb\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, {3.749145162759855*^9, 3.749145333174554*^9}, 
   3.7491461752640333`*^9, {3.749391320489483*^9, 3.7493913243270893`*^9}, {
   3.749391778468787*^9, 3.749391780574791*^9}, {3.7493919175398316`*^9, 
   3.749392129092803*^9}, 3.7493926782922688`*^9, {3.7493927107247252`*^9, 
   3.7493927147495327`*^9}, {3.7493935436154575`*^9, 3.7493935550190773`*^9}, 
   3.749393615547184*^9, {3.7493936615828648`*^9, 3.7493936938306217`*^9}, {
   3.749396058254485*^9, 3.7493960592528863`*^9}, {3.7493962622429433`*^9, 
   3.749396282837479*^9}, {3.7494372130137434`*^9, 3.7494373241351395`*^9}, {
   3.749437418530905*^9, 3.7494374388733406`*^9}, {3.7494376956497917`*^9, 
   3.7494377938831644`*^9}, {3.749438148316787*^9, 3.7494381514367924`*^9}, 
   3.749438437759695*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"The two choices of \[Alpha] and \[Beta]:\"\>", TextForm]], 
    "InlineText"],
   Text["The two choices of \[Alpha] and \[Beta]:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.7499625909975634`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0"},
    {
     FractionBox["5", "8"], 
     FractionBox["3", "8"], "0", "0", "0", "0", "0", 
     FractionBox["5", "8"], 
     FractionBox["3", "8"], "0", "0", "0", "0", "0"},
    {
     FractionBox["175", "27"], 
     FractionBox["100", "9"], 
     RowBox[{"-", 
      FractionBox["448", "27"]}], "0", "0", "0", "0", 
     FractionBox["175", "27"], 
     FractionBox["100", "9"], 
     RowBox[{"-", 
      FractionBox["448", "27"]}], "0", "0", "0", "0"},
    {
     FractionBox["3551", "6561"], 
     FractionBox["7420", "2187"], 
     RowBox[{"-", 
      FractionBox["37376", "6561"]}], 
     FractionBox["2014", "729"], "0", "0", "0", 
     FractionBox["3551", "6561"], 
     FractionBox["7420", "2187"], 
     RowBox[{"-", 
      FractionBox["37376", "6561"]}], 
     FractionBox["2014", "729"], "0", "0", "0"},
    {
     FractionBox["313397", "335808"], 
     FractionBox["424025", "55968"], 
     RowBox[{"-", 
      FractionBox["61400", "5247"]}], 
     FractionBox["96075", "18656"], 
     RowBox[{"-", 
      FractionBox["35721", "37312"]}], "0", "0", 
     FractionBox["313397", "335808"], 
     FractionBox["424025", "55968"], 
     RowBox[{"-", 
      FractionBox["61400", "5247"]}], 
     FractionBox["96075", "18656"], 
     RowBox[{"-", 
      FractionBox["35721", "37312"]}], "0", "0"},
    {
     RowBox[{"-", 
      FractionBox["563", "3456"]}], 
     RowBox[{"-", 
      FractionBox["575", "252"]}], 
     FractionBox["31400", "10017"], 
     FractionBox["325", "1344"], 
     RowBox[{"-", 
      FractionBox["7533", "6784"]}], 
     FractionBox["33", "28"], "0", 
     RowBox[{"-", 
      FractionBox["563", "3456"]}], 
     RowBox[{"-", 
      FractionBox["575", "252"]}], 
     FractionBox["31400", "10017"], 
     FractionBox["325", "1344"], 
     RowBox[{"-", 
      FractionBox["7533", "6784"]}], 
     FractionBox["33", "28"], "0"},
    {"0", "0", "0", "0", "0", "0", "1", 
     FractionBox["8813", "172800"], 
     FractionBox["41", "180"], 
     RowBox[{"-", 
      FractionBox["4294", "10017"]}], 
     FractionBox["263", "384"], 
     RowBox[{"-", 
      FractionBox["137781", "339200"]}], 
     FractionBox["803", "4200"], 
     FractionBox["17", "25"]},
    {
     FractionBox["1", "5"], 
     FractionBox["9", "40"], 
     FractionBox["32", "9"], 
     RowBox[{"-", 
      FractionBox["212", "729"]}], 
     RowBox[{"-", 
      FractionBox["5103", "18656"]}], 
     FractionBox["11", "84"], "0", 
     FractionBox["1", "5"], 
     FractionBox["9", "40"], 
     FractionBox["32", "9"], 
     RowBox[{"-", 
      FractionBox["212", "729"]}], 
     RowBox[{"-", 
      FractionBox["5103", "18656"]}], 
     FractionBox["11", "84"], 
     FractionBox["1", "40"]}
   },
   AutoDelete->False,
   GridBoxDividers->{"ColumnsIndexed" -> {1 -> GrayLevel[0], 8 -> {
         GrayLevel[0], 
         Thickness[Large]}, -1 -> GrayLevel[0]}, 
     "RowsIndexed" -> {1 -> GrayLevel[0], -2 -> {
         Thickness[Large], 
         RGBColor[1, 0, 0]}, -1 -> GrayLevel[0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.749962591262764*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RKDP45 = \\n{\\n    \\\"RKDP45\\\", 7, 5,\\n    \
{ { 1., 0., 0., 0., 0., 0., 0.},\\n      { 5./8., 3./8., 0., 0., 0., 0., 0.},\
\\n      { 175./27., 100./9., -448./27., 0., 0., 0., 0.},\\n      { \
3551./6561., 7420./2187., -37376./6561., 2014./729., 0., 0., 0.},\\n      { \
313397./335808., 424025./55968., -61400./5247., 96075./18656., \
-35721./37312., 0., 0.},\\n      { -563./3456., -575./252., 31400./10017., \
325./1344., -7533./6784., 33./28., 0.},\\n      { 0., 0., 0., 0., 0., 0., 1. \
},\\n      // Alternative alpha[N-1]:\\n      { 8813./172800., 41./180., \
-4294./10017., 263./384., -137781./339200., 803./4200., 17./25.}\\n    },\\n  \
  { 1./5., 9./40., 32./9., -212./729., -5103./18656., 11./84., 0.},\\n    // \
Alternative beta:\\n    { 1./5., 9./40., 32./9., -212./729., -5103./18656., \
11./84., 1./40.}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.749962591340764*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Sanity check:\"\>", TextForm]], "InlineText"],
   Text["Sanity check:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.749962591543565*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.1337789977914950119887171599463628751180404499406682752426`30.", 
     "0.1333803182674369696499684271566388899093732347604106339806`30.\
00260170394939"},
    {"0.1453021063919256917086553714701845724870636636504994750248`29.\
967046655372776", 
     "0.1447913591712043140746324603971925928930992812770860346326`29.\
97011817863579"},
    {"0.1521727223471651419851251724059254135849742781287774845115`29.\
94796382277887", 
     "0.1515861030727567168075379423206088252431968789069864212536`29.\
95133430656327"},
    {"0.1894310020198032237198330822257162986796209621928367237967`29.\
190029640477476", 
     "0.1883001060079701799478148793247394114530316764396125839494`29.\
195268335905293"},
    {"0.1981859619326987513396867275016975591132913254642474530223`28.\
75147258270695", 
     "0.1968911268055726702836270978449422694505771169511036321317`28.\
75721130241265"},
    {"0.20751167179270553725974788517253302897713796647309116197`28.\
750353225133267", 
     "0.206025595076531942366484935982667911018256746328692223704`28.\
756650359473287"},
    {"0.2056374723563779347653110212721592356225882460358942865542`29.\
192522624350286", 
     "0.2041912428134520335411185253726315728956789109415901898396`29.\
19870539061795"},
    {"0.2056374723563779347653110212721592356225882460358942865542`29.\
192522624350286", 
     "0.2056374723563779347653110212721592356225882460358942865542`29.\
192522624350286"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.749962591699565*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``29.578390371696052", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7499625917307653`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.1337789977914950119887171599463628751180404499406682752426`30.", 
     "0.1333803182674369696499684271566388899093732347604106339806`30.\
00260170394939"},
    {"0.1453021063919256917086553714701845724870636636504994750248`29.\
967046655372776", 
     "0.1447913591712043140746324603971925928930992812770860346326`29.\
97011817863579"},
    {"0.1521727223471651419851251724059254135849742781287774845115`29.\
94796382277887", 
     "0.1515861030727567168075379423206088252431968789069864212536`29.\
95133430656327"},
    {"0.1894310020198032237198330822257162986796209621928367237967`29.\
190029640477476", 
     "0.1883001060079701799478148793247394114530316764396125839494`29.\
195268335905293"},
    {"0.1981859619326987513396867275016975591132913254642474530223`28.\
75147258270695", 
     "0.1968911268055726702836270978449422694505771169511036321317`28.\
75721130241265"},
    {"0.20751167179270553725974788517253302897713796647309116197`28.\
750353225133267", 
     "0.206025595076531942366484935982667911018256746328692223704`28.\
756650359473287"},
    {"0.2056374723563779347653110212721592356225882460358942865542`29.\
192522624350286", 
     "0.2041912428134520335411185253726315728956789109415901898396`29.\
19870539061795"},
    {"0.2056387803468667642421889691747878304653226993660653677766`29.\
246628185256014", 
     "0.2056387803468667642421889691747878304653226993660653677766`29.\
246628185256014"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7499625920115657`*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``29.632493170210093", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7499625920427656`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dormand and Prince. Table 2. RK5(4)7M", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
   3.74914584334225*^9, 3.7491458924667363`*^9}, {3.749391640671245*^9, 
   3.7493916898737316`*^9}, {3.7493937458723125`*^9, 3.7493937635783443`*^9}, 
   3.749478194506714*^9}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
qH1vuEaV06gcbZzrnEhG2sdCLp69g1QmEJ9nZUXUjSqz9y5dg0ztHq/V9CCk
DSm2IU+XYiBoxaOjPeGje/C0WTwIXYMf/akyPvd0lLhgQhs1GS+Jj41zE2j8
Y27m8VVs7FExedQCh7SvDJiO9qgc7Z3rhGBAGkmsJzQyTnEC8UnmlsMQA8vs
vXHXCDfpXgwCvXJBHpgUWQYSVjw6TmcbWdSoq7Z3kpFHLJcR/vR8wu0d4fUm
MYfgjsjN/32Gp46WsL1HhWXv1f0Z8Wmr8deuAU8HDw6Stn2uE4IBOTwOygkN
DtJudjqB+AxVyIVGldnHZsUaKD69a4Q/D7uF7yMX5IF5kWUgYbk7IjLVxKJy
92yxzYy+XKVdQqcFVm/w56xyGiOcbpngX48mFl/C3l4BV89xpI2X9ldidZEa
SIcrMcKoBO2d6IR4QI6aVUriZ+PTcU6fEu9+OitFcpV2GQRTU6yBUU9vdI+U
1nsoVOYXJII8MC9SDOQsd0f03qfBRaXv2fpoA/tyodOstTPb1b09QqQsX50/
NYuT72q2q6Mgv95cOMmxdl3XP7nVvWf8o/qUIoMMSdDeWU4YGJAvVMXpI+Ld
49PILYS0riyfDpLoe3n3j+0/igxCl1x4RyVFfoG0LQ+QxKK62p+OXwnpZrl4
iEjGgzWTe0qk5httivOPVGxlU2ygnaBI+la067r+qazuPTijwhUf5MuPe4jh
AakPWD9/gt1nL4S0rhR/bBP5UyOzxRIqPv2o/ZHIOASlYzsqIzILpG15OyQW
1dW+fasWQ7pZLh4ikvF2m0jSGyMESy5StLn5n3p4YXdF+JsTm6p4GN7f2NWN
Gi0+Tv2Je+c3YUZAhozZGKTrdHpv9s16I603y13dTwePdw82eB1rBKExk65B
iCsGtp4RaQUqtrwdEivq7XJ0QY+6FLbJxUNEEldPbqN7cPCjZrPnr7Ar2VlX
8Ty8v7GrGzVafJxRJ9KWyU2YFJAhwzYGCY5/1CxRbwrm+yLBDxZJ3JDuub6v
/l9Kp91JKIa0ng4JBSr2uxpyy+ntlbum48Mm+nKhYN6H1MbH7r0TePW/7FRq
W2FXsrOu+pF4cwNXN2qoeMzrT9w4swlTS70+cmN6xYIJltz2p8HN9ebo6N+7
FLu/zv4jZJGnpyPQaEZQPZijussmkHN6uSwnt5Z6ryFh3CYLTxNMfSW/7Uf0
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
FwAAYDm+lQEwg/sFAABYkXcZAGZwvwAAACvyLgPADO4XAABgRd5lAJjh9ebq
GQEAAJzzIgPAJO4XAABgOb6VATCJ+wUAAFiOb2UATOJ+AQAAluNbGQAzuFwA
AIDl+F+8DMAMLhcAAGBF3mUAmMH9AgAArMi7DAAzuF8AAIAVeZcBYAb3CwAA
sCLvMgBM4n4BAACW41sZAJO4XwAAgOX4VgbADO4XAABgRd5lAJjB/dImJgAA
cE/eZQCYwf1y5PVJfZDKfNJ9AQBgP95lAJjB/fLu41ey3igVux8N1dvyV5ef
/y7dFxr4EZWHUCoA8M4PKgBm8M7+y8eAJEJ08J2sL8i9HdsPrcyEgSrpmJRQ
9XB/Q3K0XKKdVwC0uSkAmMH98ksjGvFAHbXMjVDv1dAekLGK6agnVD0sqp6j
SKIjBdY1jbEdVenN9WZHQoFR3BEADOcd5KfTUEQC1RgkGO30S2L7BbN3NMaq
J+Xa7lylmKNgliPlMbDYKn3b3blEV3akFRjLSQLAcH6p/hMJxRcavM8kmKBf
zT72le6rtCOfSPFRZhPdlcTNVXIUT3GkPAYOVZ9GVxyYqis1Mnu5sSko9iqm
XvHwRxkAMIefqf9E4lBvEGyTax9v8+REX6KdxGCKi4l73+z2/v2l09TV8bQ2
0qP1TqbRLBcHviBdaR//ff58H624uxtDDZlDfZD4CGxDDQAwg/vln2AoGm2C
kewN+NgEyfUl0kUVHyQ4B6lfyIf3wNT/vq+u9sVmjQanszodPxEKZouXaLuZ
zH7He77iGWwPMmoC9UGCM2EbCgCAGdwv/wTj0GhWH2FI++8MxUBdlVN8Sro7
X5Z+DUyc6sHGkWEjfz1qExzcIXYrwRLtbTNzyo92dLAEg5/r9bF7/E8D58+W
timA+hJWjwDArWxzv9QlfqcNH2FI++8MxUDBpPgF9Sg/q6Jr587b5qN+xh+N
MOP8ZKrXJ5GWp21mzvrRjoKcOF4iOQ0+/ddf0/NXP8+0QfbrS9ggCOxHKbI6
R+s/wVA02gQj2RvwUQmS6BvqSkoxfVK/kF+5jtfJvCO9PuzpCL0LzE2DUV4H
Io1P28yc+KONjXBXyoYUgPrhXeR4ua34KTpvBDgytizbgxx1UeFcSOH9FAlF
o03uKBgyqwiJvpuuSqhfGVK/ivfM5upk6pS+P8LYcajrOo5GtaFobHhzR1Ok
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
AABE/D/OXxcT
    "], {{0, 1015}, {1636, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{456.89999999999964`, Automatic},
  ImageSizeRaw->{1636, 1015},
  PlotRange->{{0, 1636}, {0, 
   1015}}]], "Input",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzs3QfUbVdZL/zt205JTgIBAoRAQpUOARQCCgoCAkqxIyoQiAIWBKyICgiK
EkVsIIgNxBIkIE3UgAoCimLDgsEodkVsiAXL/p7fnPO/9nrP2e8+J7n3G/c6
xl1j7PecvfYqcz7zKf+nzDk/+dFf9riLv/jRX/b4xzz6/Ps/+dFf+rjHP+Yp
59/viU+uU9sfsVhs3WOx+IiLzl/4/3KxmP5s/+FyufzA+Cza3/bn7u37YrH9
z8vVsVj99+7L8fvf/Y/7/Sfbf7eXL3vZy5af8zmfs3z/+9+/+Oa1l99hXPkD
P/ADy1e+8pWrR3zN+OFJT3qSu5aXX375SR5x+9vffnnNa15z+c///M/7H/F1
X/d17RG/8Au/cJJH3Pve925X/vVf//X+RzzqUY86xUd8/Md/fLvyb/7mb/Y/
4iu+4itO8RH3vOc9l2ecccby7//+7/c/4mlPe9opPuLCCy9c3upWt1r+67/+
6/5HfO3Xfu1VpMUJHfmyL/uyU3zE/e53v3bl3/7t3/ZH3MKfreWHPvShTx2X
3OlOdzrJw27f/u4sP/CBDyzPPffc5dbW1vK3fuu35s/7mZ/5mTzvS7/0S0/x
eVdccUW78rTTTlv+1V/91b4uzjnm8ePcb/zGbyyf9axnNZJuz85ddNFFqLq4
7sa31Vgur3/96zf2+K//+q/2443HU973vvdN1582zl155ZXLv/iLv2jfbj2e
8fKXv3z5RV/0Ra11NSq749I/+7M/Wz73uc9d/tM//dPiWuPc13zN15zQASJ2
3eted/nv//7vi612bm/5tre9rbHap33ap7WhuPvd7+4519k4rPe4xz0ag/3n
f/7n4tLRtmrP8r3vfe/yz//8z32uOev2ZZddtnzzm9+MC24+XvvhD394+au/
+qtNP3zrt37r8ju/8zuN6dZ4wbOf/ezlN3/zNy//4z/+YyL1f//3fzdC/eEf
/mF9q1fV3z/5kz+ZGnej9ne3PZYmuPa1r738uI/7uOVf/uVfLvJcLISt//iP
/7ja1ptSvV1+6qd+6vKss85a3uxmN1s+4hGP0IGdcYvH3fWud13+6I/+6OL8
du5QG79v//ZvbwT+rM/6rOXHfMzHLM8777zl7/zO7yxy3zvf+c72e7HmhkE5
bfkTP/ETy4/+6I+eiPx3f/d3y5ve9KZN7TlKmbV7XvGKVyw2j8q97nWvJh8f
/OAHF9cexPjHf/zH1lJcg6haszOGBneh+/d///djiXCToTEsxVWLZ7Rz5y5/
6Id+qHHG3t7e8oY3vGGjYYlBe7+B/4RP+IT2O3rjoiJW+w2hvuVbvqURCON/
1Ed91PJjP/Zjl3/6p3/axvPGN75x6xyu/MiP/MjlN3zDN2Cqm46h0fov/MIv
XH7ER3xEu+xBD3oQZtoaHXjpS1/aRgz5apgyyKVc2ogxvtvj7y1ucYuJXjcc
lP/93//95dGjR9vg/8qv/Eqj3QMf+EC0mCh/7Nix5UMf+tBBs0PLhz/84cvD
hw8v3/72ty/f/e53L29yk5ssP/ETP1FnJkbF6lr7i7/4i4NjtltPnPvKr/zK
iRndhyj9W//7B3/wB8vd3V2ysJZrLh5tLyFY3u1ud2vERHDcd+TIkfZ/fTEo
7qm2TO+74x3vuLzgggvat2uv5aTbjyuJhGF+8IMfPHjujOUznvGM9kQtvv/9
7788dOjQ8ku+5EvajYbSMKMMHec6bysWmouR029605smrkKU0glt9D/zMz9z
+Q//8A/tUQ7cVSw/GaEf/uEfXr7nPe+ZXkdh03l+Myg//uM/3gbMQT3+2I/9
GEFY/vqv//ryete73vLiiy+++WjKp3zKpzRGpi4jCx75GZ/xGcvt7e0VKx1q
QkwvEJM3vvGNy+/5nu9pLaL4bjSueeITn9iuITcOsqJVv/RLvzSR/pJLLlme
ffbZTZ/lHEHHfkW4ce7o8pnPfGZMbms9faWnr371q9t5EKKafd5snJx+3vOe
Nz3iC77gC5r+cNvjHve45QMe8IAmmre73e3a+BDVN7zhDWcdx1xvectbJuYy
DiTzNre5zfLSSy9dfvInf/LyzDPPXL7gBS8AjJY/93M/17QrAqY3T3jCE1oP
T85cpY+Xp59+umGYmAvbM6U5jKZWsU6Miv8zE2hMd5x//vnMbpjr937v99ol
v/3bv734hnEO/z72sY8d47uc4NM1rnGNfecwlXtJ3KFxzjCHWW82zn36p396
0walNRdRlf/yL//SNMtnf/ZnDwneayxzhzvcYflHf/RHrSv/9m//hrvCLbe9
7W0bPXP84A/+4AncoofOfd/3fd84dybOacJ9l7vcpd1XpqY9i0BTeH5jx885
55wGkNyPyYujFueNZ2DyJz/5yW2cmJ1AQVyXrvhOvD3Xczy3ZG9xPL/89E//
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
/u+7v//BfwBUAvw0\
\>"]]], "Text",
 CellChangeTimes->{
  3.7490596075153112`*^9, 3.7493915897215557`*^9, {3.7493916216392117`*^9, 
   3.7493916270368214`*^9}, {3.749392244887307*^9, 3.7493922482101126`*^9}, 
   3.749440617131527*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cppClassName", "=", "\"\<RK5DP_7M\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methodName", "=", "\"\<RK5(4)7M\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "methodDescription", "=", 
   "\"\<Runge-Kutta, Dormand and Prince method, variant 1\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "5"], "0", "0", "0", "0", "0"},
       {
        FractionBox["3", "40"], 
        FractionBox["9", "40"], "0", "0", "0", "0"},
       {
        FractionBox["44", "45"], 
        RowBox[{"-", 
         FractionBox["56", "15"]}], 
        FractionBox["32", "9"], "0", "0", "0"},
       {
        FractionBox["19372", "6561"], 
        RowBox[{"-", 
         FractionBox["25360", "2187"]}], 
        FractionBox["64448", "6561"], 
        RowBox[{"-", 
         FractionBox["212", "729"]}], "0", "0"},
       {
        FractionBox["9017", "3168"], 
        RowBox[{"-", 
         FractionBox["355", "33"]}], 
        FractionBox["46732", "5247"], 
        FractionBox["49", "176"], 
        RowBox[{"-", 
         FractionBox["5103", "18656"]}], "0"},
       {
        FractionBox["35", "384"], "0", 
        FractionBox["500", "1113"], 
        FractionBox["125", "192"], 
        RowBox[{"-", 
         FractionBox["2187", "6784"]}], 
        FractionBox["11", "84"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]1", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["35", "384"], ",", "0", ",", 
      FractionBox["500", "1113"], ",", 
      FractionBox["125", "192"], ",", 
      RowBox[{"-", 
       FractionBox["2187", "6784"]}], ",", 
      FractionBox["11", "84"], ",", "0"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"higher", " ", "order", " ", "first"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]2", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["5179", "57600"], ",", "0", ",", 
      FractionBox["7571", "16695"], ",", 
      FractionBox["393", "640"], ",", 
      RowBox[{"-", 
       FractionBox["92097", "339200"]}], ",", 
      FractionBox["187", "2100"], ",", 
      FractionBox["1", "40"]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
   "\"\<MoL descriptors (generator).nb\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, 3.7491461663408175`*^9, {3.749391305107856*^9, 
   3.749391312471069*^9}, {3.749391731135804*^9, 3.7493917367362137`*^9}, {
   3.749438159392806*^9, 3.749438164353615*^9}, {3.74943867394411*^9, 
   3.7494386741157103`*^9}, {3.7494392317004905`*^9, 3.749439231934491*^9}, 
   3.7494394617072945`*^9, {3.7494401058510265`*^9, 3.74944010823783*^9}, {
   3.7494401492687054`*^9, 3.7494401603291245`*^9}, {3.7494403137577944`*^9, 
   3.7494403265966167`*^9}, {3.7494403606358767`*^9, 3.749440376781905*^9}, {
   3.749532545323516*^9, 3.7495325456667166`*^9}, {3.7495327076262007`*^9, 
   3.7495327085466022`*^9}, 3.7495659680995617`*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"The two choices of \[Alpha] and \[Beta]:\"\>", TextForm]], 
    "InlineText"],
   Text["The two choices of \[Alpha] and \[Beta]:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.7499625947619705`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0"},
    {
     FractionBox["5", "8"], 
     FractionBox["3", "8"], "0", "0", "0", "0", "0", 
     FractionBox["5", "8"], 
     FractionBox["3", "8"], "0", "0", "0", "0", "0"},
    {
     FractionBox["175", "27"], 
     FractionBox["100", "9"], 
     RowBox[{"-", 
      FractionBox["448", "27"]}], "0", "0", "0", "0", 
     FractionBox["175", "27"], 
     FractionBox["100", "9"], 
     RowBox[{"-", 
      FractionBox["448", "27"]}], "0", "0", "0", "0"},
    {
     FractionBox["3551", "6561"], 
     FractionBox["7420", "2187"], 
     RowBox[{"-", 
      FractionBox["37376", "6561"]}], 
     FractionBox["2014", "729"], "0", "0", "0", 
     FractionBox["3551", "6561"], 
     FractionBox["7420", "2187"], 
     RowBox[{"-", 
      FractionBox["37376", "6561"]}], 
     FractionBox["2014", "729"], "0", "0", "0"},
    {
     FractionBox["313397", "335808"], 
     FractionBox["424025", "55968"], 
     RowBox[{"-", 
      FractionBox["61400", "5247"]}], 
     FractionBox["96075", "18656"], 
     RowBox[{"-", 
      FractionBox["35721", "37312"]}], "0", "0", 
     FractionBox["313397", "335808"], 
     FractionBox["424025", "55968"], 
     RowBox[{"-", 
      FractionBox["61400", "5247"]}], 
     FractionBox["96075", "18656"], 
     RowBox[{"-", 
      FractionBox["35721", "37312"]}], "0", "0"},
    {
     RowBox[{"-", 
      FractionBox["563", "3456"]}], 
     RowBox[{"-", 
      FractionBox["575", "252"]}], 
     FractionBox["31400", "10017"], 
     FractionBox["325", "1344"], 
     RowBox[{"-", 
      FractionBox["7533", "6784"]}], 
     FractionBox["33", "28"], "0", 
     RowBox[{"-", 
      FractionBox["563", "3456"]}], 
     RowBox[{"-", 
      FractionBox["575", "252"]}], 
     FractionBox["31400", "10017"], 
     FractionBox["325", "1344"], 
     RowBox[{"-", 
      FractionBox["7533", "6784"]}], 
     FractionBox["33", "28"], "0"},
    {"0", "0", "0", "0", "0", "0", "1", 
     FractionBox["8813", "172800"], 
     FractionBox["41", "180"], 
     RowBox[{"-", 
      FractionBox["4294", "10017"]}], 
     FractionBox["263", "384"], 
     RowBox[{"-", 
      FractionBox["137781", "339200"]}], 
     FractionBox["803", "4200"], 
     FractionBox["17", "25"]},
    {
     FractionBox["1", "5"], 
     FractionBox["9", "40"], 
     FractionBox["32", "9"], 
     RowBox[{"-", 
      FractionBox["212", "729"]}], 
     RowBox[{"-", 
      FractionBox["5103", "18656"]}], 
     FractionBox["11", "84"], "0", 
     FractionBox["1", "5"], 
     FractionBox["9", "40"], 
     FractionBox["32", "9"], 
     RowBox[{"-", 
      FractionBox["212", "729"]}], 
     RowBox[{"-", 
      FractionBox["5103", "18656"]}], 
     FractionBox["11", "84"], 
     FractionBox["1", "40"]}
   },
   AutoDelete->False,
   GridBoxDividers->{"ColumnsIndexed" -> {1 -> GrayLevel[0], 8 -> {
         GrayLevel[0], 
         Thickness[Large]}, -1 -> GrayLevel[0]}, 
     "RowsIndexed" -> {1 -> GrayLevel[0], -2 -> {
         Thickness[Large], 
         RGBColor[1, 0, 0]}, -1 -> GrayLevel[0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7499625949199705`*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RK5DP_7M = \\n{\\n    \\\"RK5(4)7M\\\", 7, 5,\\n \
   { { 1., 0., 0., 0., 0., 0., 0.},\\n      { 5./8., 3./8., 0., 0., 0., 0., \
0.},\\n      { 175./27., 100./9., -448./27., 0., 0., 0., 0.},\\n      { \
3551./6561., 7420./2187., -37376./6561., 2014./729., 0., 0., 0.},\\n      { \
313397./335808., 424025./55968., -61400./5247., 96075./18656., \
-35721./37312., 0., 0.},\\n      { -563./3456., -575./252., 31400./10017., \
325./1344., -7533./6784., 33./28., 0.},\\n      { 0., 0., 0., 0., 0., 0., 1. \
},\\n      // Alternative alpha[N-1]:\\n      { 8813./172800., 41./180., \
-4294./10017., 263./384., -137781./339200., 803./4200., 17./25.}\\n    },\\n  \
  { 1./5., 9./40., 32./9., -212./729., -5103./18656., 11./84., 0.},\\n    // \
Alternative beta:\\n    { 1./5., 9./40., 32./9., -212./729., -5103./18656., \
11./84., 1./40.}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.749962595013571*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Sanity check:\"\>", TextForm]], "InlineText"],
   Text["Sanity check:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.749962595169571*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.6783682747385026944202155031659251191930912477937560227511`30.", 
     "0.6275234024445409156599422718550293802309530543145520178525`30.\
07485128087985"},
    {"0.6836462922533973776201280944891683954105323289859502975408`29.\
997187029676592", 
     "0.631624095079045097760176598488359497719043026678423804045`30.\
073358593029898"},
    {"0.6863241027007845277799160837141737158933228053008631376043`29.\
995772384753458", 
     "0.6336978669522936108007096988268117616313720185559622029657`30.\
072619784254897"},
    {"0.6997597706696003651877109603051458481562425267908062164536`29.\
810027639618482", 
     "0.6440339311240020302672860027867518098207160175219799591188`29.\
89032772776259"},
    {"0.7021751353260676291880246966633511159907049936608632873351`29.\
569687454997272", 
     "0.6458797972211163477338569932902768073517350769981669564743`29.\
650619299299056"},
    {"0.705198019998239160345645615569006850564777188401382562482`29.\
587468187010042", 
     "0.6481846311474352207793874179230861720502088798597880606025`29.\
669195498395876"},
    {"0.7051919766367236913326212792512632694585290422666137953824`29.\
953560733520916", 
     "0.6481800292172535131158048591897579884850345652575503685662`30.\
035286449251963"},
    {"0.7051919766367236913326212792512632694585290422666137953824`29.\
953560733520916", 
     "0.7051919766367236913326212792512632694585290422666137953824`29.\
953560733520916"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.749962595325571*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``29.804223375412604", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7499625953411713`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.6783682747385026944202155031659251191930912477937560227511`30.", 
     "0.6275234024445409156599422718550293802309530543145520178525`30.\
07485128087985"},
    {"0.6836462922533973776201280944891683954105323289859502975408`29.\
997187029676592", 
     "0.631624095079045097760176598488359497719043026678423804045`30.\
073358593029898"},
    {"0.6863241027007845277799160837141737158933228053008631376043`29.\
995772384753458", 
     "0.6336978669522936108007096988268117616313720185559622029657`30.\
072619784254897"},
    {"0.6997597706696003651877109603051458481562425267908062164536`29.\
810027639618482", 
     "0.6440339311240020302672860027867518098207160175219799591188`29.\
89032772776259"},
    {"0.7021751353260676291880246966633511159907049936608632873351`29.\
569687454997272", 
     "0.6458797972211163477338569932902768073517350769981669564743`29.\
650619299299056"},
    {"0.705198019998239160345645615569006850564777188401382562482`29.\
587468187010042", 
     "0.6481846311474352207793874179230861720502088798597880606025`29.\
669195498395876"},
    {"0.7051919766367236913326212792512632694585290422666137953824`29.\
953560733520916", 
     "0.6481800292172535131158048591897579884850345652575503685662`30.\
035286449251963"},
    {"0.7051919766673381505145983764848415444308649679754775446436`29.\
9585089879598", 
     "0.7051919766673381505145983764848415444308649679754775446436`29.\
9585089879598"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.749962595606372*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``29.809171629832637", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7499625956375723`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dormand and Prince. Table 3. RK5(4)7S (with FSAL)", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
  3.749145629185074*^9, 3.749145633958682*^9}, {3.749146187837655*^9, 
  3.74914619063006*^9}, {3.7493918014164276`*^9, 3.7493918110260444`*^9}, {
  3.7493937789755707`*^9, 3.7493937832031784`*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs/V3O5bqWNlYu2L4w4Fa4KeUm2C34DLhuC3AVUPhaWM0Kpx2GamVoiZqc
JCVSGuMisU+8EjX58Ddixzn5P/6v/6//+f/533w+n//3f/8f/+d//i//3//H
//6//5f/+r/8d//xH/6n//r/+d/+1//2P/7hf/iP//T/+49/+D//+Q8AAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAXOLzf2l51//bnaV9vsSfNOi3MxwAMIn0
ofzZGVck4+zHsTCUVQ8zmuEAgBm0nMg/33WgL+doHPdDWXjSuN/CcKyicUQM
KMD8ul+qh1Ybr+SWMlZUdU8+fVj+lymPhSEYJBdvy6AEx7TxE/sW4g2ah8A8
Tg/HiL4FtLzeUknOJJv5oNEZ6meRR5Xvf73Q5Y69XiXMi5XH7sbC/lGeJLnB
rWon97lepf4J34ojZUSeTDSb7mzj6wB91W5ug3atltZu3D8n2cwvG6bu4rUV
OrL9yqD+Tp7hLVYJJL40qka56vXEh9or/NlU8JVCJb0+FOng6acbXwfoLrG5
jdi1Wpq6cfMcHUuXAi4uKS5eUrD+QT2dNsAbLZRGbo2U+1X1buITjeUdNRV8
pVBG8PlEy7WdPX0mFxdAi9rNLb7ptZTR8npjJbmPjkumtoDIY+NKiqsqKfjw
oJ5OmN69lkvjdG2ePlDV8ulj6YJrk28ZqcRHc0/mOhspLN13gJzCvhTZ3Hrt
WlVbd/n1xkoavxg5DroXcPqta0qqUlVS/OER3ZwwvXutmMbpevn5QO3M/Pl8
Yv4cFVMbe8tINaaRaLyqv5HCWroPkFDYdmp3tl5l1DbV8m5aPLfRXw9+aLbz
JV18pP4RfZwnutvNNpciIkumcVkdPZ+Iq1fC6UZ+RhFcepGHG5+JF9YlRoCg
9o2r7+bffgS0lFH70dNiRtSzH5fIV26JqCBe/+g8H+D6mb/ccARXTe3Kqmoz
UW38lXJt6RcTqy/ycFW2kSLL7ZzWDNBF+/nSvvn/aTumE9v+UKPryZ10fzqd
1L1UnYlTje9sLk5m0eHYr5qfxdcurtPnc0F1yTY3TD+Dqmqny9w4/WiuNoC7
XLlrNX5lnq31gsRaxmWGiP6Kd8HRWXZxMoteZvZl/6y8tnfl59MpdQk2vT8U
DPpuuYyqUtMfBRiqccuqevfnk7nX47XF+xJ0wfb+jHPk4Dz80ZfgYz9fSZQR
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
zehBmX/QyxWe1n/au/kTaHE6nU5D28dywbS8RTmrSGeDLTwmsRFkxe2mmoS9
ipmkO/Nrz2eeyfM28SN43OgsMfrpfG6P917X5HZL1wZp7Ow7Q+tIUMzAPIQV
xY/gcet6la0jnc+98d6rpePvTOxPseO5RsaV+khy43Yv2evgef5Ztj+X8NBF
vdDWkbvgld+av9c3enNib+svsHnhjge0W3HryBX82sthF+IC3sNJASTYOgDg
m5ORQeIzyqxblK0DADbXX6qP/l3q9Ub3NB3CVCnd6MYBIsKQAcDm4mNx/EWs
wtCeLpHA/G4ZI4KMF9BX+TgYdtQk3Z0W07l4htwy7Y+M7uz8CUzulgGaWTmW
cnojgl1iyFqq+ufd7j0NtjPJwplzfG9XOzp93d37/+TeKG5xd+RMxyR5idPB
NfSTm/AsuGDr6NvrafVNYOlIu06fDu7O49zdCf3f7o7hBndHzozME1jChMfB
6N2jb5dn1jeEpSPtO4Ua3R3GubsT+k/u6nUihzkD5AFmXqHAt9pDZ/TSPj3s
RnziedoTeFKebfOlvy41T9gvYITJNzRgWvPfiNiruh8aU4AqzkQgwY0aAL45
FoEEf1INAN8ci0CCSzUAfHMsAgku1QCwWeVYnLYweK1Vdg8AuMASx2Kitvk7
NUKus+1zoLGF/evvGbKlGTIA2Mx/mUmU9/OSNmfvesn1sRDUNVG3F8CNDBlc
5j3rK9dT2xEzmH8euqeVpftYDirSVGML7QVwL+P1zl5TpXGBrLXEOnY2/eJC
cfE8k0/C2vKOnp+2gy1atpHCW/HWRrxe1QLf0pOh4xeHfi5SQ8u7Va9fn/aN
Grv5qqz+8Z451lhq96DmT4xHmnwGVpVXfnLaPuY07iHl5yOtBaM+aqG9AL41
zodeHx33rcjXc/O/9vXCuw+bru09fU9Wey1dXiuxxmq7v77/xWTHoN7My7Z2
oZUfm7abOUcbUbBrjVlVPTCifb4VJsPQAC/7UOTT8TJa4jp998oQhmrv6Xuy
2mvp7FpBNQ5u+9w4emWJ9HieaRdvYqGdPjZhN1sc7SGRF08fLj9TFfX+mfYC
2BytlAsCvOxDp9+NV9L33Z8/6tzbO0RSas/5MXF9a+zjWvm0j2zH12t/CiPM
uYQTC63XM+uKd60xq8iIFJ5JDOgjx6uLo5QuSO/zy4gPlb97VEz83cKvB1+P
t7CKn4MbH/Gjx+ItLKq9g2uFk5gbHV//U3Opnj9MnmHOLS6x0IJdmK2nvaS3
ssgzn+ZbcaLUCaflhAoRjU7v88uIDxW+W6in/G652dPXT1uo79ZEylFEBj3+
0wfE9a2xayvG8l1nY/21r0ceXi5PVjfh/vZPMZHy4l2Yqqcd5faiYIOfrrfi
xtf5FlwXQz998TAdfStSSSSryAPpRpbQHsVpCNdPmws0duoBmVyZQPDh1SNl
OZ+deer5WeHpW+UuzNPTvnJ7Ue7JRNSf+kt11ZP8NDq9z86gDyWKaXk990Dw
mfnVru74j34+s3RWm47Tb91Argwh+PADUmUtn51J6tn/Spctep6e9jUigaMn
Ex+qHdDaJ9m7IL34rLtASyWRjkTanyeNFrWru/H1pbPaNPboGYFcGULw4WcE
y0KmmnI/K4lUGO/FPJ3ta0QCR08mPnQ0oLkCOBWfD/N/JVHMiHdrn7k9kKHK
3axa2g8IqrE7j0njyhyCTz4mW1Yx1ZT7WUakwngv5ulsXyMS+Plk7kNHLSQK
4FR8jPp+6MZhaqkh0oVgNydJ4wKN3XxYUD+7E+/gfh3tje9EB401V70efHLF
GFnaJFOuUEOkwngvZujsIH33oqMnc1EftdCrVP76/HLl58Z9a0QN8bhy076u
J+toH/SHpfRzIsVnZuPr82gsuOr14JPLZcjqJplyhQISm1LkQw9bX933oqMn
c1EftdCrVP4Uj+bLvjjoQ/EC4pUU3t2/Hm/88ZO2fcTvnTPdlSdSpLPtLUyi
sdSq1+MPr5IezzDDmi18PVie9ZXbi3JPJqL+uFSPt18sowO85itVBeQm5+m7
Ju2mccTvnTAjnM6l0y4Xnom8Po8r50b84VXS4xlmWLOnu9BPhRaC3xrcrUvl
9qLck4moPy7V41UtmRFf7N5+bQFV9VTFZdL+1T7iz8vndOKdhhb/6eS5NdZZ
9Xr84SWi4zFuX7D7AoIKjQQ/N7hnV4v3qzaoQtqJFuJD8ODBukZ8XczZfksx
tfWUX4+3PE8g3bUP9yPDicRSfqbx9Xk01ln1uiXJnD47txcQVGgk+LnBPbta
vF+REArPJKIujFfidYLKq2b+9ttL6vVuvNmp0uiofaDfnEz5mUgyS6TXOEmq
XrckmdNnZ4YaCiKNBD80pje3yW1HiWeCH2ps4dmDdZmhMcaX52Ua6zl6Pdjs
bGl01Nivp8byJzU34j+q/cq9Bq2+loeXyI0n+ezcXdG/grU1bmsPEO/aaQ6n
U6KxBYN1maGr+7PTt/32klpej/+o19en1dipR2ayCQ76G6ZWx9UXeb0xdhhh
/qUar/D0scl72qiqa+UoTjOveqD768QNXeCfnb7tt5fU8nr8R1XPLKexU4/M
5FtwynWcWtMm2XH1RV5/7ZJkZvMv1aoKC4/N39MWtV0rpBEMqvBMpIXyMw8e
qYsNnfYTrqnGkhrn5GxptGvsUTy0hhpvFpxyb5haHVdf5PXT55cIjYf57Nxd
0b+qyvvZnfn72GLfu2BPyy/m0r64AMpGhznheLUUU+5LpKdTRdEu0p3IT1se
WEI8qMdPrXELMPHKKqHxJJ+duyv6V1V5++7M38GcSE9P+9uYVXvU7S1QMDrJ
CQerpZ7T7pQfmDCNFpG+xLPannnkSm+cOX/O0l4lq8Y6E68XJtISifE8829u
XRbazB1MK3cz2N/GlLrk/OxhGqcc1AV5Xj9k6S6f1hnpS7D9B8zen0uyoPH1
1RMrdyfS2cIz8wfVOLiN06Px69DX/DMwV947F1e6m40ptUf9tpFqV47rmsl/
8ahVdbnwo/3r8Y78bOp5s3ffzbLG1x8QWntPFw1qhl6vlRjPtsoMTBc2c6cg
LXgYDZ3/F28d6f72zeqWqK9UFVd74M/IrUs3V0ypseNdcjtqql8vIco8hBV1
PIx61TD0W/vPxbscfDHehVvSvkw8rqOON76+rvZuviGlvY69e0NczOxVKxee
5Pa7yvVbR0uX+8b17J3zNKtyx3NvPUN7f18SFDzSe/Y6eKQbl/At3225tLzt
gseNTC14IecLkGPrAICNSzWQY+sAgI1LNZBj6wCAjUs1kGP3AICNYxHIsXsA
wMaxCOTYPQBg41gEcmwdALBxqQZy7B4AsHEsAjm2DgDYuFQDOXYPAPjmWAQS
XKoB4JtjEUhwqQaAb45FIMGlGgA2jkUgze4BAH+5VANpdg8A+MulGsixdQDA
xrEI5Ng9AGDjWARy7B4AsPHXP4AcWwcAbFyqgRxbBwBsXKqBHFsHAGxcqoEc
uwcAbByLQI7dAwA2jkUgx+4BABvHIpBj6wCAjUs1kGP3AICNYxHIsXsAwMax
COTYOgDgm5MRSPBbcgDYOBaBHFsHAGxcqoEcWwcAbFyqgRxbBwBsXKqBNFsH
APzlUg2k2T0A4C+XaiDN7gEAfzkTgTQbCAD85UwE0mwgAPCXMxFIs4EAwF/+
TjWQZusAgL9cqmlk/ryZoQeAv2a7VB/Vs/3z7RU+VW4C7McrN4u6NMLFjBfA
Wlr2bSf1qUnyObqbFdxS51Plsu01QEZ5UcYLGKFqYwncF+xR/6fGWAQbMUMy
VSvCCPY1aH0F2zHQS3vhYL2qs9zuhdOs9iyIHCJv26b22mMRbNAMsdStB8PX
SUu2heermjLQS1t3sBIFm5w5cst5Z1yJ4+D0FdOvPRnZxs2QSXy8DFwvjfGW
nw+2VnjMWC9hxYWZK7hxvbyW0BJem1V5lR1FEXnrnXlu2pP5+Zhsf5ohk+DX
DVxHuZX1893TZ07byb3O7WbYPeISU73w4kIdv0UkNLn9480pBSfMPo34i+8J
8x/l7p/mU/X6OxP+NkMgwU8bsqHicyAyYSKtRX5quGc2w+4RtC81WHDhlVX6
fguh1Tqaoi9JqdDfciCRlN4W5rfTvp/Ot9PoXjhdC1ZZv/NXuLp4wpEJ0zhe
hnsJS2wdf/r91wdqf/pa5ZBXmTZXKkzRN0R02tlCIJGI3pPkXqTvkQWbfv1t
Vlm/81e4unjCkQnTOF6GewlLbB1/rrpUz5zAxU5jEdqpV0V02tOWhfaqJPci
fS/H2/j623x27q7oh8nLe4CqORB80h74ePNvHT/lpvrRwysmMFpVaHL76VX5
VJ0mDpRaVRtdrn0hbz47d1f0w+TlPUDVHAg+nBu1+Wcjm0UHq+9UXzGB0cbt
D+8hn28tW40YTzVONnP12/zH4vwVPkBVyMGHa0ftc6CuJ1xo0ZG6fao/Xm1o
ctsTzrf0bBHjqcaILOS9yTOZubbHqJ0Dp883Njj5nGSz4jDFaw4+uWIIQ0UC
scbLhPMtnYYYTzVGJOG9yTe3aQt7kto58NmJ/zTY4OTTkj/Tbx1H4jUHO7hi
CENFclt08lxGOJv0VDHHTjXmI+G9z87dFf0n0xb2MIk5sJ85BY31GP05LTpM
VQVHHl4ugdEis2LFmXMl4WzSUciwrHENWsI/TX4sTlvY8ySi3k+eI431GP05
Tb57HKkq+LSDKyYwWiQTuZUJ56+WeSLAssY5Zgn/9Nm5u6L/ZM6qHik3B/bz
p9eMmnla8tfku8eRqoLLfVyx+xc4nRiLzpwrCeeP/yW9kRrzEe+RmTe3Oat6
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
    "], {{0, 1035}, {967, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{311.29999999999893`, Automatic},
  ImageSizeRaw->{967, 1035},
  PlotRange->{{0, 967}, {0, 
   1035}}]], "Input",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzs3Qm4rFlZH/pyj2foGXqgkXmeFKNIAokiIKDYtijOgCJCQCSCQ0wER4YA
oiYB1CgoggiYKKhRQzSKAipKEmRqkGiMRg0GaTGzGeq+v/Wt/1drV9eus89p
b+69z009T+1z6quv1rfWu955Wtc9/muf/MSnPf5rn/KEx9/+4V/9+Kc/+SlP
+JrbP+yrvrou7X7UYvFRz633K26/8P/lYjH/2f3t5XL5J/29aH+f3f67WOz+
x+XqtWh/n73sX334hF/dtf3dXX74wx9efvZnf/by8z7v8xZ/1q/9x/84P2Dx
5Vt+vbf8l//yX/pyedFFFy3/7b/9t3/aB/jGb/zG5a1vfevlv/gX/2LxxK0D
vPOd72wD3OUud1n+9//+3zPAp37qp7bLr3nNa7YOsDsPcM973nPxkX7t+uuv
b9d+7Md+7ISPv+qqq5b/5t/8mz+94AFucYtbLP/Vv/pX5zvAav53u9vdbsb8
z549u/zn//yfX/j873rXuy7/5//8n38x87/uuusu4NcX9Ws1jeWf//mfe9en
+rvvi53lf/tv/+2w31L/bbf49Bl9JX/wB3/gge194403flO/9XM/93PPcy73
uMc9+lxOLX/hF35heeWVVy5vd7vbLS+//PLlJZdcsrzVrW61/IRP+ITlhz70
oZ122/7y7/29v7e84oorlpdddtnykz7pk5a//du/XQNO3xVaIa72HTT7h//w
Hy4e2b47aHM9derUslN9G+O7vuu7PrrP6Fd/9VeXz372sxFGH26vQecNb3jD
8mu+5muWP/IjP7LfL4PGy172suU/+Sf/ZPlf/st/yQiA8sd//Mf9pulajba8
4YYb2qcr+zVc4L3vfS8aXlzWr/39v//3zxOJbnOb2yz/5E/+5Gy7fM3y3/27
f7f8uI/7uPYVgn74wx8+r/Zv/+2/3cb4zd/8zfYZhF73utct/9Jf+kvLj/7o
j17+p//0n9r3Jvvpn/7p7Z4f/uEfXn7ap31a+3+B4NPbYw6Xr3zlK1H/8lnP
etbyJ3/yJ5df93Vf12554QtfuLh1X0v4SYFm3hhTCO/y79Of/vT+3cHyIx/5
yPLBD37wvDF3utOdlu973/sy3Jd+6Zcur7nmGrfNw73pTW9a3v3udw8zWr7j
He9YXNGnWPi4fN7zntdQaW9vr91jmv/jf/yP+ffuefzjH798wAMesPzrf/2v
L3//93+/JjI97xnPeMa8FZ/W7/+N3/iNBrX73//+yyc+8YnLf/bP/tki2GCs
wjMIsvzgBz94yYl2Dwv7wAc+MKH+1Q0lPvZjP3b50pe+tN1f4ywf97jHLf/u
3/277bPnAh1Qef3ET/xEGwYteNkKn1/0ohe1z2jWI+p3Hf8P2+6OLxhy5swZ
u7+4tq8dK8LefNrpv3vzm9/c4GjsP/3TP12+9rWvbc961ateNd9jj1wjomrr
moRBtn/0R380j/3kJz+53VNIO/+uUGS5s7PT9tCePupRj2okX3TcSeOUfVt+
yZd8Sfvtk570pEY6f+Nv/I2sP0P92Z/9WWOsQXD/Qmbbvt+n8MVf/MXz1j6i
/w7huHbxxRcvv+qrvqr95qM+6qNQ5Iyhv/iLv9hEbO4D2lraxSfaavAs2Xxx
n0Mtv21loWgff7dxiMPDw+U3fMM3zKAB6v39/bb1/+t//a82dwT9W7/1W/2e
3Zn63vrWty4+s1977GMf2679h//wHzrHubLpGFDmB3/wBxsI8TTb45lQt7hr
m/tDHvKQ9tsSru3zf/2v/3W5u7vbmIQXhuf7UjnmObzkJS9p18Bret7FDdVs
G/7pX9ts7Dvc4Q5tXa57+e5nf/Znof88njU/4QlPaJ8u7ddwVc8ohtRhdnb5
RV/0RW3+7373u9tY3/It39JQ6ad+6qfa55//+Z9vv/lbf+tvzfufua72f3f5
n//zf16+/vWvH+Zw0fIHfuAH2n1Q2atg2fjtLW95S6ymfcY6PvETPxHsLjoR
HuBhxfIv6c/90R/90Xa5SHxe+6/8yq+0az/0Qz/Urx00vCbOkCDcufe97w2O
QZ1nPvOZ7Sff9E3ftAiTxj3yAu573ete7ec1VN+iveW//tf/ema4BcbGJmvn
vvd7vxdmN6QlTmBAdgpxut0rECo9aJ79e97znnatdqY/5qKGXddee23j6QSy
lbjHThHAX/mVX9nG+4Iv+AISOKuCAGZcIrUjwV5DYsPYhNqAwOepT31qG9G+
/O7v/m77fy04I/3Vv/pXm0JRcJiF8j/6R/9oRoPrOsyiXEMjr5/7uZ9rn7/t
275tXuBP//RPt2vFqRbb97yItN2JcGrTLu0PeeADH9guG9yLEPb5H/yDfzDv
NxZ/6aWXNh6TB9aeZz0RpDXPLp1OtZ+QHp/5mZ+5/J7v+Z5ZMtqwIsXsBS6C
ifuKQMPVqACoqARaU2uy7E/5lE8J8wvv9cr/i+EEKAHcIx7xiHnX0Ue0WorE
K17xikb7dv27v/u7G57/zu/8Ttviv/bX/lrW9jf/5t9sP6lt7Nz/bJvYwcFB
Y8vFRWed5GEPe1ibUR5/v/vdb7FOE4Xj854Hecc9L+Rt16jQXl/xFV/RPher
nPfcUrDd0gq27vnuTBKFfH32h40kCIwCZ7sZ413f8BC4p2BmcKbk5/qGf+d3
fmff8MlmrAU3mt1pf3eXX/iFX9iI2h1X9aHxYfLjoQ99aHs8IBRlZ21vfOMb
29Cf/MmfPIs6WpFrb3/72xtx+n9tV36CyroJ059ydvnv//2/b0K7SKU9JYIe
z/AyVFhUVvXVX/3V7RpBf3m7dqZxbtdI376lDYDjNhdWbRoiu4wCjupuZxui
Pf/5z2+2AaEQVbNwuA2dFeMQWSaNuGPdOXb9uc997pohs9tG/tZv/db2KbuM
B0fXDt4Vmx+pHs+ltJKOJEtJnKyVuu0XtZbO5fcaJRCqWGyB59oORZAy0q//
+q83FfL06dMzF7d70GymuRV1lxW1/P7v//7jqLt0+lJTpydEclFav/7rv779
HxJ7ATaEL3LJ3EupuQlVm9DnfM7ntOsEvmXf5z73aag0bnft52ITd8h+j6Zz
iOOf/tN/GsnWieNg+ZSnPKWN67kPetCDmlJTU84q6Se2u+jjHNtNU1scsaHP
tg1w7dd+7dfazUBJSN35znduI1PG2bMl1GbtLrj+Hd/xHe03X/7lX94+l7I9
IyHjFn+mwX56v0aCQHyfJrtzv0kRspUSDZC1yD7G2RmweUE/ksUeeUUC0ZLy
3KD0C17wgpnGaR5euBEAFstoG9dt2+Uf/uEftjXe8Y53nDeMgYHjr+zcs8sX
v/jFbWxGF1xhXPgMU71CGiXO5nForLDYOLHMf+/3fq/5B/rmx05D32waqgtF
uMTdYtQp1kFM8bWMRz7ykefY+Js6TybTIQIUJgK2e0qZ6U+4dPl3/s7fadd+
+Zd/uWEffYTiQ654leXZkOUv/+W/3AifuHR/WYKz5wLHokQ9+tGPbu7Dz//8
z0cF13ZYdEmwvP3tb+8R2XocyGUKttfP/MzPtM+koxfN0JYVM5jhQcoyTor+
ujC/oqEweBaKtBlSTqLCmXlQwMwI9BgPYOs+tmGpHvF0lJ7QLtelmTkGc72Y
03TtUvV2+gKJMSwN4tXPggMeFFkx48BuWy/U8IAo/mz2bi/Oa2Wvu1YKyXns
/cV9ynRsTNregyJuXFOPg8FUzc1WQ8iyMGYR68EAFX3YdtYSH9mf9sIXvrD9
bBTuYS3uuKYvv8hhefXVVzeGPm/7YdPyKINYHNbrFvCsCc/w5ryyoK/92q+d
9Yvv+q7vmhj8ZU3nevnLX94eF8+C3aYcwhovuhiW+fEf//GNkCP0SwW5vM8k
Pi0qKXQnFn0uxj/zwVKE2jWarteP//iPz7xnry+UhcbaWqN1swFGaiz2w1YI
rfN0+e45z3nOvN92CLj5ejbvdzwVFBdg9On0Bhxo6vwOXhqfEQPy+77v+xqL
Cs4xHi2v0HTGJOyNm9Onu/R1YMm4w/vf//7GjvlH4vuiONvMEiGz7wpd0XOw
dWhW9DeDipGPHfiudJ54JumGzM+Vb3O/KX/wApiA5bWvfe3iFh0/MC0bTqvD
HiF6mTRBH1wgAgtvgoHFbeMQY4Xh12t0aZ+OyuUz0ZLmF3GIoog4rkb3FyZu
drRc2XEIQLBh8hawcBMabwG0HnHT7Xt4hwAZFP7BZ1nku/jUfn9coj7da0AL
Pt5pldM1uMmWglQxrSEfOxqVFRoFLNQmYg59l+6RyzEVO7Su6AMTuF2BXnxC
v4aIXvOa1yyf9rSnFQTL8K1rr3rVq+aJhl/COq54iyqBu9kjGejZTNpIVGco
RSiJCGyC3sP672IcELmYAfzqnvrFq/pEQCtCsdZ2Wccf64I/uJzNgvUFqOs3
zvPqPodwiuJZs6KNZGKNnOm7yjayI/Abxymw150YwbXLX/qlX2qkBrXe9a53
UcCbyfWP//E/bu5Htmnd2dZk94hMbPYDH/hAs634v1jQ4EEDYVLAdv/Pv7VJ
t+rTIxmRUYFq5kLf/M3fHN1/cZt+jeFteN7Svfb3YAwLthckr6HjPaJ7E0GM
llP9Wo89tE+P69cI5SjIAb9rqJqgZLP5/iUvecl28Jf52W6EewF/3GnQ4kwf
nE5Es6fnsHrpLbU9O5wS9RN6I7GxYgJnmy6KC9FfKB/cF7xcnD1QBGZh3kXj
/Tenmh7Mo5B7/d+/eEApeNmBMjlnb8m6F4dtkR3g8mIoF++pHfD3dBvSCqyG
5kXv4UmiqXE+1k526XC6SUsaYNgJbYXN6cX8neyYz/iMz6i/sT9LvS9J4tpe
c1gjQAZ6sY9bdmAyh+AxfCTuSMfC1TMuFKqT07zhvoZrLOHd9t3uLKeXgwwj
p93rjr1+H1IhlXza6dei7E8ENf12DO3FLRsXa5HTESlrwzDTzzxvjBJoi6tg
RPX8NhII0TJwBe0wAcRc8nYHDUx43tRWQhwvAyQvQ73tbW9rdEqpBBD0DWkR
IIoqIEYPiHFb/GleH9In3GoXF7ft1xjvXFr1npy4BXGsBnxsn/db3vKWxnrs
GTZSGt2MPdgQqc1CoanCECLYy9SKV9a4pSZ2Ue6e+rf2wbW9JqbLgmmKZBF1
sAdgkJ/pkvAcHcXdz7hQ+0otLXOtfe1ffqud9t1u+84sDRQhINjgXnfs9fso
l57uU36Ljnjn6v5ZL6HU84B0DLqkX2YZ0+wwyQJiYJwIU8FwcYd+KyMbcYss
1XvHh7qV+tm99LPyRyQi3uIntUx/d5teQLL5dHG/xq6kgIioHJw3qsarVdx0
1hoSj6HCZTZAVCZW+/SV/RrtAi4KabZFn23hh72GgGHttfMN+fNACOu76c76
u4M/tFsWU/CZOKppzVCH+nG4D1C3GXgwtW2Oq+/Olie+NkH9VBOK9tLeeQMh
1QrYC2zRgiCpUGTZEAVxfyeYUed8urhfo/pgi1Ti84c4onetmHDXVA+bKmEn
iCJow1ASRC2Kn9UhzOEe97hHU9BL1N5ljbqLOo9sFv7u0+3b3/2mIFEQLNAC
ihEv7tbvTyBrxZsmnwLGLQD3mX0KGFFx+vWdwKRJPypv/WR9J7ijtvPQKEUj
mEZl7Rb9Gs9D9253EXq6ySiunrzgHPHst+z9YpKLO68h9rOf/ewj4R4oxNtx
h74dXD6xFonvRffU246rO05RO5AeLvZlX/ZljS3hfEix1OngFJ2LElFfz9Yi
pspZT8x6NK2BR4mHbDKLJ5+3RxiW6OYGKlER4xvLYYDze/q6EBNSxOCijeOb
0/OmXSIZkkpxDBlt2Dw5Xps378qOWJQOdkJE63GbGLsi0UFqfSFZDAi5DovJ
A23P7tRHgPVwq1SXecviAisVaCZxALC93bKZhTrVp7bjqv5TE431tte9Eh6x
jv2x8u573/v2a6cacZIcsA1HefrTn97uQRFFAld3aCfK21G/2XR2eBVtPpy9
Fd1b25DMTOWaRGxDLpsi3Jk9XPMVZQ+Zb+DmMXNMcRWbpaQ/sCMOuwBZAAS0
lWtQaso203S/6ShZknfh/JYtnujUNa7iTB3bcg1tFXLfqUMCl3PZvOC7FTMv
eX/jbgigpWpc1TcDK4IHcINQZVRSUGjexUlDfpl5KdpHoiI9A2W+lsgEz1q4
EqgCEwM8IfVC7nYf77wXPcgSYrSgJqYi3adwIgq8iAVbpSzUGSD867xbfS+j
jcqDdEluTmaHX0MVzq9sJC2M4yt7IumjkH7zRl7Vn4kbScYhTovjbNtD2rNr
tLb9/kyUIrriDfC+L5S8cx+dnFxMXm8Yfvc+UjwgnPMTe7u0sTWGEtnuZWLE
iJFJLpKZ94dG57c0ucc85jGNQKLLIwbflY65iIuICGdsyRiKVysRzZ/8yZ+c
iYv+xVLBcg82E1ei3bRsDmKU4v/x7dGYPqkPZ8WG9Gmzn+KafmdyVHw626/R
69e5JPDbctZgGdHJGqQoJPjtXeg+e1cThHFn2Ce8jP/lbn1o2ldSZF7xilcE
R+mafLm1FR3xTs+mceIylOT+2GZ/F4nM28F47JQ8G6SYEmVkmvxRdBi34wUv
eEG7VubFvB2mDkXWvC6sPH5xpGM6bNqaRnYC4rhMndyWw3Y05DlCHRP9K3/l
r0C1cH78DGawCBleIBiOUTb5dX1qnFr2iz/SVyBWdtmt+uCEMsDR/4sDxgj8
9m//9uZxwjqwJrMvqbvXvxaStFuYopCXdb/+9a9vkNtp2tkKpOK8o4aAXvmU
TcT3ZQtFQ0BQVKnVztyEAC7vt1IcmO28wg/q17hScYAyWs4B5niKJFuPYKZb
idPMkNhtLM2tpdLOrA9Bu7UQtSc87DdbN0kOtoQRmnVF4y5sXMRH7J5k6MDI
YizduNhvWxvvkvdTnvKUPtZ+U0mol56PAqSmB7yA4rtkghqjxso0eFYgfpHu
DF787WM+5mPa7SWyHt1vJY1hjATG7aCM5TDyCcRN76ZBDKHghEbGgCjtvz97
cX2/hsAhfIneRRQY7oTBd9JcEHhq8eUZpLz/Ugnxa5OnPYffUh1hqfyiW/dp
Qu7kvDz5yU8OSNg65KKhfvd3fzdcnHblzh/8wR+cRwVRG2GmAR3V6mTEjhKO
WhMHTWUQxuNdE/sy+qABR4+jAecat4VrRVQ9ifygxYf4yudn1vcl3qJFcPGJ
HS4HbcNyMarp0wQK0i1I+IAHPGC3bwbSpjHnRT8CSKGUAJetwP8At2tRYbTI
ybrQaBhyrb8pltMPp7+svNve9rZtI4qUAlwyDVYtj5VpmwKLAS66YtbhM74D
6DJQwlGpb3HgyoiI1sOaKnwLbH20Ysw2iRal6ARTI57YXK9+9aubQhsRlNXx
JkRs1V4ErhkNUaArNATJOfyu6feIB3AVQF6vxArsfri3fFYL8MJqff/MZz7z
mr5OCG4RhkgSBTnNC1tYm0lCxcS/X/e61312v0whRollhZAal554F6LEmRHI
y8gNx3MNoABFKk9Np7OD/TbV7Jj9l6QSROYkgDor43s3+sKATquA9OQpn65h
KRxq42+5C7OGbKjNQhzmJSMSehAzq2Trg9l2gj5yS/y/dNpAPDiBMZueZfZH
S+cJcYSSOYI/u6+eIRe1ljbEr3VyzH9Gv0Y5YB6IICW3If4c10vvT02KuTJu
RvCxKCDlr/7qr86CiE8juj4Fg22Q7TQ0xxyM4jn12CibTHNm+ZTOMoGdKkuw
LQfeQ8fASztAAg+yBTNPFpBdOLmEelO/ZvI9aX9m5qEon67tT0Me9Ou8+cAj
J3xOwkZNMCwK56IgLM/JouLmNLE/7YOKTdFj+qDbK31i29AWMwDMD8s+5wCY
yfoMYsGcaIBRhGUAmhCl8EQDjMiaASic7K0LHiCxyxMNoHYprCEDELPiUSca
IKU/4wySNnyiARKmHgdYC11vH0AqwzoerFny2wufOI7diC/V9t04oMKge28f
I9jcK/AyBmN6oJLtC4mGWIzuCDYwfU40QBgSz9yI0CdcxSpK9n3f930XAsrV
ACWDu95xaQMND0fe7AG+QSw1mbxQjkuFB5JvluXKkg14KSesMg6C4lSxpc0N
E6eox7eBsfVsz8Xn3Jw1FNhnN3ccFhPD9vdMU9JxSCyd6hhRkHCUwFmhwl36
HCw1iYU33HBDlpDEbVIvS6DCwxpJuckREcqn2ajqyJBr3G6SYftNo6Gv94gs
aMymvu84uylM0xQOUoPZcmPj/XnPe96Tn+BohpO3EWnhyTIsqfm5hhf1fOBz
sP5AuIRth/DZBkmOA9flzxidB9JnugpL3v8LXrPSnmI1Zk3GpiW4ZtGBMX5E
h7n++utnGCdnTPzoXh2eAEGxQy9lTcaJRp7FgVBgntY7lQPa40V3htFX7Vqp
vbNRxjXCC+Ueeozg6h3bd6can4Y3nsavFMcasT9UpQpD9MSGxqGKDGZNI4pX
Z3/N7I45jDFTyPwWSlLYS75uKy1b7cx11123uGW/xunKSEbTmRTapVWFZUnr
zK6gd4ZbaR49FnC6FcYkHMOsEjuJnS69gQGc3ZJbCFb0/jjIEA+zjSO3NOAQ
hQCtISjM2S2KSVTGebcua5zHJdabnaMDfdZnfVa7FtdxsorgkAyd4F9ZTXfo
w+Aukc6UUwiA6PttbZiIRLof+osdWfpjkncTWlFuiNo5VnsuZRsCzOGNawz7
xA1qwxcn28GygGaPhFH5l1mps3PnVLNGccVuvDZVMep7QXEMkAfJ6vbEaPjd
8/DcmiIO5YDFshPMTORHEkhozQNpsIBYdHenfnlNXIW3CA27JBElEZuk8qeU
NeW1o5ueFw9tyqK7Q78Gl8D7yU9+cr/vkoaXskm9EA38zV7E7c5q86KkCjoV
UWUqrEK3xKWl1stnLrJMhdnKPSWbdHtWcLaw7IRFomRJ6y/CWcRghraYDpZl
ZN8LXfFw3bHfk+xZREmrwqB4IIq/zxRjKwheVDPsGl4Oa4Qb7t2vqWM3XKHO
Ilu2JlyzZfEffO/3fu+8ZYrxXIPyXpGHc7rCoM7xKt2xX+OOx8eg/8T7puQu
LCGRctsCEsQyv16y0iX85vmMWRDAK/0O8sG2lftgpYWJ3m/fp9QJseVikifk
WgxvNo8x+lTOeZtBiac7969pyibixbsO5oV7ySbg54WOXJ0RXlgp2AnJhRda
s5Gtd+vWXNQyCjEtxjisT+a8SdJmcB92vpmVarWe1/6Lv/iLM7PObo1eTeIa
Pj7sYQ+bpVEKpAUEJUP6f/GbbAx/mo2QJgAd/Rxqr7wMq/i3qO3JNoaDe9Iv
LhtzGNsrER4ygHYJ22Oz4DZxw/Jq14yiK5E4jG9gS1eEupbNIkHwBqUP2SyJ
cDYB9wsd8fbYZ8GCO27erHgkaGSduueqo5QiE2ThAMNGyVMyigKEO3cIJwuX
XuWVVCgFKtmkIC+US+yohFk2idIX6uGysoCeYDJvUuIetQXn2KTwTJZnlEBe
WUpgXqStTeBKhRZo3G8e/vCHz09MvjjH2LTYyQMDlOAGrSRihf3zrPTS7nkM
bI2YkJmSbaMzUVN8Co1ldUTMMdsWGqNzcpC7TM4JFvk/p6gXcg37K2pfz1DD
/bJ1BJBbDQMC+fyQhzxk3ro8CteDm/5ffCdbByCYCKqHoxbLi0vHWt86uQnb
ty7ibeVdPjvjC987rTdKT+qvwMNnlfZ5IvaNz0hMjk2Tor6+bdk1dRAmPOUJ
KQ7fnTm8mtfwI/RJERh3lwYNTykPEW5kYYpacx/Dk/dpOWg0eFm072F3pWy5
hBGn4MrPIQIFNO0nPHaOFa/ymkty9yywqaqQebmaycHsfekzbJT24Ac/OLuJ
LOSmeAL2IAC6LmpT74ZJ4W+UVvdrarPO0KVDbt/x5HsI4scmJiV6nG4uu8BN
u/e56VkJNQpyYBv+X9di1vNu4KbdJs5mR400ZtRNG5NmQckwCgsRTMW7WU7p
1FGa9d36bSaBdmil3mSWydiswolsNQkR63HQY+JmnPKYp+1PZW/aOET1TDWV
DbKHnOZFYtNW33JW4noeWNteyljXbNs1ghLbIoe9EsGQVuYFs1iKJbuz1VhK
tG6v0D/TdsyeZtpI69++1arxIhhiQGANKl2hfW1CYiTwx8DAUTZ4OCefYnfU
zMYu4R3njzf/OGQR8i/OntvwJqF1US6rjCcV33rmM58Z6g0djQjCRMpabtcn
yJqA9Gu2IAZK4eUTMFlxj8Vk9c7NbKAmq5eVikSDySVTp8leOmdskEBp4oIP
x6nFz4KNkV4wQ2zdbFaNVg7m1Dss1T6ihvvd735h6zgktidlOnZYsb3tZUsY
EsIUYxFUkd9luZw1pztkLDPNbMrQfFkHLPHCLFTimO00nOQ7al8rilsczZkJ
sDfqL1PWA4UqqZWUjELurJBzJVWFaIEorqffsX8NIcJ8pJwLQRUOx78CLqgf
i6Z3qYaMcyTpbYtuqhPu+Z2keWDxVL8tbnGMzypApTaYG5I2IpWLYOGlDFDH
8rXiQ8d4UFM0YWkJlYzuOdfpvSFI93QZM9/nSfxyVK+D4b5UkbVrOz5ujlDG
XEklJU9cUs9SDq8xxaXDvPB7q93xN4DEjvLqNy3evXndm72u63nZK+1jZQjz
eU67eqpZ/ax1b8jA5IYgfIbvfOc7w++wTaKgrMT65O/phoVuQxskKpYqK1CQ
mTVJaT+gmnerK1NMBgng+n296z5/J+2TMu9XO/23Q+rBHPfjkfa8Bz3oQQU1
97UR5t9Te6jm9duURWAjOI+OZjvt715jfJIj2BSFAwnmYmiiWbqV7bS/p5uG
QxUhTM2Ie9b/ZVf7P/fcoy9kp5Lspjx0fad0a8tOkWg4KlaPi9KFogvMrrDJ
sc1BJPlst/093Xg5bkgb5uQlaEhtEFM3XI+rdZYKtNcAujsXtYzbRcM2yOSP
9XeSWP0aYyM/H9I55h1DcpLgNKhoZde1Y1xyuCpfDo7KVnnWs56VHRuaT8xi
iSxnby8HRZNuBumK89Q1fw/aZ7wFN0pzufr/Th/MMMx0jOynf/qns0aGjAlJ
ir6y/Z2iQD2aO+ejrG1w8MZtXLOlf9ZN/u63W7F3AhB1y1U5bJVKU4IAXdWd
B+3vbquxjNs/SQ72jEHgjrP9PnhHxULgu30EaOw66kDY/i3cbJW3HTWyLWdO
hJOQehNOxpjGxS2aLPgG13a7WDBjTtkSKJ3JXtZUMCpa3iCTgk3UxTHr/1gX
VdT/hYRRV1Fk9gif1hqBR/aq9vdoRWUyEo7ZI7RAl7z66qvrpukvUwP+kYhl
CZ7quEYCSnFz00H7u9s8yCT6uD0cMDRdd5zt98EiCs0111yz2O0jsB3S5Ycn
lc1x29ve9rDRxKSmn2x7okPrf7Rpe5KixFCxRekM6t+iw4ACerArIWNUQUql
RGvb+JrNkEweR6+875+mJ8JcWC7HQxoxPCgFqyW17fnfmrJzMIyVLN7Ynmbb
5WEf/1TTs3LdinAVNqXPc2+FvXka3sXXN2vogabgaSySdWjKlk8JEwZoS7EW
GARbqFqrENp+k2mu+y31hu84pnhqXJnopb/HHSHuA+IkL7xmMJDEIpi37sv2
aKo9saYcSqDK/+kbc87ZFFalpvkUXy+IoS5a8m7/O2gZXS29ySanj02U73Gz
8F9AXy7T+e+4soognli0gYuUbwJiRdcBMTRA30wv3wnV8ywCY1J5xBFSpPCw
hz0sti/bMQGoEkdBIho4c2uKTkx0DXrKJpbLVSuJRD9WsuagXcsrmXH1mEA2
zvtp0Okn7GD8yssGsVFKMd7pglGJVe++1R0WNwF82q94IP8+C/M+HTxomTMS
D+PB8a89X7VE3Gt6C+yELnP+3UFTwFI05s2gfPvb375NSW9Y2rA9qoaw5Pr2
Ke8MI6RGdwtuFhFxHvPRhMnwHnRgzpVrKDm/vW1fLwjTOll7OIksSKnOdMXg
PJHNCtSmc9qZM00/k+9pPKEpzDmfe7UsOokywG8fy7gsxDgwjtmYaNbIPhtD
YRR7jnHMOKMWlw0xswYLDAvAIkrcLRJ6SksetI0HmI0xqG/bC5egBJ96/DRv
e9vbbrJFq8T0VdHL4x73uE7P+03wYNa2WkicFRTXL3VCdDrx3tLy5i1DqbFs
btfxTASWtyFePLpZbV9EjpAIEarkKzE1SrnHMsi9aEruU0oUu55JAihJq6Nl
PfKRjzzHVhEDlEAJPB/br6WRghT8FGLQNvy8p0QmoGvuqbbzwoWtjV1dMNou
VfBYtMmPftINiWSl6vdGOotkNbLA8oxUcQadvJMWBUp4RhhgNolJfru+XnQq
Mo0mfv/3fz9WcKxXoboEaOLLSXMqG1CbF3uVG1HMPi8If8ympNiCeUYE0jA+
pl+LB7xwf64eS3yKkVJyYb3WCT85mZNVPHETtKNTgEaqFvBsuIWPI+YyrOJL
Swkv3xnmK7CJGblW1LMJ3mHx5C8LGVYXhLLN6fEmEyQ0FWWkaG7ODU3rMeZR
4WMiJWu5lYEvNRp8JbYEvvFMQ/qUutFirYMhiPcwiUpgrPtpsamTdVZUIXE8
nFeViljIyL1dE4mOXA2V6KyW+xJKc/TBJkjH1Z3UCNeC1pQFEkw2T8CcvAyR
6twXdzJPbWAM9HEpl5qcpj9s8N6tr8uAVZNOFsleJ9DsZggzsqH2Y1aZ+YF4
sAnuqI6F3NthHnasmXNyGnxOhC1wC0mPfVU461xTQBSYx0mlAir35cCCVXLC
7twrDnxTcTHaAfktccQ7KeUu6K7zCX4gop59AF/BM+6YYF6iAWXNzrwEqTCd
jPnmN785+4AmkSlmkH1IEpeKgJB4UpMpRmBNL+2Z/ryO2QoUlTZI3ra5TMvt
WzG0OO967NTbCE9Lg1u18SGDuKh1Xw64oCO8kBEesRjFiSnlReu2fJrkHftz
6MJM6JBW2RHztkBn6SvF3mYdJBF5jgICaqVXT3MAYp9uN6BZT8OaRTEtEr/A
3r0ooYXDWUoaEysqyu6FU3HG1HKu6JdZ7S6xgwuJEsxPMFAORCaXBK9VSG6V
cqirTUIoOK1d69rlyXK7FBVm50AliH9056YG95H/0mRTak9Vn33shzMjwO0x
2ABdP8tsXLT0PAb+Txt3duZrpkE3IoL5U8WoaQHol3wiIibU323RJDxOJfft
+jj4HkchmASBYDfhAAG8OPvHXJO0/ZRrskmO12an3Y/hevbDEXYDN+DxPftS
k1CURub6gmVbkxE4Nu8m711bpUEctIhsXvzyllW8dfv2hoBK35zlkvCU0C3+
FdMIASWY2pUQVnM0YG2oKErAT3XlxEiqF/ZFZ6d8FQtNn6Ek19LcYnSmTyN5
etCv8VZn1rfp2JNEGrvEtRuR8PznP3+28ZJTJdXzMY95TB6xKWS3poRd0lE5
Dj7OTcY5z2xkQEn+7J1JU82Trkt/CDWk2JLL34udT40y8VmJPmiBHZjMk4dN
YWG13SfbOmgYhTq9kadP01/PBGwZy3cbrpGp8qtzjUKd2NBt+/zpP+wu8wfQ
4Cmu1KqTdY7abR4fxtHqp5PEw15L+533l8smftuw24gGb/pf2a/H5bmEqpKD
bdD4vDGSrPzufWi+OzHUiKsVVU2lhwlGcomkONqO1XchNJ7/3i5lXgVFMY86
u3WLRGMNqhLxl/s1no/eVXbRzyfi8ZlUtQywia3UHqYZAfxXQYI5Qz9mAGYr
Xy8SAtnBXN1qoiRzZBImnKzFE3OZ0sG7ZiuKX29PpE/T6LF6xzSJZgp4Kd9p
/jqeBnb11kFTP1S0cZNBWdylIm0voEh+H8/upjKUAt72AeK7kkSWAdbqzU5W
wiFPLAMgpwRvTzwAR/cF1ZZlADHFC6qkCUfRnX/TAOcE4nEDnHgbk12jneB6
YZZIQ6kz2weIkaytVgZYK6vdPkAMYlz1ggqisgtFaxdWW5YBikhvXkEUe+a8
BkivPTqcEBslkfOCt73E0rqHRgXEdO2Sxm0ICrd7q/yIeyuJA9htDpqhENx4
440xK6PCyQqLtxn34GaY7EB/p04BOTbqN3/zN/f6lyidueKHCW2xcskbAqAY
bJ6EoYvEcsIk24QkDAxSdH0eADvVzA830i7Re2pBaOQl7xKrDeA0cp8Ad+ns
jqfChFWwHqye3zJD0RjyvbjY1Chv2YTIkJrU3iUOFunnEg1klJWpXviKr/iK
+ZqpczkXVPtvD+a0rLxplGWZxRJM7xNvMrKr+Ff0r6n1/FgS1fTkosiV6pwM
Mt4PDnYVK772a7crm0gYg6whs7hdaqePKa0bkwOzM9nu1Jb59PCte4hXI/4e
OG+OzFSMv+Md71jfQ0mh0x5e02hlbP4c887SvFjb/p/UShYBlkjJTlQ2iaVo
jsOHM8c9hfFTdsDljQ0l/9tw8r78yzdA0ntF6/VTaXJCs5GBGmdNY13Weo26
RmmnvPMYQgEKfNy5OUEDiooIxGYsrS57rEaPZRo0ALAyNbPHkJjVFcTl3qFK
8nhE92UJQm7fp6vgK17xik10WLp7nBoYBnvENgQf8RmOPeTB4cHPUz+/VZ8M
jc/PBP9QAGSjPEl7DiXxFcBXbEp8jX4cs5mCizJ9V3gc5YmO6xJcnk/EWkey
NP9REmM1FOayopOWFaRSqhcXpVxwxL/qwn52vo916wWW7kn6K7Xe8A996ENn
BoAC2Ehf8iVfMh+kwSsgvS6vpGEzIVERxUdSqNS25KZQEN2zOk/oorn4N6ck
iA2w2JNEESsdMtfuhFATY5NxEUKNQ0OlRXR0w+BJzIKky9g1m1vk+qgBRVyi
2daqgiLJDp8aFU84EMrkocjJjhJr1ERkoaQfddKpHenqjIx6u4T24mJIeU38
2xBgPAciR7f4bSyQUoxCGx6DNjKEfXSb/d5s+AWJUFXyw0sMrCORDPkgUWqE
nakXn3b83LgWloIF1MbFbhYLN2W6fJFDHoop2AdCfu4DP3XM676S2Tkx+jrj
d40vWSpnAJRqrR4mbxpiMZOdYZm2FdOo/YlDDFIE5LXzmUgK6jXqXXemr6ru
duccdelcIwJhkp5UVnCzsnb7MQVhqMzSjEHVwPUm03a6llAAkkkWDoyQTbs6
rPNWLVyN0ZqHV+wOTiUvNmv6rHmO7Ugj0jip4uiLHCeyIARvLU/mtqDbQQO3
RICMgmeXkrKORiIQl/Sf2AqyGEnBC/jxR3/0R+kPl6+xFazGz6lfcWkWrGa3
DORI166aSbS1lKT3XObsKsnZGxJ1xe7sTLd0Qy8QkiSH8cWGRkgOAstTU8tK
mSgIjbgU2XQOXEp2hoMKsud5suYJIy5FXpXsniA4dYxEaEiIGhW1ji4sgu+V
EqpCpbGsjWqly2CwigsKlFcn0k79x2QB5hXI91DHbB6vyPRwbm7aj7RpDijT
cq5Gnp8jqbQB34ZV+/O+e/OGaVyzrjPxIV/S7x8O0Gjw0iR0t+NTAJG3sXGq
dB7RWzb7khx5IeRAKH0E2fIJmKRVnfSMaASpQeSrTuesjB/MURHge1BvB7RO
6jKtJSC4/PyxKaGpcSUo3kp9+qwN2FT6R7Apdjb5T8uLk8LTU7SR+pAi8zwB
g8WIl7MwmTyBKkDHw8koh/jJqqD0sN2HU+SsrdCD7MfRAx37hBrRKS7DJky+
yiHbjEx7DbrRvWsz0yEz6oYWdMEjsQicjBIMW/G/4JHv8GWeA1QUNUW+Bh5c
tLsYxZ7Mo86Xbt2XxFsJyhz2yS4othwDJc0ASINiW2kZlqAHv260cDkVK9I6
mMt+8FOCB/KVynDL80emJNsg0hCutCyMUx/8kTXF1CxyuqRPliGmlESvE69M
fgyHpr24BKJco8CgDC7ga4dZ04tIvSHnLmeU0h2jrVMkbIyfpP9S2VkBTwJX
0k6DS8XNsuZorMdH3q/sAw3JeY2JUD4LQYNTISUZdjkOazxcmkBCC/MeHM7s
JTwA80S8xd/nPYFekiDUJsQ5T8Z16rxJG7PYqdjQq1/96mBlUgSIjUK7nJZF
GWMTw6FC+CBHorUC3tFmE5VQg5f7oquMSJSj3cYTfKM/ad2+riuRsHOpx8Hs
FeYJiTekyDUjRQKcC39oPOn2WppYbk0Zkmhe8Ie4Q9Ssvtgmc3X3Cn/Y2Bt4
UY4KPDf+iAKxxUL9LO6i1TN9xlAqQcq73vWuQSHxzHSr8Atfv/SlL83s2H8J
IyTuXlpqmC27AJBjo8Vap4TGGxBuihHbFNhIcYR5KeRjuZMNsQ+TF8T8wYui
3MfSl4lZzDEWL9+E+ka7VJpD3IPw3dNkEKanYs0gNjRHigcmVDZimQVhS2Mf
9wRJ1AMdo0Vd1oe2zxA6BbtC+RkmJwTySo4CDytaLlfWE+JOQH1gUUIq0EnC
R7aB/41EJlu8IrVZU9lJQWLXsHnyxv/LRs0MIoWPz8QKnnEN8L7gzjkg7n73
u9+ZYdrpVlnMJgewJ7tt6lBPNzk9Z296Rcnnvg4rGLtT5MhKEgiV5dgi3THC
QqB47zezmDLtDpsojp0HBEAEYwVwoiMRJFnlNX0H/SbBaxxsVTy3N7e2Y/TV
pidBPx2SRm1xQLekiuS9OqlllR4SwymZ6cqINqHanBY5TTTdkbwdThNcYW/R
gzTAX+eVQtBBNdq7fYMbZbWkiwjWyemQF97vpzm5OZHxFXavZE4i5Cxg9oQu
ZJkCUrUHXLibce2qvjgORtlHxAoEdwpIBGIkEuUoJwvgG2QNDKpdTbUjPZ1/
BtuxRhkN2RbIlCZFtAvdlq7tOwouNArwtQgGUEmD/BQ+MXntlCdKeLxNn4nQ
b5pblZjLTMSNEqEhijW8uaJ/Z7cixX2vs3lQTt5OsoLLsku2Q+J2fpLOS8Vv
j4kNXD5cjqOnHhifU/p1pVCb/YrQOUFDFuQeIZMs62Lci6BLpHrSUYIK0MSL
isrPU4y+UIHH8mzbVNwsrtzkico98Yol5fTKzc6mED/qS9FJUGSMVKZaE72k
Vv5g+G3G2xuu4fjayCQLy/hHftuWcbv+LSkEmyTCZ2QsDqI6CiE9w6xJ6sqq
2fbEungWIfgY7YZemGzZxQkqrGWKxouY7JvVed8HDaNiK6bzXik9UWJsVGT+
Qx/60DAjct7+ukwo+bd3opqlCSlEgNs/BIech9y7nPueTq/siuJtJ8vg0lsw
4UC5HnFBFKvNYkXskArjfTx3SXwGwRbosmdc0P24xkWoENkQwxg89YQtNiad
Ca/wd5UWkJ8QmVxsfkK6MydP1siPU+kj/Ro9B0HKwtwcqRtXSIxLfNxpGbVT
BYWl8ORDKq45oRq6+6m1pwpMx62BoN1vlKlP1NSBinbi037/m2v+JY+f9axn
1bir+/vZ7TMfp5u6b1KW/Z3q3mwap2Tu81kyUWkMdc3f6VAcc5oUrHrSRf1B
g1KwSOo/bMsCdvoyZDobOG8W7pve9Kaz/Ty+kaQzTE7rcsdBvw/WcMZNubL1
Ke7FMUX/un5NqA0XVgH4pK3bF21L39Udi590jf3GAMGCHkJuqOFa3zttYLJ3
lG/301cO2t/pvCzizKf9/pecZdCGcEsq1LjT/Sx3ODvuXfJyzSp6UJotys7J
fTR0goErY6f93W9KjjmR48Riic2S49OzMLF1uAtmZA0NGHutrnd3lk0+nenX
IFUGCM+mpVugOw793e8z5sDh9VC3tN9zvBL987TDfk04PoM+dCB092EvRUmR
GWNQIG1oBjt7Y/Bg2sCDNuSAN83f/KEPfegOG1ElaqMY1vjqlbLtOTvQOhgZ
hYc3PxGqnkzQPkVuDKg/IvRYJ5hFEMl0rMk55u9EwbwyuEqAMp64lixzlOS+
qb0lXW71W9dOt79Hk6uyoQSp57qjNSvsR2JJ7PJmLTD+BdG4fUuB3W+O/glx
GaxTWdp0Ld0Jx+1NsK1n42QlXGrUubIHCz/93Z3bMLkjdrHZsD7Zjd5Uw1LY
zrSfHMz6fb4m5EqPOd1HTJLE9Mnf/XYtt5MD3OKbBWJqTO1OvIvFXZP2ygBj
n1KpI7VoqnIgeTYLC5MqSfj1szEWPzIAZghUBzCwBu1Jyr6s/d2d64RGwLA1
RSkYTd5M8rrvTPtJq3tvcjJfC2LXLaf7iLzg9F/59c3wKsAwfuh7bu99j48B
TFIg8ANMSO01v5tGjgQRt0DpPGk5AsvSautFL3pRCA7NpATFGzstsReaiI9h
5IxwMEWyk/Z0SctGkMUFT3k2/Z/VE2ZBxUvoNb1dauvSJD+VwgxZLExGUTRx
Q2ALoiEciJhwesyn2MLiRP7ZK+fVqiJqKOWwu7Dm5BraTe6LVIpLVcbiJN4u
b4IwORDUfBNJ1RXvoRdJwCaxMb5P8g8nFNX32s4RqMwxbbxljpCE+BVAIC2E
DFgI3Xa5T9OKBEjMJ74I8yAs+mHLs2U6trDyTkMA/byTHo7i0gyQkx4qbjKm
ilAScjRFuVrUUTHTvl/RG3E5vnBfSTTir0j9DXcfzGFgpXyTCMHe3I/MpE9t
Tkm9su8SrYY2QGGVnkpL46fuR3Gth0tX27g6uEbj1KC/uG78CLFiEkPRACKH
3qhfozAoT8xviQlK6SptZjqXHvOEasWxcu5FcrKQrpd1i13AmIJ6kq5ReurD
mSocInft33lacidY9ezl9VQLm1xGQkIIid56R9vhRYIDwZNELnKPPce7Vz1X
J2uABouusS/dvEK88Srn910NbLZKvG1+A7+Ws5a02QNy2Bg6QytdLS3aFjFZ
tm1tnJWPeMQj5u1JuzTZO9nabDddPw1R4CUKAsD6TRhBstAFR2J1474AOGKB
nbZw581mwamdo7vfo19DNa6J6K07ubx/5md+5pLObxSq4iFsX2mVKtfCwtMv
F7+FIiDmHlo9CW6PdP1J31e5ln6HX8ynT55qSiqzlRT1c3jMuiXGh0O/qB/g
UlraMTuXKEoSMlQ5burrcUV/MEsPMcF+8SeiPW7EAkE2Ks0v5R1lo6Ahdgfa
xQayUcRgnpzZ0ALoPdMhzKuNStvDXAv2Sx9IeQJoDw0NTeVI4Nfj2R0f/OAH
o5eCIBcTYy8rSCBgVSG7N6dBy+Asss+tSQNYObD3mhB0Dd2V8r25V0Xw0k1u
5rZd9wYB/i370sacwK4mzKVELEr+D5wdH+nek5FKyDIQLOAnawkjg0N4ZnoV
/cIv/MK0D6fn9o2kGvbrJQHLKL1j82I91KV2/m59+BQh4glpUFD0PG6HS9yR
BaTIerLAXJfLVcapDES3Sj9JRznyD/2M5auF6dmWRFwlM495MkKVJlNcYNu2
TMIgpxyVPI6Rm/zdVbubwwb9iGscBpKB6QpAU2Vm2mZ7q5v56P4oZMW0O7I9
+zMSBoaCOZFJdjT5X97RSnCQn//5n49nMKEKTpy79tkmuwNTB9gxOWl9b3CU
0rYv7zNCxJTBdIteUegUE0a5vk+vg2c84xkpkKZccNBPypu/Z1Le1F7g46de
7k3x4twkcHdO/itudUz7l+AQLtCjvzOrT6CJbBu17hxXVRuW/YxaxZFEFUs5
FWfDmDRgn3XjyD7Sr6jRfR+DimJ6kPzjP/7jZ3d9nMeSiej9HvFrv/ZrGT3k
hMbjpLMXEH10V3Ue1T7l4MHsndB5chZZTAy5qVMZ6B82TB5fFDJKhiZ7MSbi
XzfK7Tp0yFHjgwAlN/xLtD+KCeVcIERwKPXneNOU/zfNiSJMdGtKsX07yRN3
jtsZPW/cTiwhEYthO0lW9JFXzkpadfWf2tQkZ9ILHT3ykY+MBYTczFftfZdg
sxLFRkscwSv5Kwp2ErWCReBh/2qW6VGTI5pVhYY8O6bMw+WwREruuiTDmd/7
3vcmWML3mHjm05/+9L1h8sPBN63PcsiS0kqBUZoT0KY79ypWdjCXVITHoJoh
S4K7lwR517vedYyrOfYw29AAIjYUPzSGudnfEsphs3Eg6X2bfSSA+SLFV8fD
RTG3zJMCDuH4nnOc8HXXXReyQweom5ZvFp5ce5mt5CcSQYXaoJZ2UBrNJBIR
VRBql7wJkDFruW+JQsiFzZYyFJg9eUU/IgPWt1QUq/hflBNCn19FMnWAzZon
ZjTpyT7mdIGxLXfyR8bUO8yCD4lrpN5BxLTDKDNua//UzS6HZI0um9qwPKLB
qIcZ3YdxMySoV1InDIF0OdqIencOyC0HhYkY5xuTQpP7xpqUrF9c0yYXPsz3
jR0ib9W3DjzTaYplOjVHnb7jIYy17u0Q22xrVAzhLMyTCk5P5TH4rD6HkRlf
1n+HWGjR8TYmXRlTCQPFLMmEvHiKkQgrP1140AIyyit+coG5nWFtMNWzMCq/
D3zod7SnGWY73OSLowGJzcW4OfXcNnCe8InVY9dtB1HmqK9sf6YV0dYLgmeM
Bj3DcCyl1plDTwL3eM4v+kSbximku81wGbAEsWuDo/xYO07KCLxrR0FMPGdY
eFPb6ifr6Xxd70ltMEqKD0ZCY7TZ1Xkjh7POg73wwS26qW+d2THWDsrF+FJw
HepO4ndkgndOC6BvecG0wtS6VyeyveaRiKL0zne+82QxS8k8Tx1IKfeljwmU
kGnO6Ts6lAa45MRwt6bROa5rfnMm535LaEoTG3vD6xH1nXnMl0jjIIDwzTKd
k2YKN+lGDHkxIawxOd14ndPZ06HKz0FVit7JQDBWNK8tLU4JiBJ3dNAUEYnH
8mbfZSIYGHA06LI/DJDS/9Fh5ZpCyd3+d4w5bK983zZ7WkPJ4+1FrKN7dL2U
mKlT09s8QLz8ZGISUGqQ9THsde3r9jFI7uSmbhgDGpWc2D4GTgZ5NowxWJTb
x2B0iWpuGeNYgI5nAcLSDWPEo/eWt7xl+xhIMBJgAzywnHPuCxyKQL3Qtdjb
JGBsGKOTx/YxxoS6Cx1DeknSVc93jCB6tMctdL59EiRgDlU/30lEU6LOyP8W
qry4DwDp2AF93Inepzb28kFkq5FtNJBoRXyDEg04tHfa36mYII+LtMNbem7r
XHQ+hle9ei/e/MQwRLGAaEQssUSsMJKKlnOEMKo1C15pZbUMueduQLNjyS59
Izl2o2xxEK1CtxMapwytoDPZAmeOlLUgKWQBQ9KcR4Fp6VcJtEdMTGuc/sr3
IkxH4FglO4BGSnUjgUpbHVOpWTklXRY5FoVGkRf/UEp5crC3OE7JwJQsUB7T
AyUHu3kaeEdtYE6wCiki7jUjMIA1zxwAPLR7GNuU91LnxRdsBToeQ0Mej3/Z
CvTL2/I4Jiw550dTRfB4IszD40kyN7YPlowNYe9y0YJnVBQks4J+s/WazYQa
7AwVME02GScx7uAhBwq/HWU+aac5kJ5qhHUx3uO3edOb3jQpqKfm0+QWkzOl
OXv5Mq34QQ96UHZBnJoTPB24mJo+O79h3AXfcQjWMNkF/C7ZMVF8IDn/vpQ4
T4XkCX8jOHogrfzlL3/5FX0G9CGqrbefClmCz6rF7nRquCA1WNN3lfVnWJl6
VDHq6U/91E+FnNEOsADn7FrcayoU0wpJF7Q3m3zrDmp14Umdxsii2hXWJFki
jlpt4ROtSLvi+EhohSxiQ3zoQx/a7c4UsVSgpVGFhQI5ZiGNJKScjGbBhbHe
vc+kPQLCFSLmJwnn8lCleDbObS13Rid2PzN2vha3IVh/4xomYHgl8oIJMW1H
8kZ10hmheBz4UgFWJyUezLVGmFC8kbU5l/cheOj1eYiA93Oa3DhEUgeSko7a
3ve+9+Vr9kbKflPqWfZKJilQFxj5NX5EX+dYCUoLA3I35VwUrVg2o02qF3Ne
9GJyFLfWu6PjNUedDehDPrk0du+0XFx/rIammGNGxXcXYfs8qplClHiMCqWX
zjqPl3Y4dIPU3NM5OOBxClOL+zX8nnskbs+6NuHQ6abigxPyT6MMrmdGpxWL
NK43EsTX1/GoqxMTHl2WuqfZMrA9kTQpcc5ZUQpCvHAcUqgM+AAJg7HptQ+L
9fr9KQXKtTvMbTn7cWvNUGdSae+TRCzESUJZsVdOwUPvXrh5cJMSSDpQJmmv
PhNAQfO4dEg+G6sicluv6am5ajdzZ6OvOy46Bi9n9TNyo7b34o6ILsOEVDSt
WpZNfTlcE5pMgprJxkeAHmnnFsLGxHZvuOGGzIwx1F3LM3LmqNZClLk5BMRO
kApL8NmWsn6VfUQ7EOCK9mCLISW2ASFTavLc5z53sR7fWWHVUZdTQhBUNmxo
SmvE8y6b44RQDVqRuhQYVI4gvERkLL1HlueQa3GLLDfHM4n8Bc3iN10lCk2F
+x658pkczFUrHsOJA+1qA8OX0sEM7/FK2Kkwdh4iPS6QKEJBBCVe81SIi54m
Ot+EZHFMm0OKQ+VJEb6xUwtFw7nWBF9wjEiOV4jE0iEumxQ/tD7FmbbMSZsb
iYVx10YkBI52UrccQD/xiU9sw6zck1MQlFzAgVKgVppAiITnpF+eyyLSNTnv
4muzz+I4JmVlAFsa93TrxUdOkybcUgniVgCnWWTh0h/GLh4x3YnyNKyox4xl
PxBRVGSdccGo3AeGZqWqJlHI1G7h3GlMUlMNRiWthNMNmaeUzDHKmV1qB5E+
nPf/wUvNTLBYO7wNo1aSxjoy5zTzVhIalFrTwGMrwvbkp5QkDimrdnWn9g1R
DNEgwPNTUgBlOW9DpRR9r6B5diaeVExh/amNwIKobOhX9DUsyg4kvEcQksme
J/XpeBZ1ND/tVa961UGfAlwQRWI3YcyGRGvB7ByIKLKWDU8QnD4XF2xx2KzU
MPi2/n3bcAlTRkh6tmfo5C/IGoypU+ZxcAnDcgkA8PNUrUyHd01DpGKW9RKH
71DJmKY9x59RHVxK7FsT2HVcIsyPwaVk/sF7fDwRdxZVaXKZR2rJV6eS7zXA
4kqUmRL9QadNEi+ltKuDKi9qAhcj5EXxyuol6MddytaFcjW7qztQU4gl3mgt
9g9KKIsKRuWeTVzKI8vmCUZBYgRBDHgllBMHSpJ37Fm2vWcpHMGooW46x6lr
h70No1ia6G5Vwb7CKFw/uXevf/3rg1HUWtIYwsKouFo3YRSBE3oYdjLkcHw/
iGAUDrlYHG1JkN5JU078Roya3AaXNrM2yqcX7USg3SuthLnhvEYXJ+0lKJbK
E+9aayJFPFmGF1Ty5Pvc5z6zFpFDj1dNzA9ntSDlGNGN1QdnZePJL0FlXA0n
Xx2WcnpuW5IXDgd1Q/+bFC19Mad8tjPNW0eZ40CgPVCm0iIj8ywsyNRRAiLD
DGkwQZDVlFat6osxzwiXcP6IcBg4A0Y5TRAu02Ygxzavjc/jEWmCLzYpftNR
HKa5EzJKXfDjH//4bAhqIaE0Gd+uYAENcAAPdpZAuoHL6NqKbwdt9qYqAyN+
noJIVpJKdYQef0/OyQ3fSA2wQqfgGgaRLEtvuJakuqiW7Ab/R5Y1fvwaPE4w
nl7Peo6fA+uqvQhHC50xmWQuRIVe9Y7bn4/CyCy26F8Tol0xI1OatOWwSg5B
18wspTARt64xb5M7UzsQ5Eks25FsQbLkn23S4rlIgiGinWDDaICsVlLjZWvE
iLvZ1WaTFuBj2kZsw2QSdIAla8Eu8a4AdZHM9qJ/kImHuSu4WMoxnquL+hbY
mnR244ZaqVcHs0FIKfVWTPaGN7whGhl3HQWcihvDkO6HF5OoyecDYxYG+BCD
2iuNJ0DYHt/ZKqmChQXpGsqPkoaOaUNZAiaMlEcziSelvm5Ss2YT5qpZ6R0F
oSWmvpa5nZINn6llQS02Cw3R93Yl7o8bb7wxVf7IzOXYq2O1SCr646NPYRve
FkUU2/TbuD9iiqdBY6TLqhfZ2TmzmBcG1nPKQlMKsVd0ehXHm30NyWgwI3KV
fVMjxUuOUYftzHrVbjMa2c3TTUsR4amJ7FiFFusKzMRPpIVGBo33hU+B63ro
mW+iZ1fOZQ24NxtnOtlzOUv1WHzPGtDAvHuPotGSTSyq0C/kypWjVtHlnF1m
x1ddEQ5mxUOebpqUFTNJmiheFNPBezpxevpp/PaAiWkY4gMf+EBGho9ogAkZ
J1OpGRP+XDorWvydaSJA7CePweTp4dLHsSX2k8/OdNieGhABclxwvTZvrFGm
GK6idFPeOccPo5FerhNMXPOsM9d7nUwUMLRATSCi4pdHaiBnfSUjk1xG+IEI
gJFEYzwBubHz7VXpkvkJ3Sq9t/hsZXNs9teOQfUUpB4f83xwnz2IdwqdvUwQ
Ny2jc60jcvu0+fljjqoIkAKVHX/3ugM1YaHlMpVeN+Hi2Rr+yYxx0P4eNpkC
aDLXbIUEG3g0VfTpTXPYnMe8Ta7bXmOgbd1UM3Z8YhOZrMjyyJwXUzmLcYw8
9b7Zbzwrc/Ov/gQJzmELfYxGusy5NveWpH66jzo2Yv6azVuzOfAa8AqB0iH4
zJs2UQ8hJgXV8vZ9ad0jh4h5PwCZOy4jHax88DPD967RFs2lWfe71zAsjVN9
FyXJmhFRyx1EpIqWyYsrGgkrJMuPTPqiNuYkhn1h1pYvhhSdDtPvP4pbqs9z
OlrXNZ9O9WvpKbUC7e7cucIZLpvL5ye4nm0roc7mjSPTnLAlFfEyUV13IEUA
i1DSdXoALMOnDzP1ul3cYk5YhJ0WhtHAMIm7/k0lLTUdzftMgPuOiWk8kpNy
kqIblgYVW2g75ZSiMVlalEIae+az09IKp4CiZ/T3ThPvZ9tHDM00vKlTpAQ+
aQgpr/BG0CoBeOzDd6aJ7/tNPWS/Hy3EPkCrPp3q19DROhUQqWQ/ZC753rzP
dTnNGQSuSzc6bGr/5L8Aep7wvXYewHRNRE2BxVRmMbmwu3BehKfiULbXLHwv
23mnxbU2laxPvTsYmZ7n/ZCHPKRQYBof52cp+HRRv2avcQBOnv1+rZ901JFt
EyKOiVWRiYVUYww1t4assC2WrSLddD7AYNZz00btJCoP9uW3tNfkavqchjbP
69ew2l5TOCNZP7quFV2eap3XJsQjpmWg7/WKEtdoz0zZw27Q9jazR9aRolCj
N9/7Tk8MlOiwvht8YEo5GRIeyGw/0wcnPLERn872a+JfJCiTcL9fi0fj+N0Y
z3uA/P1U96ZCFZ0mQzaN3MZTswV5koFFMePpLRKMaqQkN9zYm9+gSO7WfTL4
EKcQn6I3+Pm3C/82OyZYaVdzNjRlrLczmg8oQLUxhHBLHPkd73hHFFGzYMho
jBk7A7OMiVryrrWkWxw9V/z2fROoA2FLWMmUqzxlNTEUc//t+uOoGd1d2OG0
GeCrWlZztm7ORZ9f/OIXz1kL8CcB7LlA5NJG/4QCHmDP8EYpGmlzCawEjQRM
5jvtksoFjXOyxnBeREf30/M5BLDNb6THwkyw4kMl2VMWnrA8Z4P7qNWMLQer
RTWXk5MmC2kSyHmBtz+zz4NXoqvus6uP3Ojay1wIgLfLcKEdFVOOTQFTujI9
KzkUk36Cw6x1UvE5k4VwSiQFO0infpbIMSWn8QaRdXgpjd2LrsGEZUwWkoze
oFTRzzt2qjEc/ve8UlFB8C5ZYQWG9VJi2R/pd+23ycxSrkx8EdieblZemOGY
Lh/PKy93dg239tu8gEo0bBXqO5wjXDnNYjzHeT23qGtyB32ZlkU7EsrnxghN
k6SFy2Oiezfc56eSnInwelOWMRSJe8FZglpcXYZAakLRMsMrv6WUvfGNbwwT
Ct/KGxnMPeN2m28H3zx+/9MjOSXHY/3W2mbHRk4cT8PumBX4IxJgD1/bl4yT
kTDCjVHW8SAkFARlrBtLec5t+5rkmNM/g4b02CKz7DuB5ycOlty6X3vrufsJ
w9Ldsv6MGkt25Wdqx9M17BF+RnDx3rKVa2IBXXTT6aiZCdSILr5/maSivOlg
ncQr9SHYB42UewNn7w6a9Uyp7/7u7z7H/sU5ur5/g+s2+xdvgcMWY+giLihm
v2qvUqicwy1w5OJaY4ndUKoweybtYs4vBIFkWXklJ8y5HWF6TDrMmAu65OU3
bNvN0+2pSeagaWAaHEkYR3dUTvGgxaosqv490nYp0jXXArbinTMZijdIv8fG
sxGpUVSrl9/iuV1EzPhsfC4U6Vj5LeaINtSCbd7EKzvMrIJApzswGIyEAOVo
HGMERmbSVWlDkCs9KxeT67o9gzaK88FzQEs2teqT1O2kJ73v5raxU31Ud7G2
WaUzhUShCf3ONkFjeJ4RNB7fXI4HShMHTD9wSX2UPdq09bXfp/rwlASXcvZB
XBBOWXA9cYypGGeicu6dADj8kC+BB1ZPyGw3OUMDEDHJ1HJ8tPq7Me7jmpKz
sD2+rG6pzb+l1DGHIeLmOtqYAkmrn9XlrgLmvjhX1soaUosYx/3q563p8Pwc
FFgLW4Tt9Vq49uu0OEzS39QrcLo2HIl1BJixKJKHOpz41u87aIBMHnii2Ndf
f31gE9+x07vGLR+qVbJoxh3c7zmo4cnJCM6xABiWzxZXWJKNMQcbLU6djTZ/
SGIDc6gEDRTycJCjLApEztGL4tHbfh6p01tMAZEZscgA6rZTMLdt+kFTJJnG
FFARBt7JwvSoxGvlJ7FF8CkqLzUVaZMpJTujBhCjlsGqBRka69zh/5L2dU6q
86KAgoQ5JIWQosufKbtY2uBP/MRP5IAAss/oYI8SycUyEQKPIXA4E0HyZtmt
x7D1iaFd1EBH26dxR0M3YQoWsemVs02KQ8VxTVEFKEwvSFAc6tbDBDDxlVO4
HZzUrE2mSDztJbJGT7uvMRW8LP6zyTG5PCIbJrhuI26B2JzCnhSitbqgELKU
HGg+lmAiXhtOF4xZz/rt/GF2/adpY450w2hLCcxP0gWLWpOhrdPQ+nxGEhMP
pgC/am+O2bI4xpKmsTowaEIS12JNLqawUnw10GzsnKZBd4wcMgvH5CgKAhHu
fQNm5pZGRl6siJG5pTf5cuD2UvsxgeOr4EOUyImmBLMVuVpE4eDYAB+trhFl
AnKhCfph/TIQsYV0KljA2PB1KXQThl46H7EtfQaczcFnClMycsJiWZUZoljb
3LbCtsEAKjMPlu9r1WNbZhw5brpwZGG3c5g6jMkhp7fNyFBs76HJFvPZNkVm
cJWFB8v7gGfOH5jkzS3ajPrxLO2F3SUsYvLcqNgMzp+O/nQqcJQNA8ysMIZg
7GFCuMdAz5G4nEMhRsnG8Ml96+0yV96gqUVzTwueERL/zIu/bupjOo2LwWTc
KOk02N77bpaYEBSi5kXFqd9mmN7avw1wzTBMZyOL9G4Ze4em0J5irOLNUvgu
aqvPsesmjf3lRc/qh+25LfHt7NhiMRw4cdjYwuAfbR4x+IKvxfggegS8lZHv
tNDr4XxaWxQHgtpTVykZq6yFOLGAiRhV5hPGhlpy7HSEU86hVDm0DTkOGpqh
IayfX5Lrr/SU8ABAZ/ev8QAITKv0q0QLC4IROdw/+QqB92SUdKjBA9A7FlES
NcxSqUZ+hfT1R44W44GIc6q3mY4SJEB6s57ZvYrW6RrUqp4rdJMI9JHdP2wK
JUnM14bQKP1uk6A/dguNbTE0gBezsR0AyCcB/Thx0WS2PullUy9nnuVbzO6F
2AlWR8ZSYlItmXqnpNSkIIK8wnohrFrzbDloIA/27U77u9vqBKABz+a2kwcn
+EbTjc21lm3QnKc77kyPn7FDwzFAPuwYse6xkSpR9l5wOJYHYzHoMCaIeGs5
GF4wpPx2P+fFjcXkBQ3QPmBFTfJ9z5JoaFOirfORvRbsjxZWtuNBZzI5cWu5
PFfYAx9M96vjw9aHfWn0b+nFMB2pcoeFrzNVe6eFWaTTLCTllZidKQLrYzHL
u9htf0+PB823F9caDRc1USrp86FRrk9shfwxNnd67W04DzHmct54A0v5937v
987RhJc+EphfaOn02N/sf+8AYxF5XFMXWkRum1MvcaFjYMDk0M0ZYy0md0Fj
YBDpK3qhYzAEUn90cwrzkxB0c9aSbmoXOgYsT4LSzZlHXHv/2yllRPT01Trf
SSTMSDziMwxxpA+4xdc2NfFMJi1OnC7NIgd0rmJJscxwJjoqLtcC/Ao+jjZY
yhnv/NpuxZled/6zP5xXnz436cehY88Ys0vS2JwPfLZ50WQKJk7hp6kT41wW
mHBduDO6bRr4jmvIeZW6bx6zhpQXyigwBIZcULpPvywERoGibpQVeY8tKz7V
CvHoEAl75fQ85miJ1tGTHkt7SLqHtjyfgQeDMKYbHSLxB4qw9DdSVNmmTln3
7AuOLs1KOmbBMaji+xrNF/HPLOoeHaOi8+dNMXvLW94SFY4MpXQyD0rWJQTA
zUsZoX4VHm7uHB0tKeUj63VTg3cjx3el5lir2DhveAJ47PBjL27lr//6r79L
/wm4UuanQgt/9+ZGgkIipaC8dhuoDhte2BX7i7hibNeOdMgftknw9ZH3NGqh
N74SjuAI/6wT+iZSTd8cD7RJP+peM9hUqDJzrtoKwJxOpKPtCMCUPA4ATIa6
jKWoidwdDBQh63TsF8vvP5+rsGUOJH48dvEfQJYet8xy8pVNNtHS1G7Nra57
TYd7KvC7eFaxYlS71ytFCalGcR81vyzZxWaYXNUBibWwD8EmnLK4esAzHqu8
FTyTTGKcY8EFlrt1as+gODQiySlbMOVnf/Znj8GpAEiBMCagO9jH9CkzmNkq
Xsl4eM5znhP0oV275Ggcr8xV5611dzsGcOVW+BABITBv/x/6j4w5LJuAk6ho
jrDlcC2Qp31eGvOr2PZKibvq3q2c+GBMtppdtQXTe7Wvz4xpSy06z4+Ussac
/DX7kw+bIHSJd9cLQ2JRrLqyrUrcvud7vucYoOWcXZn/uLmHtkN+pgHibTsO
WDFCoulpd5BGyvYBBGSpprN5ccyt3HuveS/pfFhvAScMXJZe5jwJwbPN2UFN
JUBNNL7HHKqRkjhCMlwoUCNfcrBuCeT4U0OVXLabARYlYDCA20tIj0LAkA70
0rhmhF74AOhlm8hhrGrM24gTUqJi2oSn50G0BLX6W8G56tibNwwps+xe/Smc
r93HP7vaxgaO0Xrncr8VBJnKIIiX3//+9w8EQzbyDrZBcErTg7RlUM6rNhiJ
51MY2niu6tB9SjxFSVDaw40ADd47wibXZOLl7KV79KFTO3IS1Jyy5SluIl6k
Jel27w4VtG1bRGtlxHF2ldheD/6suisczt0n0DZsIoR418cquhRj82Vshmb8
ckQzd49RUkpWSx4PDR3M0wAReoz5NoATgz9ZFUaLj6s0n3v2EUEjDSDOBbvJ
+8CzJIPgY/o1PhBOF16KSOyU2og+BlCp5UPjXonojjtud3st+VbxsN+8yOJX
hG3PuVkcE8G4qF8mbQlFPKl2LQ4nPJx2aCTOQKQawkqx2hYFfTwgYuUyVwQ/
tWdKK/Doq8BF8WIzYPokYileKTKhfCDl6OhxAsQVLPJE58IVk7zve4dDbFY4
xs61uRZIwfdEgGutV2249d79mpSWFPccoztEjFCCe/7PYlPv25g/+E4vip6j
DNT3MdtGp4Mdft26P542AfWgN53XNawF26HUl9jdDIrRAk/7j+ON31MdQaya
qZu3XId79ccLNOc6byZFq0ZP7IByR1Mh24p5RGMjZWROUKZrCzZbH38RLoc0
57Z5xBiqKU7bZFqRJOdxkuZZRG5hxqlYiiRfa804sfMpHVTMKm8GqCRFMbHd
7qnH0w3pYS161lWRfpLbfGwcXEcG7jjT7xMAjGf6lReyZA5VqM3GboKtPtS8
hZgoe95wL4nWQitZ8lqjxNMdD5Kpm3cxwtn0QPmG8pD99ndiZonQZKnwBP9x
x5l+H56U5PJjltrwqcnaGp1WaSOlhWG0WnHv9qPUmUWEhDvTntvYubYzNk4f
M+zHQm7k4eZL/b3inMiZhO0ZVFOGiDjsRL31d2fKqJv61CULw72/1QdKwlFf
cBxC0T4J5Xqf6uAm7FC7WvE79G1nQ1M6+q3NYJBWIZKK2MSzeKp8RxC6BvRJ
qK77F5f5X40fE2a5XB6T4TI6aodIWagzSQHCxfNyTjfJRFjLIUydjmxIMgj7
YBbttqPKdpvbnUXODM1WoghbX78tuPp7OJ8iJ9PR/5XnG3tqgyeZcq/5alwT
EShKu7T9dHdu6HX8MqOXSNTDyOTa4BT+X0NHjuDkOU1nOPyAjY+w5fSyLVjd
GIDyjbv3eyAbjdj0xVQRvico8n5NHz4xU1t+jtanB+3H4/HibIvXvva1Ywn2
TVIKDxsiy6NMIxX8gepUzH+eqlVK6spxKzQhnFlvwkw16uCa0inDw8qlBPT6
yi5Zp7IEoURWopVqgBHlBB+gPdI8bfyqs+VeM8EhiXSpd73rXddshErikbDc
XH1KXfFaI7wkDiQ7WCOASH87ieioGVGEEr3rOB5vVGpy0V9wgj9QEHxSgs40
kZqEQMPSH9mtaDXSvxnJyH2vWWSATakr6ESjTKdzv5TNFb8Vl/BmBSDQ8Oze
lmWGxpqBEmhEf5ZUFGhgkqYsbhloxMe15ptjALJw4ymNaercqAkat2o6ONMa
hcJDIjclwYJwXjiqvET6ju+FQnl0rDmHgpO3HBqg6560aXD4+PnDY80NvA0e
mKANGOFhggM8YkynRZ4IfZzYIC9yD/olG8bG/G5lWUbLDkLJ/N7mCjl+SUOO
+Pku6RhXWdx03MMxioJIY8ZG0v9tfdaTTmZ++799PSnXOaLvTqWRUAh9QwDk
VUuPymu3EIAodM6cLPaWVabv2rjKtPxy6M32VYLbCVeZriHjKnHo9VXmJJK1
VY7lEt4cm7WsrFIvN7IgQUd8pb4e0+sZ4s5gT4Nmwnp88crg9XFPWMOHP/zh
bQ6AVToC2i4pFtt1DQaT1NpvjxBwijMPLHKUAgZF+fUpBlvqEjrLHi2cOGB4
7aQVRDoZPpX5PKZq+SOdUk3UTf2hiGC/IVxye83csZCbmVCWDtyENaQquJ5j
6YoUJN7k+TIF79m/SwoLIQ57698ZHZK6uZblKYYC2aVOhYhFCPsZJzMRE7rs
b6gc9GbG8R5Ivdy+RBZS/PD3uc99ssS1hgK3GJYBqdK7l2ciS0SBFILkFKk0
yRJTyLImiogey8GZvdI8kzmdMBGiZg6RZl70PvdQTCfcv7SllKQtixd1yAbx
gHhZDccJ/uFlqovuS9wWE5kSeOmCii0CG9fSz2NwUcDkuFbirSE7ab/yngKL
VOt01TGwgNUpWeKliblHLwss6GU54ITotU5p72J7gUXcDyhDwBNGyrgOLCBv
qiZRWJx3DqfZDItE+MMzxwh/Divt5JuIBD1O2pSQNE9Wb21/rwFVJHmiBPNT
1rPe3MOoUEkzwLhWQB4FQ3e/pfoWiLe7Viw45aGDPRR38xrVjWeXhG/haelA
MzbySGlnKJHnK/f93+dBOb9Mr5t1UsaJxxi44f+jY2xI6kkO94kTlNLZehhD
qsOA5ec+SWXw1WSMNdXm3MlW6YZ5ofCgeShXvbkwHUpQL2iMNZvugueRCvZh
jPQcPdEYayItYyQwsHVvo+FJbiFvfUpVCWaWLrRDVQlUYmppKhGXUkytEzxr
b04joTGVFhXpY1tzgPv8uClqwonAW/20pz3t/f1yWkKc4InTyYipTvUDvqyo
vGtYneYylMNIEPoWJ90N/SeR1FufnTgxqDIoPKMsrvhG1hhDZG1ykgmOPO5E
CJXQQ9TT8RCHjc+aqmTJau/i8O89n8fFA6T0iU+OPpfOdKVQHvPkeICkdFBB
SS/Yn47adOrzmkbSrehQ6QUIh1KFymQvc348ODSzrOnkuGuAiN7NOcCFF43l
Oc95zgXMaFWEOrkPp2up85b5MObmDMw9PRmD3qUUzT9PGS3lLnM6EfPNnDBN
UBqLDikw3EKK54+p786c5FG79GVf9mU3mRMlK3NK474TzYm2x8M/nnbr2TQ5
n8by5OEYr8wpZwatmgTuziF4zr3Mac1JvD1dkbLvZpo3B3rK0soOWhwTHg4q
YRt0Q240MfWEo9FIsZBMZ80y2j4dXoAYtizu8E4mYKaDw8WfOlSRcFeNvWRg
eenL58VZwprYGJioAwAuGh47HBSXTaWC8vCK5b7/fJ41qpHCizdHtB4jFjce
eT15h+z3KtlhUo9p7UWMfdQTqqw554SGwOAnKlubmMXUOiU/f+fmOV3adw+7
ShqnTAXWwcte9rIpXWg685OOG9P8iU98Yj/E/rjecEIJCljliZ5uf3dbQU46
7yRounZ2X5aDT/Yy4/q5v9OBjN0bc9xyLum0YdSQDGRiVSS37IYbbrhLR3cA
MioOwMUfdvJ1X/d1izttXR6mqexZFf7p9nc6JWx9eWNcor5PZyxO0N7urGY7
HYrDDExPnK3L253DEVzAYUXxVGtLnyTUmMmrvrhTdT51VMzhjlsxbTRs3vrW
tx6D1ZlTKknHZ6X7uJZ3mRNfRe9vP9+XAyQEtzbPKeTOQ4dPTm0cp7/JwJ22
/qZzLxUsR2LZHp5DdVj+BSAqFofuMZwq64tSR3EYD27IKWR3Hq6lvDrrEwfy
W81Ftq3vVHPyYuggRFVBcD5LiilNfVNbm1e+8pURUeknVHb9IhnqRtH23B3v
2b7EdP+vYY407APIYjnzFlJYXFsdwLFaokK77UsUnkzjYY5Ujoq0FC51ZZNm
UPgRqYeSI3VJKgkfLAc6b6lixyhQWSFAuIz1ZubJYCp2M69Q0B98N22i4oXN
K0wPFHo4RUMIz4uJJZtJIfwxik8sHtLI8uRU58GQtHe6PtcOxhB70YteNP88
nnJO7ayP0wpqlcI63yc6bjjtBjavL+I5WcKjeD7GnS+hnHSVe/K+bXM/1WxA
uMAZF5JOo6uyGTP1tK4o026eOqNH6pRPm6eeSITeArI69FA9RyQigR09oo6Z
eqSnfAbynyBLi+FCyiTbJrtReimTAWYVB9osYWJdZRylA+ew5JLPxql4DBdL
J23ZrAQjWQ8WEpLv3n+SGk1h9ne/+92b5Xumx6VMSSBujpleYA4HsAvJfMfQ
5yf1W3Msy3JmqMcJAh5h1v1yoFA+eJqpTycwMHrtzvzzeM5JsAswxKbicTBJ
1T8xjS9p93gMjMLWYlzZ9XT1TZVfMasLmo4ANdmBuXLIRWtUk77Vaj6YJQFM
TbS4bMHzUuZjt9NpoJtxmJ/MsOIxx8wgThGwZEF541YQ9bweP2oxycm+OW7i
Yw6pPvEYFPSYVjfHztiwljU3/MndxM973vOOCUKc3KVZ1sx5uQE3zePFL37x
BbkjxzGe//znX7BbNCheVvfNdr2X6P3/fAjg/ydjME3Oeaj7ljFOfLj8loPh
qecUkqKdc5f2DidRTmMcPZoxkUPqSDKz8Qb/L2GQEJtIcU6YSCiOUz6B10km
Tf2O5H1Qr0Vv5Ajk/rGB/t23zptGmwqF4/cxSbrxjVIES5ROSRinW+F9dEID
Srhzm2wIMZ7pvN9pQaRuXKLeUhU/8pGPTBrQ1NIzqX7eNpFklBeXLAdZJFLr
bIxHKVzId/i4UkzFxe6R45O4q7GF9Y1PXkiH2h7EhBlk9Emgc01TvKntPKtJ
c05JRJw9afzDvU/Dy+lqCcpSs9PFirUp99P/n/rUp04guqxJbMqRLkUcMWYD
fW1Oj9fOnVBMw2OUKYrGzh3dLp31STpN8lDMKhuJsvh4qMZUuQSAJLduD0ev
OY22NuhoDe2a4pEWUn7NFQX2aYD5qEc9KvmHkYSm7KVnpM96o0ZVDCFKWLtl
X27qc7nxAJnOY2vTWCWhHBZrNoLzqSA9V9OkpC8pvEmRBZI8G77Dew6czVlH
5xfdTgt/aT9sLy1/4+CIvTzWE8dJhnt6pSJ1PDgsvnqxpfQVSGqWIrQ0UH7g
Ax+YYbnpuAVYC2hMQjXalGE0dqv2M2lcXvIGTVlqaB4dk1Eb8O3gOZnXNsnv
KZ0eXQdRk1cddw/nc4HS/jfdU8bKMUEpNKzd4ORRPD0Tln9D0+7L4eQre/ew
wSfpGAhUrov/j8WUOYbYd1CNDCsCzc6m4lsv83NjUZJJzgWmU02wUFFNLxms
g18pK2AiyQgjPkEsvrpS/2bk811vtNbz2M+0+KjhBcMjVZTh4G6qU31+wQte
kMdYeMJrAJVS101Vp2QM9yK8LsaaWcQO10JxM6CS2zO2XDsGSmf6vOLwTEVC
aKO0gHmT/ZT1aD4gmVwGsi6IxIfM4pTAfVkHUVpb5Q0BUgwb2i2hlcdYMjnm
Mn9taqZXIFqdcZsiP9xUPudUezJNJeFkPtztCGVTIqDPJfPONjacrmpe0NFt
8pa8FFv4LD0s840vPM3tIn2m0zWm+aYtwqtf/eoOur2216QQONQ7KBCX06Mf
/ej5EbDJ7qQFRM53H9lVSDdFu1gbFjfVzyyPsBW7uh1sYnNRXM4NNoKVA8Gv
vBOsz6Es8W7d//73n+eb8ufuLp4jw+N5nn4viCujMk4llYGkmo31XgVYL2pC
nk8Gm07/1rTWx4O8sDxwqTnmZ0mUF3T1ytSA1Au9Wx42UwrhdsjRGFM7cm4V
FLJZIQZd76igOWMevaSWQmGOGg4Gr8Nbo4LacFqNYuSkbZcov7x/HanqCZig
RRTzyjbw0fkaapAA1CoZ1ON517IOaIJKmSVNAu/DH/7wDEEZJPm5Xg2RM6xV
+J5btcqRtseYGckvJrFTdKf7H203mrCOY6QYCY5xsR2iQUMJwbic7yHadkVf
Fw0XkzZmSkkK8vkpNMD+AdfXK6V9snrSnNkb2P74j/84P8UqVTz6Kb1equ92
3XxLty5Tp7uVnpaIICIjSvDEWEk+y0n1KW5l/Kv3HVmkJRxriuPDuT/5LabD
cENMY2mf+zRT31wYNArtY/q2ndhqNUbSmjeQDaytCZ87gS49f9bG4JY0lxI0
WR8xJ9pR6mOtuf7u2KaD9nk6uUsv+PFkNHYpZdMdO/2+8ZCYdK2SIJH7Lm5/
D5vkwOJIghxfBP0n9iwDY7eV8OV3e318dnLOpLvl1tUTu9ydx0CQSjZUxtCJ
EK2Sxf32dzpHyj6uX0M/GoPvtL9TIRgdyh07/b6xr1LgQFfKfRe3v609YruG
BSc9rdhSa8WYZzL/iBQ9ErbXeuDQ3dKanxr5u0kzwjsLr5uxdjAXY6z+t9NK
zCb6Sr3rbv87VrTnWb3Mtd1xpv8drs2eDqVXdlfFgX+LNe70oltklyHyKBsu
DVbd5vYeBqkbxR+UKwh7pKhoU/r3efn0rSQniJt1jNOy6OeH2ONzPOTSPpyV
iqRw81CfGV2vfOUrWwwwEp94kc7F1r1dv0aSK/3E8iOSTI2Na/00HWZ33Zf2
qgBqFmbtUeSm/3/wgx88RiSNp1qau+h5JhXzZcwlOwe/Wls66ufkSChapZDt
cZxc6pRZJkniK90wHcmHw8hn3SkH5hAx6nGVGNDWVqbhxPoJyiKuuYMC+U93
XM4i4jgw5DyQ0p7mEeNT0F13zDyMc+R4h3bEVhomrETP3pzKIX+n8D49zuOa
H4PLLPLk5OQau4zjY2WVT1UHpF5OGgaKmuj2jSc4SAlx8wyedlROLth0nkiZ
yedYcZo0Qrz0tkjHJ5ruJFinvnopjKaOJmEYohTyRE7n6JzCyNlyZT+4plpu
s5wel0iPG+GX7B5JVscc73jCTRV13+sIKl0Q50DKSJcK048omXl31ESomQP2
cvjNctBXcn4R19XuhllvXzNAMlqn1njTNbPLtqaM5ATdMNf31PFpWXCKSrEE
uiKdnnjjzL267zE9WVYwc9RG5iwdCnwJiaiWjCUpW/S5GGy13+e/9CQRFY89
kiSFLCikWfrYZPMcS093L/6h3b6sFFHmJBa8FzjseaH1NX1ZlCcKOBWVUu4n
xYvS4ZCLV95RFGo0XQA+/1UzUrq5NK8apElIVHgBq0517uisxHZdk8yVx8Sb
4RScqW/hfkvkwdVTy6yfWPL18DgJr9hO2Z5B+KDnudY6ueY4ggCLySgrF4wJ
r7MnX+elfa5x3Gj352u6adaba0CY9XI6xyN6q2EMoigVa/L1w70IC7rd1FBi
dW37YqPqhEIZssQ+2Xkeqk4WyX/AwxiDRUOtqA0R9LzTXjaIyH7CE56wyBFf
nATJ63/uc58bqsXtzIJi4i1iXbpzusvDeuo2vx/6w8y2d1sg93sHpzl56GQd
d7NSjIQ5kYAitMxK8aKYm1CQ3492oAQ2IjiluXLgs0xmuA3A5zJuLT3LpDeD
RDzdOOzmZcaPOTZhPAcZggYlifcqpj9NGZ9jiwsBcenmrKa0aML/cj8VQj8h
jBXlUPdHQSM0pJh1u8H7F9EW++ZUWf2FNTsPc6DSXdAAY1n+ze50Xtb4BTei
TpSx+OumMeqW7QsJHhYbXaw7X+hMb37zm7cPEEOI636T7X3jjTeebC9KKG60
WwthTjbAzcaG/zPAzRggyoKTzS5oACFdsQ/q5TH+i80DtL/XDr8gaGQblUJx
Hr/g8izr6YS/yKyOTW15Qb8ZN6bSKkh5y1ve8qLzAc00xn5zyOU0RR5BvSG/
/fwHOmiGHTXcgFwQhHxde+H5LOxFfb8SE1IRtz4Abaf2cfMAz+mrYm6x/3ra
SytWiNpFqzOQ2Pb64ITssT7Rj+6Dp/5Hnz4CjxPlCf271IN58587Y2z9wVpy
5sH8q9QPPsFjuVEeDI3T9I+GIRyWB5OfyTYgieVbrj9YiO3b+zVCIoeVRbvh
qOEHUQHXzwDtZTRTuwLhEN+BrEVv7msfXSF9jnQSfWK/BjnC0fc2zO7l/WlW
Ikdi0T0yQJaZmHVCC0QJm3/7TGK1mXNmkvyXVfrP0Zn8QL+WhCY1FUlhpzXR
7krA9bYUxz05htz4ZJnX609OC9vxyWngJ3fjrsO1fuD8OdacZGhP/vKObAym
GFkFk7TD5FGNnVVbm+fLendJXkieT0PT9uP45yen3S5F186DRM3T1bZW9di+
oagdALwo2KtMi6kkOj7tJz3pSRmJL81IWHFRRaacjCVTzmahMC4Czr7Nm5UE
FyTEJkuXKCT2gQ98IFPBI+i5UrELZC163SuC41rylp1vBFZcqb4x7AyOOfAn
Ztep9rRtPumX96cM58NZ/J375fCJLgY3LyRHofOnpRjQVCiD3EYYUmnkX9pv
S6KU0Cr4Z930tve///2ZuRmm52dCHf0M1/bpxR18fHByFZiq8ATVFdfIlvG/
qGrmxyhDLAd7UjTRHX8ChtrPIs2vsB3paZZT+sO2da9KZfkSa51jRk/OmvJS
ZcWHwGX6xf0e00BYGEqKmhbd0RM2Cru4BbRRzRaSeD0HpgPiVAtkpu+zjIQc
RCouWs+5Q39kOJA3OxZPE+/VhvG+W9a5O6/TkfLxgObQBgWoISweMRZnuCWJ
l8VIxFl0SzSLyRkiqqFf3K8lo8a5gsGI9D1XhJPxRCBwO5bkrTsg0uohtj8g
y26BcPX/DMdItO0ExbYN3p2TEYrs54WLN0I7XOMxHamk4+Sh6RM/M7wpACgF
QGQna4fl/QzEee020uZqVJXJWoPhPv/zP39ee1K5tCnK4a/Wzgml825+m7SD
VTbeStXxjG3s6XBu4canzedokRbOAfz4vvD0OhETEsOh2ZWy9Ir+MGRMAbvu
uuvmCUjeCDJlQVzmtHYUkgXFCej4kvw2gQYLzzUOHtRDd9u8oBSWMLVpiaEV
mbq1mMd37CVBkKlIjJCEuMkPdczCFoRM8Rq5lsIRqReuSd2h35Y54ztefhYv
2tvf/vYsdyxA3SbVpkY6tDDJCAleJnMOtgAuFpLUuA7YkewzJ/KBdzaEC/6b
yb79vXOHilWDCBx2bCv8utPa0DwIvC5SuuSqiAaec+ipCq9nPc7SM0M6IP0T
zj2E2aHucYik6L7kJS/ZNsQdO4jTQo2eX0wnmke0ySLrk4zCGZd4S8n0uDVS
K9qp8AQrYsrkXMsIY2yIzBILvOGGG7aMMj33oM0+R9mamgZepU98wbl/yduG
SOht0vagb41wzl9ObWnSo07MC5/4wuN/FkCrZMMz3f5Fx9/+7P/z1f+rvmr9
KRdTzwgVwz69dOOdv9PvxBmEUaR2JUmaBUhmCIZu/vVvt797c7ycmChOmDgn
6pUUKzRUA79k4xg5LQrX7i355hmQw70UYkpU2/FxsRsibF9c0m8mu9ysj0Ai
Iu5zjXCPuio/K4PG00Kjds0E5qKHqdpanID9fPHwc3P1KfcRpRky06HPG05u
ZciJFMt9mSJji1XrSJqkvQio9nrzrn9sFpt3agvkm6d60uxxefUMqVqlTqko
ps1R8Wlr7vN/2osaXfHR9FDFI3A5LyuwoxmXNeJlDIoXjQbOqO6UV5NYLabB
XZw+AOIZxtEuPPaTsYl8JlZBdALGrVsYR3yjH03R5CK1Bnr6iReFl1YOSDFq
WAXJubeXhF7GwPkzdeqS34qG7QgPFFoZ10EnWlVbKnD6zHAqpr7Tbr57C816
8Ua4TWpxmqa7FUTFvDyWt8LKvCj8SUtx3W7QFjRQ0j7DWHJGJLXZJZ9NkaSE
V9Qv2oOkLoqxtDoR8iTHMIbq3gn4t2xQMCXDcP1ABkqKF7sHpGgZgR5RQuWB
qsIl2Wxn5ZTQ2O+4CiBW7Gu4xvypVScuRUa7bNupOCA7AW6vWTqCekRQCbDp
8qkGZjYC7ZWISdo66VSwjCqO1NhZ+o0mpQUGEIUyjwqJo7mxMWnfkgnzc14G
16cfTmuB91QZZeNSBu1cge3bthDaRLo9HLRIz3P5Hv30iGllLl9y5JgfOiBa
TBNpigzLNie60BxwlE/8xE+cfn6qGWPIMi4vbp4U/rzxjW+cVnFmzm5gJULd
pDbRC0IKtfqkJllo1jQB7PZtz1NgYBhPhm4ZCopiIDkDU1QYEgR3UlSVAiEo
aio5Dkw+m4y89CnzLP4EG/CjP/qjASNVE1Xg9qW3jydJAt10k7+HbSYyj6LK
yGLkipm6pbWt0eFh4jtsJCeFTgNe0SIHKejJkoEgqVCYjfRmy4h95XNaJOOR
xb0n6F3WgIyAMxyLJRnupJ5riNQWpxoOZSHqwpwsU0w8cm/a21PNXA2QF5N3
sLEptF+ryE8tCBroyBNggr0wAOfq1VdfnYR3XElCUJoI4ckoMAXoVPrQEcDj
WDxRITlsw30SrmcYrIoptKgKyaW2XvlLREI6oXmL9lkcrLA937qR7hKmT8bt
dLzQNJm4YUmG3/iN35jWOO1Z5FNfU/uMmPAFhOSVnm5S17wk/vsMnCmshLYk
97SAi9sOQeecx4KDBwlzFjmPKgnAIhNjSEycxB917ykFdtl0heBWkrxw+qSJ
aLPMr2nvtH+ID7ikQDLxOBFyDFVwrmzybE9SdVdJfreYO995Y66pXvIk1QXh
x6lmysxyqmRSD0rI9DGvbjGATCP+D/LMK5pF7+8xp9ilnCfH4fRTzpsPJJoD
D/gExamkDmc1z1jbKJdDGCqtKqkO53YGWAXr3P+5famBcRWlz8pqHXtzE2vv
mkdANjrniGUvfvIslQqX8495NnlCetvjhhSmTGGiXEdlhMOK2ah9UQUJJEsv
eTdTE7CS1xweuZbmRaqzwjISHoekkNV8UCJCfutb3/otW4hsb+68zJs9n6V3
toEv/V7iNsQAUtAavq8vZWp90qvSHDhIMBoeca84pBAqlamIKQlGcT/rTBUQ
oZtedbjIgSrxiPOrlFqTTC87RFp1UspZPnT3dD4Uw4oXBtOkOY9xsYQLBKZz
LcnZjpoMbqUw0dvmxBHPn7rfn5uCONIjZ+/5rKqYtGei7HTOgq+nYDKF+OnI
6Plea+HpORHXJg+HMDfhWwgVnCC7CTUcNxXlccPe97733em3Uf/ieAKZUIyf
FfoedjaWVPgeclrJ3PqOtji+CkPmpGisyyKn4rTpmgUFCWOXRROR0jmWR9NK
lrOxdbop4Fg29u4d2WqlBCXfbzaQiO9aynwNVLDUWs9MUZhBN3uOFMcZl2N7
O/mk4yT1vbYnHAuGBatwu2xByGZVH3rJrDJRkkM2kU/h0CYNm1mLZNXb3va2
GMo5r5RjPtZ3Mm64RWuLw2RS2zgVnLh26XyUKLEMQVKyjN/mIETSJ+e9Jiup
qHEGayRZzXamlRw/lJWlMlbu6H4HYbJ9MUMaIBz3mdLv2aJ66JZM8kpWXII4
gRym6JXy1jILFykXiwLrTQvCiPfXiATEs0Psfhym6DCJeWm23dMrmmPkAQ94
wKk+ShR0FAhKZu0WyDmbKPtz9YM3N+C0CRNNCNIepYkpEY5ws+0l7IKa1tzT
gW/SxWAiSH8PZsMvL3ylGHQoju1H3sjdTrbxeNKup9uyGDQ14+2EkKMYaJWz
G2WvlYgqYoBmf+6kNbNrR8AfoQeE2mMZHSgXNTGRXrg5ojmHDtFEaDPJFCwC
zmG8rDXGMv6QUuuaXMglosLB4RN7u7aNGm1Ym3IzSdJb6myjBWN3hBidyGfR
TjpJ4umMqADS9VSt13MnmNx7LuGNmkJnTy6cpAA2rsCNWCyvSFZhsV45mpUF
AifjDnC/iumIHEDFgfOZ8emVYhOkzVZIOS9BALDiojZIsUQhcBilHBrTLJE+
67AJaWKgtLTktabYwFAozDXLtqyitGBhhJ0NDy0gnxxBGQYz0M58H6yCPqv7
pqoq6jvh6VEJfotzZSzQ7DJrliuEKWhQeCnC0ahAjoNTPvQoV3rfilmG5Cjk
gvgibhOaYOwhb/MtleZkVIT71UMzPy4LXIjWGaGvuLdXL7a02vgQ4nDyVrMM
JmgCUy2Mif6AROwMvRcjgOdlnYSKqCPj7LHmUg5CRZECdLZTHfjoMagYtmEI
2UPReMTmrA1jI3GiHtqwZH7jnQJitCddSNMAlTnYfSmzyds93DlAZbq1rXPO
qvdmmnlB0egyYOlRIfASRuFOcVp4Y7+9m28TsbsdzIiFdZmcotgP/SSqeAqY
POlvwVzBVihZXuwDhYWLboL5l87NiepVOnOKd4YDfWZ2HeKBM5A2BS2kZJF4
pNcod2jyhF2p3GMpco+Y9rUdNJQfX3hYrS8WPdHOzFLfnhN2UA+nQagEX3NN
UlbUDwpRuuzuDI/vzXJmyiay4yrfTC4tD2BnZa9cNBMOKuvpbDMb9pl2yEvD
C1PbGSqIv4B7j5XKL1IaSmYXunF8U1aGQxMiGq6k4IWoh0vF4uaOjHEtIIXa
nmiGdJccveTFjkA5PBMsodURkle2z66T5SF1brEsFiui6nF7E7TxG9FEuGVj
A7OcAJkNHJZiGdidVobixwBuM3Bs6sh0BOm0PNfMY1LtJyQAXEKCG4IeRVKD
4qo1x9kmjCKhjckRGS+LeXl2Qozx0JK9iGDRDU7k+nM/93PRJ3Az4OjgCpJz
RmH8pDcZ5GllaKzLmfFohADx4z7u42b5MdKKIQlzlKk9wTTWfnOO4C/23FtK
YuQAZmC/GZdZEFYZ2RLVZehJEq+kMvUQSs6Bk/kfN3vQadEtCui3OQKYEzNo
+4REXvEhrapddxs7YmNMU52uRScre3A20ACj2yU9GnbYdpNOkBdAIRa+sxgi
1JdgZQEgcELhckOWjUdO1+Kwkh4wylrXnOmVjvJxcPuU8hXOIErwxAuma0k3
eMxjHtPTNk7N41H20s4rvTzLKg5nHT3FcfqIy8DLQsCsgsoXCzXAwxOJ0ze8
4Q0zBrCAR2/xGgbEUuJIzb6grCg3YXGGEDvIKwjFCxGgyEigkRZ1buGcRZrx
1VDKPCimF/OPozgJq+rJ4jZLipJDAIIYNtjG64AVxEjnLlYO0ywuvVWJ4Omm
q0ZT6QGlNvlkEhWyzrsbQxrKB2ipJZBXHd5AZ+HGonzW/9MPDXeDl6hpbD8f
kISJ2yZDPvaxj51Tk/igYv4Rebh30VV8H3H/emFsU+u0SYjGBZ3MGds0u88P
5g5x8jjYdBSBQuPgFu2kK0dHCrJinuMoCC1rx7pN1FB1X3AmXMNlYFGXZgg6
WLy2Oae3tiroZ130cMbyNjzaHb37i8MuvzHh3Bc8SVO9Mhjma0QApc/pB5d0
sIwZtN5kdimC8RVi/d2ir6WXet7jPeii0LOjTDOYG4iiX/IGUquoK/iRYTEA
7W1KJYjmkYjecqDoOPlKn+wHfbeeFrO6xbnBWi4jMggLkXuUb3aTxRfJ39eP
6ptlKaQfD8sElH6W+Px7YqVHM9uLrzLaYecUbbRsYYxER0PGpQB6eUah4tgY
wqXp+IrpGsBkX6fHnGnA88L4CQP0C3kSp8HRCxLbEQaozEPB72Ev++05FQOy
T6cUpaHm9ddfP3bmjD9agpmAysX9O0Qtyo+jc0lRpS7pw1FhqETepcZMfODi
uYNVvODxM6TZUyLTFAhGo7PfYwMxrfFubO2OHTGo9OSsyEfSqEsjmmTclK5I
x/Azb4UUZkSbKWNiWuTZhr108Nwm+d3i2Bt+4pqfldk6+4PBcBwWCf/Kr/xK
+Al0gnaqEf+vwu4mBUAghAIwbbtNixZdsHN00/ITBRcDbWJoBjEZfM8fcg5G
Ve/FVubf1CQY3xFo8PHEyr5qGMF+4YZ1+NnWQFlE9ltmhJ/BLSIwXtf4uoUO
w3Yd1FGCcExXB4JEVeRgiFfu7WkZ5A2Y9yBU1qEeGGP/eH+UqJ4RZ0t3BBJ8
1vdNGHiWeubzvwkr13cd2z4U/0Lr\
\>"]]], "Text",
 CellChangeTimes->{
  3.749145095523737*^9, {3.7493921867005043`*^9, 3.7493921893912096`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cppClassName", "=", "\"\<RK5DP_7S\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methodName", "=", "\"\<RK5(4)7S\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "methodDescription", "=", 
   "\"\<Runge-Kutta, Dormand and Prince method, variant 2\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["2", "9"], "0", "0", "0", "0", "0"},
       {
        FractionBox["1", "12"], 
        FractionBox["1", "4"], "0", "0", "0", "0"},
       {
        FractionBox["55", "324"], 
        RowBox[{"-", 
         FractionBox["25", "108"]}], 
        FractionBox["50", "81"], "0", "0", "0"},
       {
        FractionBox["83", "330"], 
        RowBox[{"-", 
         FractionBox["13", "22"]}], 
        FractionBox["61", "66"], 
        FractionBox["9", "110"], "0", "0"},
       {
        RowBox[{"-", 
         FractionBox["19", "28"]}], 
        FractionBox["9", "4"], 
        FractionBox["1", "7"], 
        RowBox[{"-", 
         FractionBox["27", "7"]}], 
        FractionBox["22", "7"], "0"},
       {
        FractionBox["19", "200"], "0", 
        FractionBox["3", "5"], 
        RowBox[{"-", 
         FractionBox["243", "400"]}], 
        FractionBox["33", "40"], 
        FractionBox["7", "80"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]1", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["19", "200"], ",", "0", ",", 
      FractionBox["3", "5"], ",", 
      RowBox[{"-", 
       FractionBox["243", "400"]}], ",", 
      FractionBox["33", "40"], ",", 
      FractionBox["7", "80"], ",", "0"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"higher", " ", "order", " ", "first"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]2", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["431", "5000"], ",", "0", ",", 
      FractionBox["333", "500"], ",", 
      RowBox[{"-", 
       FractionBox["7857", "10000"]}], ",", 
      FractionBox["957", "1000"], ",", 
      FractionBox["193", "2000"], ",", 
      RowBox[{"-", 
       FractionBox["1", "50"]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
   "\"\<MoL descriptors (generator).nb\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, {3.749145162759855*^9, 3.749145333174554*^9}, 
   3.7491461752640333`*^9, {3.749391320489483*^9, 3.7493913243270893`*^9}, {
   3.749391778468787*^9, 3.749391780574791*^9}, {3.7494381185675344`*^9, 
   3.749438126289548*^9}, {3.749438166350418*^9, 3.7494381674424205`*^9}, {
   3.749439477182522*^9, 3.749439477525722*^9}, {3.7494401707343426`*^9, 
   3.7494401723099456`*^9}, {3.7494403833495164`*^9, 
   3.7494403852059197`*^9}, {3.749532549987924*^9, 3.749532550315524*^9}, {
   3.7495327092642035`*^9, 3.7495327102626057`*^9}, 3.749565973247571*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"The two choices of \[Alpha] and \[Beta]:\"\>", TextForm]], 
    "InlineText"],
   Text["The two choices of \[Alpha] and \[Beta]:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.749962597961976*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0"},
    {
     FractionBox["5", "8"], 
     FractionBox["3", "8"], "0", "0", "0", "0", "0", 
     FractionBox["5", "8"], 
     FractionBox["3", "8"], "0", "0", "0", "0", "0"},
    {
     FractionBox["22", "27"], 
     FractionBox["10", "9"], 
     RowBox[{"-", 
      FractionBox["25", "27"]}], "0", "0", "0", "0", 
     FractionBox["22", "27"], 
     FractionBox["10", "9"], 
     RowBox[{"-", 
      FractionBox["25", "27"]}], "0", "0", "0", "0"},
    {
     FractionBox["69", "550"], 
     FractionBox["39", "110"], 
     RowBox[{"-", 
      FractionBox["43", "44"]}], 
     FractionBox["1647", "1100"], "0", "0", "0", 
     FractionBox["69", "550"], 
     FractionBox["39", "110"], 
     RowBox[{"-", 
      FractionBox["43", "44"]}], 
     FractionBox["1647", "1100"], "0", "0", "0"},
    {
     FractionBox["727", "175"], 
     FractionBox["351", "35"], 
     RowBox[{"-", 
      FractionBox["258", "7"]}], 
     FractionBox["12393", "175"], 
     RowBox[{"-", 
      FractionBox["330", "7"]}], "0", "0", 
     FractionBox["727", "175"], 
     FractionBox["351", "35"], 
     RowBox[{"-", 
      FractionBox["258", "7"]}], 
     FractionBox["12393", "175"], 
     RowBox[{"-", 
      FractionBox["330", "7"]}], "0", "0"},
    {
     RowBox[{"-", 
      FractionBox["757", "2000"]}], 
     RowBox[{"-", 
      FractionBox["261", "400"]}], 
     FractionBox["531", "160"], 
     RowBox[{"-", 
      FractionBox["26001", "4000"]}], 
     FractionBox["99", "20"], 
     FractionBox["21", "80"], "0", 
     RowBox[{"-", 
      FractionBox["757", "2000"]}], 
     RowBox[{"-", 
      FractionBox["261", "400"]}], 
     FractionBox["531", "160"], 
     RowBox[{"-", 
      FractionBox["26001", "4000"]}], 
     FractionBox["99", "20"], 
     FractionBox["21", "80"], "0"},
    {"0", "0", "0", "0", "0", "0", "1", 
     FractionBox["789", "8750"], 
     FractionBox["909", "3500"], 
     RowBox[{"-", 
      FractionBox["144", "175"]}], 
     FractionBox["37179", "35000"], 
     RowBox[{"-", 
      FractionBox["99", "140"]}], 
     FractionBox["3", "200"], 
     FractionBox["193", "175"]},
    {
     FractionBox["2", "9"], 
     FractionBox["1", "4"], 
     FractionBox["50", "81"], 
     FractionBox["9", "110"], 
     FractionBox["22", "7"], 
     FractionBox["7", "80"], "0", 
     FractionBox["2", "9"], 
     FractionBox["1", "4"], 
     FractionBox["50", "81"], 
     FractionBox["9", "110"], 
     FractionBox["22", "7"], 
     FractionBox["7", "80"], 
     RowBox[{"-", 
      FractionBox["1", "50"]}]}
   },
   AutoDelete->False,
   GridBoxDividers->{"ColumnsIndexed" -> {1 -> GrayLevel[0], 8 -> {
         GrayLevel[0], 
         Thickness[Large]}, -1 -> GrayLevel[0]}, 
     "RowsIndexed" -> {1 -> GrayLevel[0], -2 -> {
         Thickness[Large], 
         RGBColor[1, 0, 0]}, -1 -> GrayLevel[0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.749962598024376*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RK5DP_7S = \\n{\\n    \\\"RK5(4)7S\\\", 7, 5,\\n \
   { { 1., 0., 0., 0., 0., 0., 0.},\\n      { 5./8., 3./8., 0., 0., 0., 0., \
0.},\\n      { 22./27., 10./9., -25./27., 0., 0., 0., 0.},\\n      { \
69./550., 39./110., -43./44., 1647./1100., 0., 0., 0.},\\n      { 727./175., \
351./35., -258./7., 12393./175., -330./7., 0., 0.},\\n      { -757./2000., \
-261./400., 531./160., -26001./4000., 99./20., 21./80., 0.},\\n      { 0., \
0., 0., 0., 0., 0., 1. },\\n      // Alternative alpha[N-1]:\\n      { \
789./8750., 909./3500., -144./175., 37179./35000., -99./140., 3./200., \
193./175.}\\n    },\\n    { 2./9., 1./4., 50./81., 9./110., 22./7., 7./80., \
0.},\\n    // Alternative beta:\\n    { 2./9., 1./4., 50./81., 9./110., \
22./7., 7./80., -1./50.}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.7499625981023765`*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Sanity check:\"\>", TextForm]], "InlineText"],
   Text["Sanity check:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.7499625982739763`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.3393768530473076448700599124629200528684537206778035797316`30.", 
     "0.3328995527333359468690989171296744869515770060477719323024`30.\
017136666380317"},
    {"0.3623896437676831029931216228530502889807945872597435426731`29.\
974265808748054", 
     "0.3545096853460313640067976332946516633948536598123959992999`29.\
993882212946684"},
    {"0.3755766455963049230454680729098918943281000122429546670428`29.\
959976730653725", 
     "0.3668090412823192468974712535937530156109123027268289368988`29.\
9810969097266"},
    {"0.4018641193418612323591123117790663098614507759386919498285`29.\
848754852414544", 
     "0.3911346323255413211130473876006745419546318784507490535521`29.\
873056674924314"},
    {"0.4156744214561717251299788347032083542676546716582896996681`29.\
737584447692004", 
     "0.4038070127259573196512053530457786309430950514036741585783`29.\
76365786808638"},
    {"0.4590164976505627707767455593677522189427052255113388656662`29.\
158941789801567", 
     "0.4430666226607056132019746749430871579153288546943131119584`29.\
1910377156267"},
    {"0.4594545409635618529083433713593246918747391248393658943669`29.\
64373864231797", 
     "0.4434592810149048991044321075958876370003592640222152376731`29.\
675899101681335"},
    {"0.4594545409635618529083433713593246918747391248393658943669`29.\
64373864231797", 
     "0.4594545409635618529083433713593246918747391248393658943669`29.\
64373864231797"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7499625984299765`*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``29.68046609847337", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7499625984455767`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.3393768530473076448700599124629200528684537206778035797316`30.", 
     "0.3328995527333359468690989171296744869515770060477719323024`30.\
017136666380317"},
    {"0.3623896437676831029931216228530502889807945872597435426731`29.\
974265808748054", 
     "0.3545096853460313640067976332946516633948536598123959992999`29.\
993882212946684"},
    {"0.3755766455963049230454680729098918943281000122429546670428`29.\
959976730653725", 
     "0.3668090412823192468974712535937530156109123027268289368988`29.\
9810969097266"},
    {"0.4018641193418612323591123117790663098614507759386919498285`29.\
848754852414544", 
     "0.3911346323255413211130473876006745419546318784507490535521`29.\
873056674924314"},
    {"0.4156744214561717251299788347032083542676546716582896996681`29.\
737584447692004", 
     "0.4038070127259573196512053530457786309430950514036741585783`29.\
76365786808638"},
    {"0.4590164976505627707767455593677522189427052255113388656662`29.\
158941789801567", 
     "0.4430666226607056132019746749430871579153288546943131119584`29.\
1910377156267"},
    {"0.4594545409635618529083433713593246918747391248393658943669`29.\
64373864231797", 
     "0.4434592810149048991044321075958876370003592640222152376731`29.\
675899101681335"},
    {"0.459454736582665683652624085701021305333048212362955331113`29.\
59375056724055", 
     "0.459454736582665683652624085701021305333048212362955331113`29.\
59375056724055"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7499625987419777`*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``29.63047783848913", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7499625987731776`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dormand and Prince. Table 4. RK5(4)6M", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
  3.749145629185074*^9, 3.749145633958682*^9}, {3.749146187837655*^9, 
  3.74914619063006*^9}, {3.7493918014164276`*^9, 3.7493918110260444`*^9}, {
  3.749392199359627*^9, 3.749392211231248*^9}, {3.7493938011588097`*^9, 
  3.749393803420814*^9}, {3.74939388651896*^9, 3.7493938878761625`*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
8wlmqWeP1WYpZ6LWsGSe43u4f38OC3ot8fyXS3A5f3MR19v2z5srgZ+DIVMV
fhsPJvireAx06qlgfP7dahff2PF5lvx8hoRXmKQhSzkTtYYl83y5ovKAqv05
LOiFRJITLEHk8XKTaQuAiLkS+Dnon6c8oG2SYJBD1sKZSFZ78r9n4Ubt2OU/
n7uzdPnb45iEWVrGknm+XFHn/lwvY8NdJidSgsgrvo4MFkgde0yXvc9B5zyj
ginHGZlhlhKspCf/2xZu+Lez5OczKrDyPLNnaSVL5vlyUfHfNm9gyjpzWK5R
cHJ1bDZj6kb1uiEL7+8wo5ZDm57k71m4Uau+3Pmzfz5j21QkS2cvypyllaya
58K6Grbf38OWTNfzOtMY7zD3xbCtSZvGkLCHLPwykoYe1RwMbZqTv23Vnvl2
Bo55iyztZtU8f745/rzq8VVz9bz+TJYfD06uoLWm/haGxNy/5EgYo8Zwk57k
71myUXs1Ms9ldTJ3sCFRBSepTVRzPJQtnOfjt1a10s7HKejMZFX36JmHv83+
RQwJuH+9wTDKw2bM/zJ6Mr9tyYYsPJ75wgeS+dsZnqX4yMsspUrUYtbO89e9
FF9p5+N81Z/GyxmCr1DTKoXPYYoEdkY7ZLFVk1wmfKLkr6Qn89uWbMjCqyaZ
8dvJnKVUiVrM2nnu3FT25B06cxh5PPgKBe00VwI7o+1f6dj+M1HmV9KZ9j1L
NmSv1k4y4+fzfJZ+5kzUYhbOc8++si1v0pm9hvL1z8aZub6IzlCf2brlp840
xEObUdtgeGCZ9e/V5hnm+nxGZann2fxZWs+qqf66qPjuOhtgc/bozFs88w3D
lLLNRDnsCbV/jaM2/6h4aDCwgw2PLa3Xv53CbKlqkW135czSkpZMdXlFl0vu
fJwzj3Xj4Eil7DdRDntC7Vzj8BTNkvOVZNsDs8iWt7QtqyeqfbK0pM/B2xEN
cLmc8pI7H+erznRVJTw4WB37TZTDnlB71jg8PxPlfBn9Cd+2ZD2rviNpOT+f
IR2mPKA5njxZWtXn4O2IegXXcjas83G+6kxX7eOK+JiJukdzqD0LDO7DtmCS
J3wZQxK+Z9WGfDuFZ3u+5TyF6Ikq2GEWyNLC1kt4cDlnwzof56gzUQ2pVsTH
TJTD5l7XvMaqTdgQTP6cL+Ay21pNQc/CLx9c5tvp7zCXm7M5S6kStar1Eh5c
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
hQ==
    "], {{0, 924}, {984, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{321.69999999999914`, Automatic},
  ImageSizeRaw->{984, 924},
  PlotRange->{{0, 984}, {0, 
   924}}]], "Input",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzt3Qe4ZFlVPvzLvbdvh0nNMDMMQ84gDEkdogEVRcAwgopIcARRDAQDoqKC
gggoSRFBUBSRKAIKKsGIKIIo0YggIEYURcRc3/rtvd9Tp2uqq2/36P/D5/E8
T93uOnXCDiu8K+y1P+eSb/yqr/i6S77xAfe95Bqf9fWXPPirHnDfb7jGZz7o
6+vUzuW2ti73lPp86zW2/H+xtTX92XnXYrH44Phstb9Pav/d2tr5p8Xy2Gp/
n7QYP/3dPn/6uPZ3Z/Hv//7vi//6r/9aXn7ftZffcFz+lV/5lYtrXvOaiz/6
oz/aet849+Y3v3nxnd/5nYsXvOAFW9++8e6rXvWqflw85jGPme7+oR/6oXbu
sz7rs05w98d93Me1K7/8y798uvtHf/RH27l73OMe+7z7AQ94wLh7d7r79re/
/eJf/uVfHn7KD9jZ2Vm85z3vOfUH7O3tLf7sz/7s/8cHbG9vL9797nef+gM+
9VM/dfHRj350fw84tTm84Q1v2K78nu/5nkvd/YVf+IUnuPsGN7hBu/Jtb3vb
1hXHuX/8x3+crnvDKT/xd37nd7ZOb+cOLr71W791cfe7333xJV/yJYsv+qIv
WnzBF3xB+/5TP/VTdUe/7/u+7/saF33oQx/a2mvnDiCfxdd+7dcu7nCHOyy+
4Ru+AVNu/fy4/l3vetfil37pl0xwXXnpVl55TEXRcLvO5y1vecvBcemv/dqv
Lf7mb/6mfbvbSXboQGP5IZZCKFvbTUjtecn0kDDyK1/5ygNjLH7v935vcfbZ
Zy+ueMUramf72bj867/+69aN2zWHWt9udatbLW5605su7nnPey4e/ehHLy68
8MLFJ3/yJ3vUBaNlRVmLv/7rv9aP6mj9zVi+/OUvX3zGZ3yG8RhjubP4i7/4
i8VXfdVXLf7+7/9+6yqjLR/84AcXP/MzP7N45zvf2QbjTW960+JP//RPUUB1
p9/3b//2b4vnPOc5i9e//vVb12jn9ki1xc1vfvMmu6585Su3dv3yL/9ybvnA
Bz6w+Oqv/urFwYMHx6jsLD7t0z6tCUVX5LpMV3V/K336yZ/8ycXVrna1dlfu
fdzjHteasbx3b/HGN75x8emf/unt/jPPPHPx0z/904v//M//vHA85h/+4R8W
T3rSkxZPecpT6pYnP/nJde7bv/3bFze72c20dFDd7uKHf/iHF9e4xjUa5f3G
b/zGFfdNCWeMISwRvTh69OjiDW94w+LDH/7w4id+4icWZ5xxxuJVr3rV1M+/
/Mu/XJx22mmLT/zET6xX9in+yEc+srjxjW/cXv7nf/7n7UXFwu351fAbz8j0
0KFDbSB2x3B4ZZp2/nhccVJ7haG43OUu14Tv7u7u4vTTT1/84i/+4vagW8R3
hStcob0FU/3hH/7haNGO/7fzX/d1XzeYZ2fxH//xH4vrXve648X+HmyPrWum
4THb7isxNgjk6OLa17724vDhw41pTcMtb3nL1qzf/M3fbPe89a1vbfdc/vKX
XzzqUY9aPOEJT1icf/75bURKAGyP2VnRRVcaY/6N3/iNrbMU7I/8yI8svu3b
vi3jNsb8IDJfXO9612vnf/AHf3DxKZ/yKe3/T3va07ZCJGn5cnAPL77jO76j
tRAGqGvb7w960INaj83rM5/5zK3zTpJKdkCDRiVf8zVfM1EFJseAc464053u
1O794z/+40kw4hrnHv/4xx9z75EjRxaf8AmfMHpzcPFzP/dz7bo73vGObXyN
9Z3vfOfFRRddNLjr0OJ973tfmxfX4R6q5+pXv3r7/sVf/MU7g0xwz/3ud792
+rM/+7ORwUQm5FIx9uL973//eOxhjDcxIw4rTdZkGgV8oxvdaPFP//RPU9MN
pOugpau3c6ctfvd3f7dNRo6ShU0+mnck6EC6dc30nFe/+tXtOd/yLd+ytZFe
dpqMHDw2Lj290QORmuPBD35wY5pf/dVfbd+pDfNNBBctXDha+iu/8iuN9Equ
NEFfUrG97YEPfGC7zURrQcmaqaV+NxKk6rn7Ip23v/3tW2eOcyXv27n73ve+
kyz/+Z//+Xbu+c9//kQmZLhz3/Vd3zWdu9a1rtXYt4TNIJO9RtRIoKRCe/l7
3/vexcte9rIrDyoiR43DE5/4xAYE6Bjc+dCHPnRSs9WU9qqnP/3pE1mEB0ug
TtKjOHlx29veFklMg2F8kUTJxGPkI6nyvd/7vVvXGeciC2vap/f+wi/8QjtH
jq7qkHvd616DnPaI+zZ3BQ1aF8mBovKMCsFH8BQzbN2knTuyeMUrXrE499xz
F3/yJ38yzSPZ6yjGa68ozZi3Pu95z2uniudOMKWBZy960Yu2zhrnjKdzhSKm
KUWLn//5n98gTt7y4z/+4w2CllqeptTzSFLnbjLOIUbPe/GLX7x1tXHupS99
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
ccZf+/8P5DInnzE+W+3vk57Rf7rc/wdov7HA\
\>"]]], "Text",
 CellChangeTimes->{
  3.749145095523737*^9, {3.749391901425003*^9, 3.7493919081954155`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cppClassName", "=", "\"\<RK5DP_6M\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methodName", "=", "\"\<RK5(4)6M\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "methodDescription", "=", 
   "\"\<Runge-Kutta, Dormand and Prince method, variant 3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "5"], "0", "0", "0", "0"},
       {
        FractionBox["3", "40"], 
        FractionBox["9", "40"], "0", "0", "0"},
       {
        FractionBox["3", "10"], 
        RowBox[{"-", 
         FractionBox["9", "10"]}], 
        FractionBox["6", "5"], "0", "0"},
       {
        FractionBox["226", "729"], 
        RowBox[{"-", 
         FractionBox["25", "27"]}], 
        FractionBox["880", "729"], 
        FractionBox["55", "729"], "0"},
       {
        RowBox[{"-", 
         FractionBox["181", "270"]}], 
        FractionBox["5", "2"], 
        RowBox[{"-", 
         FractionBox["266", "297"]}], 
        RowBox[{"-", 
         FractionBox["91", "27"]}], 
        FractionBox["189", "55"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[DoubleStruckB]1", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["19", "216"], ",", "0", ",", 
     FractionBox["1000", "2079"], ",", 
     RowBox[{"-", 
      FractionBox["125", "216"]}], ",", 
     FractionBox["81", "88"], ",", 
     FractionBox["5", "56"]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]2", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["31", "540"], ",", "0", ",", 
      FractionBox["190", "297"], ",", 
      RowBox[{"-", 
       FractionBox["145", "108"]}], ",", 
      FractionBox["351", "220"], ",", 
      FractionBox["1", "20"]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
   "\"\<MoL descriptors (generator).nb\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, {3.749145162759855*^9, 3.749145333174554*^9}, 
   3.7491461752640333`*^9, {3.749391320489483*^9, 3.7493913243270893`*^9}, {
   3.749391778468787*^9, 3.749391780574791*^9}, {3.7493919175398316`*^9, 
   3.749392129092803*^9}, 3.7493926782922688`*^9, {3.7493927107247252`*^9, 
   3.7493927147495327`*^9}, {3.749438131421957*^9, 3.749438169548424*^9}, {
   3.749439485762536*^9, 3.7494394860901375`*^9}, {3.7494401745563498`*^9, 
   3.749440176428353*^9}, {3.749440388715926*^9, 3.749440390525529*^9}, {
   3.7495325546523323`*^9, 3.7495325549643326`*^9}, {3.7495327109022064`*^9, 
   3.7495327119474087`*^9}}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"The two choices of \[Alpha] and \[Beta]:\"\>", TextForm]], 
    "InlineText"],
   Text["The two choices of \[Alpha] and \[Beta]:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.7499626003331804`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0"},
    {
     FractionBox["5", "8"], 
     FractionBox["3", "8"], "0", "0", "0", "0", 
     FractionBox["5", "8"], 
     FractionBox["3", "8"], "0", "0", "0", "0"},
    {"2", "3", 
     RowBox[{"-", "4"}], "0", "0", "0", "2", "3", 
     RowBox[{"-", "4"}], "0", "0", "0"},
    {
     FractionBox["22", "2187"], 
     FractionBox["55", "729"], 
     RowBox[{"-", 
      FractionBox["200", "2187"]}], 
     FractionBox["2200", "2187"], "0", "0", 
     FractionBox["22", "2187"], 
     FractionBox["55", "729"], 
     RowBox[{"-", 
      FractionBox["200", "2187"]}], 
     FractionBox["2200", "2187"], "0", "0"},
    {
     RowBox[{"-", 
      FractionBox["322", "495"]}], 
     RowBox[{"-", 
      FractionBox["21", "11"]}], 
     FractionBox["400", "99"], 
     FractionBox["4375", "99"], 
     RowBox[{"-", 
      FractionBox["2457", "55"]}], "0", 
     RowBox[{"-", 
      FractionBox["322", "495"]}], 
     RowBox[{"-", 
      FractionBox["21", "11"]}], 
     FractionBox["400", "99"], 
     FractionBox["4375", "99"], 
     RowBox[{"-", 
      FractionBox["2457", "55"]}], "0"},
    {
     FractionBox["5", "504"], 
     FractionBox["55", "168"], 
     RowBox[{"-", 
      FractionBox["125", "693"]}], 
     RowBox[{"-", 
      FractionBox["625", "168"]}], 
     FractionBox["189", "44"], 
     FractionBox["15", "56"], 
     FractionBox["23", "180"], 
     FractionBox["11", "12"], 
     RowBox[{"-", 
      FractionBox["950", "693"]}], 
     RowBox[{"-", 
      FractionBox["25", "12"]}], 
     FractionBox["162", "55"], 
     FractionBox["13", "28"]},
    {
     FractionBox["1", "5"], 
     FractionBox["9", "40"], 
     FractionBox["6", "5"], 
     FractionBox["55", "729"], 
     FractionBox["189", "55"], 
     FractionBox["5", "56"], 
     FractionBox["1", "5"], 
     FractionBox["9", "40"], 
     FractionBox["6", "5"], 
     FractionBox["55", "729"], 
     FractionBox["189", "55"], 
     FractionBox["1", "20"]}
   },
   AutoDelete->False,
   GridBoxDividers->{"ColumnsIndexed" -> {1 -> GrayLevel[0], 7 -> {
         GrayLevel[0], 
         Thickness[Large]}, -1 -> GrayLevel[0]}, 
     "RowsIndexed" -> {1 -> GrayLevel[0], -2 -> {
         Thickness[Large], 
         RGBColor[1, 0, 0]}, -1 -> GrayLevel[0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.74996260037998*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RK5DP_6M = \\n{\\n    \\\"RK5(4)6M\\\", 6, 5,\\n \
   { { 1., 0., 0., 0., 0., 0.},\\n      { 5./8., 3./8., 0., 0., 0., 0.},\\n   \
   { 2., 3., -4., 0., 0., 0.},\\n      { 22./2187., 55./729., -200./2187., \
2200./2187., 0., 0.},\\n      { -322./495., -21./11., 400./99., 4375./99., \
-2457./55., 0.},\\n      { 5./504., 55./168., -125./693., -625./168., \
189./44., 15./56. },\\n      // Alternative alpha[N-1]:\\n      { 23./180., \
11./12., -950./693., -25./12., 162./55., 13./28.}\\n    },\\n    { 1./5., \
9./40., 6./5., 55./729., 189./55., 5./56.},\\n    // Alternative beta:\\n    \
{ 1./5., 9./40., 6./5., 55./729., 189./55., 1./20.}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.74996260045798*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Sanity check:\"\>", TextForm]], "InlineText"],
   Text["Sanity check:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.749962600613981*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.3561960494936681741305281244813456850248943970737928435468`30.", 
     "0.3487115879566363382767957617826183819117629529194485764679`30.\
018931061065086"},
    {"0.3971175046806262574106187107773157843638630899324389264982`29.\
959140290883386", 
     "0.3867617741867449817512356157903972932435015973688550239794`29.\
982849263575705"},
    {"0.4226015887526473358133417847101171883680563426248683927559`29.\
935372396407413", 
     "0.4101345523827791713203829769973359119722007639576839083636`29.\
962360873795383"},
    {"0.5021150572807497593195221057322866377303249037734725565342`29.\
525654892113444", 
     "0.481280602260458273830621409267821973411724105950671997643`29.\
564465092781777"},
    {"0.5213023597250093050528224660670597520591550997954614782467`29.\
514129058531772", 
     "0.4980099288831485834356541640419757710762917991654907897382`29.\
556172459552094"},
    {"0.6232046308823923003229395582504316592328790812809151982725`28.\
8135675843564", 
     "0.5836403525958988739809906971937322383480677483893074784241`28.\
87551962794133"},
    {"0.6260644906623281659103938551833689860418650262774288531709`29.\
365824483226806", 
     "0.6260644906623281659103938551833689860418650262774288531709`29.\
365824483226806"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.749962600738781*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``29.268175415540593", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.749962600754381*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.3561960494936681741305281244813456850248943970737928435468`30.", 
     "0.3487115879566363382767957617826183819117629529194485764679`30.\
018931061065086"},
    {"0.3971175046806262574106187107773157843638630899324389264982`29.\
959140290883386", 
     "0.3867617741867449817512356157903972932435015973688550239794`29.\
982849263575705"},
    {"0.4226015887526473358133417847101171883680563426248683927559`29.\
935372396407413", 
     "0.4101345523827791713203829769973359119722007639576839083636`29.\
962360873795383"},
    {"0.5021150572807497593195221057322866377303249037734725565342`29.\
525654892113444", 
     "0.481280602260458273830621409267821973411724105950671997643`29.\
564465092781777"},
    {"0.5213023597250093050528224660670597520591550997954614782467`29.\
514129058531772", 
     "0.4980099288831485834356541640419757710762917991654907897382`29.\
556172459552094"},
    {"0.6232046308823923003229395582504316592328790812809151982725`28.\
8135675843564", 
     "0.5836403525958988739809906971937322383480677483893074784241`28.\
87551962794133"},
    {"0.6260813396351986185034639203085421172742557878385527338838`29.\
18168041358561", 
     "0.6260813396351986185034639203085421172742557878385527338838`29.\
18168041358561"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7499626009415812`*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``29.084019658097915", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.749962600957181*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate C++ file with the MoL descriptors", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
  3.749145629185074*^9, 3.749145633958682*^9}, {3.749146187837655*^9, 
  3.74914619063006*^9}, {3.7493918014164276`*^9, 3.7493918110260444`*^9}, {
  3.749392199359627*^9, 3.749392211231248*^9}, {3.7493938011588097`*^9, 
  3.749393803420814*^9}, {3.74939388651896*^9, 3.7493938878761625`*^9}, {
  3.749439727455762*^9, 3.7494397502474017`*^9}, {3.7494399871816177`*^9, 
  3.749439992485627*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<../include/numMethods/embeddedMoL.h\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "\"\</**\n *  @file      embeddedMoL.h\n *  @brief     Descriptors for \
embedded methods which allow adaptive stepsize control.\n *  @warning   This \
file was auto-generated from Mathematica. Do not edit.\n *  @authors   Mikica \
Kocic, Francesco Torsello\n *  @copyright GNU General Public License (GPLv3).\
\n */\n\n#ifndef _EMBEDDED_MOL_H_INCLUDED\n#define _EMBEDDED_MOL_H_INCLUDED\n\
\>\"", "<>", "cppCode", "<>", 
    "\"\<\n#endif // _EMBEDDED_MOL_H_INCLUDED\n\>\""}], ",", "\"\<Text\>\""}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7494397548962097`*^9, 3.7494398879654436`*^9}, {
   3.749439974826396*^9, 3.749439979880805*^9}, {3.7494825329806223`*^9, 
   3.749482594702731*^9}, 3.749482671439266*^9, {3.7495265181254516`*^9, 
   3.749526561743128*^9}, {3.749526628230445*^9, 3.749526742391445*^9}, 
   3.7495267733886995`*^9, {3.749962507181816*^9, 3.7499625574919047`*^9}, {
   3.7499626770073147`*^9, 3.7499626911097393`*^9}, {3.749962788517311*^9, 
   3.749962867034249*^9}, {3.7499630284945326`*^9, 3.7499630932970467`*^9}, {
   3.74998118484624*^9, 3.7499811909926405`*^9}}],

Cell[BoxData["\<\"C:\\\\Work\\\\SU\\\\Bigravity\\\\bim-ss-3+1\\\\Mathematica\\\
\\algorithms\\\\../bim-solver/src/numMethods/embeddedMoL.h\"\>"], "Output",
 CellChangeTimes->{
  3.749532846918845*^9, 3.749962602033583*^9, {3.749962682623325*^9, 
   3.749962691858541*^9}, 3.74996286765825*^9, {3.7499630534545765`*^9, 
   3.7499630939990473`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1264, 702},
WindowMargins->{{447, Automatic}, {Automatic, 175}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Section"], FontFamily -> "Arial", FontSize -> 28, FontWeight -> 
    "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsection"], CellMargins -> {{35, 3.}, {8., 12.}}, FontFamily -> 
    "Arial", FontSize -> 20, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubsection"], CellMargins -> {{40, Inherited}, {2, 10}}, 
    FontFamily -> "Arial", FontSize -> 19, FontWeight -> "Plain", FontSlant -> 
    "Plain", FontVariations -> {
     "StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Text"], CellMargins -> {{40, 10}, {7, 7}}, FontFamily -> 
    "Cambria", FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemParagraph"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubitemParagraph"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemParagraph"], FontFamily -> "Cambria", FontSize -> 14,
     FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubitemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["mk-test"], CellFrame -> {{0.3, 0}, {0, 0.3}}, PageBreakBelow -> 
    False, CellChangeTimes -> {3.704299599624503*^9}, MenuSortingValue -> 
    10000, FontFamily -> "Cambria", FontSize -> 14, FontWeight -> "Plain", 
    FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}]}, 
  Visible -> False, FrontEndVersion -> 
  "10.3 for Microsoft Windows (64-bit) (October 9, 2015)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 207, 4, 53, "Text"],
Cell[768, 26, 28, 0, 38, "Text"],
Cell[799, 28, 104, 1, 38, "Text"],
Cell[906, 31, 585, 15, 41, "Text"],
Cell[CellGroupData[{
Cell[1516, 50, 228, 3, 78, "Section"],
Cell[CellGroupData[{
Cell[1769, 57, 502, 18, 48, "Subsubsection"],
Cell[2274, 77, 1792, 41, 39, "Text"],
Cell[4069, 120, 201, 5, 36, "Input"],
Cell[4273, 127, 983, 28, 36, "Input"],
Cell[5259, 157, 97, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[5381, 162, 896, 21, 36, "Input"],
Cell[CellGroupData[{
Cell[6302, 187, 2952, 93, 52, "Echo"],
Cell[9257, 282, 2914, 93, 52, "Echo"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12232, 382, 591, 18, 45, "Subsubsection"],
Cell[12826, 402, 105, 1, 38, "Text"],
Cell[12934, 405, 725, 19, 38, "Input"],
Cell[13662, 426, 343, 11, 39, "Text"],
Cell[14008, 439, 445, 13, 48, "Input"],
Cell[14456, 454, 99, 1, 47, "Text"],
Cell[CellGroupData[{
Cell[14580, 459, 530, 13, 75, "Input"],
Cell[CellGroupData[{
Cell[15135, 476, 88, 2, 36, "Echo"],
Cell[15226, 480, 218, 7, 36, "Echo"],
Cell[15447, 489, 332, 11, 36, "Echo"],
Cell[15782, 502, 443, 15, 36, "Echo"],
Cell[16228, 519, 457, 15, 36, "Echo"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16746, 541, 514, 17, 56, "Subsubsection"],
Cell[17263, 560, 2840, 67, 281, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20140, 632, 649, 24, 61, "Subsubsection"],
Cell[20792, 658, 2294, 57, 222, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23123, 720, 430, 13, 56, "Subsubsection"],
Cell[23556, 735, 3573, 85, 368, "Input"],
Cell[CellGroupData[{
Cell[27154, 824, 329, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[27508, 835, 170, 5, 36, "Echo"],
Cell[27681, 842, 170, 5, 36, "Echo"],
Cell[27854, 849, 172, 5, 36, "Echo"],
Cell[28029, 856, 148, 4, 36, "Echo"],
Cell[28180, 862, 149, 4, 36, "Echo"],
Cell[28332, 868, 296, 10, 58, "Echo"],
Cell[28631, 880, 268, 9, 58, "Echo"],
Cell[28902, 891, 718, 26, 58, "Echo"],
Cell[29623, 919, 576, 21, 58, "Echo"],
Cell[30202, 942, 266, 9, 58, "Echo"],
Cell[30471, 953, 1656, 61, 62, "Echo"],
Cell[32130, 1016, 1173, 43, 62, "Echo"],
Cell[33306, 1061, 521, 19, 62, "Echo"],
Cell[33830, 1082, 243, 8, 62, "Echo"],
Cell[34076, 1092, 158, 4, 36, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[34261, 1100, 127, 1, 47, "Text"],
Cell[34391, 1103, 1510, 39, 103, "Input"],
Cell[35904, 1144, 1014, 28, 103, "Input"],
Cell[36921, 1174, 1320, 28, 218, "Input"],
Cell[38244, 1204, 1925, 40, 305, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40218, 1250, 146, 2, 97, "Section"],
Cell[40367, 1254, 1432, 36, 125, "Input"],
Cell[CellGroupData[{
Cell[41824, 1294, 1329, 29, 105, "Input"],
Cell[43156, 1325, 1655, 52, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44848, 1382, 1301, 31, 103, "Input"],
Cell[46152, 1415, 850, 25, 152, "Output"],
Cell[47005, 1442, 227, 6, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47269, 1453, 491, 9, 45, "Input"],
Cell[47763, 1464, 369, 6, 321, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48181, 1476, 539, 7, 121, "Section"],
Cell[48723, 1485, 147, 2, 58, "Text"],
Cell[48873, 1489, 249, 5, 58, "Text"],
Cell[49125, 1496, 287, 6, 97, "Text"],
Cell[49415, 1504, 361, 6, 97, "Text"],
Cell[49779, 1512, 181, 4, 47, "Text"],
Cell[49963, 1518, 148, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[50136, 1525, 331, 4, 52, "Subsubsection"],
Cell[50470, 1531, 4332, 100, 473, "Input"],
Cell[CellGroupData[{
Cell[54827, 1635, 1645, 24, 45, "Input"],
Cell[56475, 1661, 358, 9, 52, "Output"],
Cell[56836, 1672, 2671, 85, 296, "Output"],
Cell[59510, 1759, 815, 12, 493, "Output"],
Cell[60328, 1773, 299, 8, 52, "Output"],
Cell[60630, 1783, 1799, 42, 191, "Output"],
Cell[62432, 1827, 179, 4, 63, "Output"],
Cell[62614, 1833, 1799, 42, 191, "Output"],
Cell[64416, 1877, 180, 4, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64645, 1887, 435, 5, 52, "Subsubsection"],
Cell[65083, 1894, 3255, 92, 513, "Input"],
Cell[CellGroupData[{
Cell[68363, 1990, 1645, 24, 45, "Input"],
Cell[70011, 2016, 360, 9, 52, "Output"],
Cell[70374, 2027, 3235, 100, 336, "Output"],
Cell[73612, 2129, 957, 14, 522, "Output"],
Cell[74572, 2145, 299, 8, 52, "Output"],
Cell[74874, 2155, 1973, 46, 216, "Output"],
Cell[76850, 2203, 180, 4, 63, "Output"],
Cell[77033, 2209, 1975, 46, 216, "Output"],
Cell[79011, 2257, 180, 4, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79240, 2267, 307, 4, 65, "Subsubsection"],
Cell[79550, 2273, 94274, 1552, 463, "Text"],
Cell[CellGroupData[{
Cell[173849, 3829, 4434, 110, 573, "Input"],
Cell[178286, 3941, 360, 9, 52, "Output"],
Cell[178649, 3952, 3237, 100, 336, "Output"],
Cell[181889, 4054, 961, 14, 522, "Output"],
Cell[182853, 4070, 299, 8, 52, "Output"],
Cell[183155, 4080, 1979, 46, 216, "Output"],
Cell[185137, 4128, 180, 4, 63, "Output"],
Cell[185320, 4134, 1975, 46, 216, "Output"],
Cell[187298, 4182, 180, 4, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[187527, 4192, 340, 4, 52, "Subsubsection"],
Cell[187870, 4198, 79278, 1305, 541, "Text"],
Cell[CellGroupData[{
Cell[267173, 5507, 4290, 109, 573, "Input"],
Cell[271466, 5618, 358, 9, 52, "Output"],
Cell[271827, 5629, 3055, 97, 336, "Output"],
Cell[274885, 5728, 888, 13, 522, "Output"],
Cell[275776, 5743, 301, 8, 52, "Output"],
Cell[276080, 5753, 1977, 46, 216, "Output"],
Cell[278060, 5801, 179, 4, 63, "Output"],
Cell[278242, 5807, 1975, 46, 216, "Output"],
Cell[280220, 5855, 179, 4, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[280448, 5865, 422, 5, 52, "Subsubsection"],
Cell[280873, 5872, 68737, 1133, 493, "Text"],
Cell[CellGroupData[{
Cell[349635, 7009, 3955, 99, 533, "Input"],
Cell[353593, 7110, 360, 9, 52, "Output"],
Cell[353956, 7121, 2460, 79, 225, "Output"],
Cell[356419, 7202, 771, 11, 395, "Output"],
Cell[357193, 7215, 299, 8, 42, "Output"],
Cell[357495, 7225, 1797, 42, 153, "Output"],
Cell[359295, 7269, 178, 4, 51, "Output"],
Cell[359476, 7275, 1797, 42, 153, "Output"],
Cell[361276, 7319, 178, 4, 51, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[361503, 7329, 529, 7, 42, "Subsubsection"],
Cell[CellGroupData[{
Cell[362057, 7340, 1307, 23, 336, "Input"],
Cell[363367, 7365, 347, 5, 36, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
