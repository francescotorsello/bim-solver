(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    265818,       5779]
NotebookOptionsPosition[    256600,       5530]
NotebookOutlinePosition[    259724,       5598]
CellTagsIndexPosition[    259681,       5595]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Construct a C++ descriptor for MoL", "Text",
 CellChangeTimes->{{3.7490972408813887`*^9, 3.7490972725338445`*^9}, {
  3.749133713175959*^9, 3.7491337408504076`*^9}},
 FontSize->24,
 FontWeight->"Bold"],

Cell["Mikica Kocic", "Text"],

Cell["Created 2018-10-20", "Text",
 CellChangeTimes->{{3.7490972259209623`*^9, 3.7490972280893664`*^9}}],

Cell[TextData[{
 "This notebook calculates the MoL coefficients ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "i"], TraditionalForm]]],
 " from the given Butcher tableau."
}], "Text",
 CellChangeTimes->{{3.7490936145169287`*^9, 3.7490936508025923`*^9}, {
  3.7490938980235167`*^9, 3.7490938988347178`*^9}, {3.749097186838893*^9, 
  3.7490971938433056`*^9}, {3.7491130979352427`*^9, 3.7491130985748434`*^9}, {
  3.7491337597420406`*^9, 3.7491337787740746`*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Section",
 CellChangeTimes->{{3.7490641428546777`*^9, 3.749064158485905*^9}, {
   3.7490642835393257`*^9, 3.749064345019034*^9}, 3.7490936115061235`*^9, {
   3.7491331090073524`*^9, 3.7491331101773543`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "MoL algorithm (expressions with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "i"], TraditionalForm]]],
 " involving ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Y", 
    RowBox[{"(", "i", ")"}]], TraditionalForm]]],
 ")"
}], "Subsubsection",
 CellChangeTimes->{{3.749059348938057*^9, 3.74905940191575*^9}, {
  3.749093905043529*^9, 3.749093956274019*^9}}],

Cell[TextData[{
 "We denote ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Y", 
    RowBox[{"(", "i", ")"}]], TraditionalForm]]],
 " as ",
 Cell[BoxData[
  RowBox[{"LYs", "[", "i", "]"}]],
  CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
   3.7490600620511093`*^9}, {3.7490601189444094`*^9, 
   3.7490601229224167`*^9}, {3.7490602578938537`*^9, 
   3.7490602608422585`*^9}, {3.7490617715539126`*^9, 
   3.7490617729579153`*^9}, {3.7490632700779448`*^9, 3.7490632740871515`*^9}}],
 ". We also define  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"LYs", "[", "i", "]"}], ":=", " ", 
   RowBox[{"L", "[", 
    RowBox[{"Ys", "[", "i", "]"}], "]"}]}]],
  CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
   3.7490600620511093`*^9}, {3.7490601189444094`*^9, 
   3.7490601229224167`*^9}, {3.7490602578938537`*^9, 
   3.7490602608422585`*^9}, {3.7490617715539126`*^9, 
   3.7490617729579153`*^9}, {3.7490632700779448`*^9, 3.7490632740871515`*^9}}],
 " which further correpsonds to ",
 Cell[BoxData[
  SubscriptBox["k", 
   RowBox[{"i", "+", "1"}]]],
  CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
   3.7490600620511093`*^9}, {3.7490601189444094`*^9, 
   3.7490601229224167`*^9}, {3.7490602578938537`*^9, 
   3.7490602608422585`*^9}, {3.7490617715539126`*^9, 
   3.7490617729579153`*^9}, {3.7490632700779448`*^9, 3.7490632740871515`*^9}}],
 ". "
}], "Text",
 CellChangeTimes->{{3.749113274028352*^9, 3.7491133046980057`*^9}, {
  3.7491133470676804`*^9, 3.74911336973452*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ys", "[", "0", "]"}], ":=", 
  RowBox[{"Y", "[", "m", "]"}]}]], "Input",
 CellChangeTimes->{{3.749054225910042*^9, 3.749054255659294*^9}, 
   3.7491131732677746`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ys", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", 
     SubscriptBox["\[Beta]", 
      RowBox[{"i", "-", "1"}]], 
     RowBox[{"LYs", "[", 
      RowBox[{"i", "-", "1"}], "]"}]}], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Alpha]", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "j"}]], 
       RowBox[{"Ys", "[", "j", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", 
        RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}]}], "//", 
   RowBox[{
    RowBox[{"Collect", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LYs", "[", "n_", "]"}], ",", "Simplify"}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.749054017852476*^9, 3.7490541049162292`*^9}, {
  3.74905415093631*^9, 3.749054153354314*^9}, {3.7490541842891684`*^9, 
  3.7490542060980067`*^9}, {3.749054272819324*^9, 3.7490542879669504`*^9}, {
  3.7490948723856277`*^9, 3.749094884428849*^9}}],

Cell["Sanity check:", "Text",
 CellChangeTimes->{{3.7491133820117416`*^9, 3.749113384492146*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Echo", "@", 
     RowBox[{"Ys", "[", "4", "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"LYs", "[", "i_", "]"}], "\[RuleDelayed]", 
       SubscriptBox["k", 
        RowBox[{"i", "+", "1"}]]}], ",", 
      RowBox[{
       RowBox[{"Y", "[", "m_", "]"}], "\[RuleDelayed]", 
       SubscriptBox["y", "m"]}]}], "}"}]}], "//", "Echo"}], ";"}]], "Input",
 CellChangeTimes->{{3.7490541080674343`*^9, 3.7490541102202387`*^9}, {
   3.7490541641651335`*^9, 3.7490541770195556`*^9}, {3.7490543402582426`*^9, 
   3.7490544512992373`*^9}, {3.7490593378308372`*^9, 
   3.7490593383456383`*^9}, {3.7490937038738856`*^9, 3.749093704201486*^9}, 
   3.7490948985936737`*^9, {3.7491131772301817`*^9, 3.749113177448582*^9}, {
   3.749113208742237*^9, 3.749113221066259*^9}, {3.749113481836317*^9, 
   3.749113505376758*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", " ", 
   RowBox[{"LYs", "[", "3", "]"}], " ", 
   SubscriptBox["\[Beta]", "3"]}], "+", 
  RowBox[{"h", " ", 
   RowBox[{"LYs", "[", "2", "]"}], " ", 
   SubscriptBox["\[Beta]", "2"], " ", 
   SubscriptBox["\[Alpha]", 
    RowBox[{"3", ",", "3"}]]}], "+", 
  RowBox[{"h", " ", 
   RowBox[{"LYs", "[", "1", "]"}], " ", 
   SubscriptBox["\[Beta]", "1"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "2"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"2", ",", "2"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
  RowBox[{"h", " ", 
   RowBox[{"LYs", "[", "0", "]"}], " ", 
   SubscriptBox["\[Beta]", "0"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "1"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"2", ",", "1"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"1", ",", "1"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"3", ",", "2"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"2", ",", "2"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "0"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"0", ",", "0"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "1"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"1", ",", "0"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"0", ",", "0"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"1", ",", "1"}]]}]}], ")"}], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "2"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"2", ",", "0"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"1", ",", "0"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"2", ",", "2"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"0", ",", "0"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Alpha]", 
            RowBox[{"2", ",", "1"}]], "+", 
           RowBox[{
            SubscriptBox["\[Alpha]", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["\[Alpha]", 
             RowBox[{"2", ",", "2"}]]}]}], ")"}]}]}], ")"}], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}]}], ")"}], " ", 
   RowBox[{"Y", "[", "m", "]"}]}]}]], "Echo",
 CellChangeTimes->{3.7687047206362*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", " ", 
   SubscriptBox["k", "4"], " ", 
   SubscriptBox["\[Beta]", "3"]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "3"], " ", 
   SubscriptBox["\[Beta]", "2"], " ", 
   SubscriptBox["\[Alpha]", 
    RowBox[{"3", ",", "3"}]]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "2"], " ", 
   SubscriptBox["\[Beta]", "1"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "2"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"2", ",", "2"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
  RowBox[{
   SubscriptBox["y", "m"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "0"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"0", ",", "0"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "1"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"1", ",", "0"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"0", ",", "0"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"1", ",", "1"}]]}]}], ")"}], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "2"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"2", ",", "0"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"1", ",", "0"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"2", ",", "2"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"0", ",", "0"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Alpha]", 
            RowBox[{"2", ",", "1"}]], "+", 
           RowBox[{
            SubscriptBox["\[Alpha]", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["\[Alpha]", 
             RowBox[{"2", ",", "2"}]]}]}], ")"}]}]}], ")"}], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "1"], " ", 
   SubscriptBox["\[Beta]", "0"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"3", ",", "1"}]], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"2", ",", "1"}]], " ", 
      SubscriptBox["\[Alpha]", 
       RowBox[{"3", ",", "3"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"1", ",", "1"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"3", ",", "2"}]], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"2", ",", "2"}]], " ", 
         SubscriptBox["\[Alpha]", 
          RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}], ")"}]}]}]], "Echo",
 CellChangeTimes->{3.7687047207972*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Algorithm based on the Butcher tableau (expressions with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "i"], TraditionalForm]]],
 " involving ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "i"], TraditionalForm]]],
 ")"
}], "Subsubsection",
 CellChangeTimes->{{3.749059348938057*^9, 3.7490593915573316`*^9}, {
  3.749093835647317*^9, 3.7490938591877584`*^9}, {3.749093890878704*^9, 
  3.7490938942951097`*^9}, {3.749093942920396*^9, 3.7490939476628036`*^9}}],

Cell["The intermediate steps:", "Text",
 CellChangeTimes->{{3.749093985820471*^9, 3.749093998004092*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["bt$k", "s_"], ":=", 
  RowBox[{
   SubscriptBox["y", "m"], "+", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"h", " ", 
      SubscriptBox["a", 
       RowBox[{
        RowBox[{"s", "-", "1"}], ",", "j"}]], 
      SubscriptBox["k", "j"]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"s", "-", "1"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7490545747890544`*^9, 3.749054594211088*^9}, {
  3.7490569608994627`*^9, 3.749057023315172*^9}, {3.749057054187626*^9, 
  3.749057054359226*^9}, {3.749057151952998*^9, 3.7490571557126045`*^9}, {
  3.749058370361938*^9, 3.7490583714383397`*^9}, {3.749094081760639*^9, 
  3.749094083726243*^9}}],

Cell[TextData[{
 "The cummulative step: ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["y", 
    RowBox[{"m", "+", "1"}]], "\[Equal]", 
   RowBox[{
    SubscriptBox["y", "m"], "+"}]}]],
  CellChangeTimes->{{3.7490570849664803`*^9, 3.7490571032809124`*^9}}],
 " ..."
}], "Text",
 CellChangeTimes->{{3.749093990672079*^9, 3.7490940276753445`*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["bt$y", "s_"], ":=", 
  RowBox[{
   SubscriptBox["y", "m"], "+", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"h", " ", 
      SubscriptBox["b", "j"], 
      SubscriptBox["k", "j"]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "s"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7490570849664803`*^9, 3.7490571032809124`*^9}, {
  3.7490940341961555`*^9, 3.749094100355872*^9}}],

Cell["Sanity check:", "Text",
 CellChangeTimes->{{3.7491134042105803`*^9, 3.7491134059889836`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Echo", "@", 
     SubscriptBox["bt$k", "#"]}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "4", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Echo", "@", 
   SubscriptBox["bt$y", "4"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7490570311463857`*^9, 3.7490570469492135`*^9}, {
  3.7490593425420456`*^9, 3.749059342807246*^9}, {3.7490940857230463`*^9, 
  3.7490940873454494`*^9}, {3.749113410076191*^9, 3.749113459216277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["y", "m"]], "Echo",
 CellChangeTimes->{3.7687047208482*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["y", "m"], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "1"], " ", 
   SubscriptBox["a", 
    RowBox[{"1", ",", "1"}]]}]}]], "Echo",
 CellChangeTimes->{3.7687047208752003`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["y", "m"], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "1"], " ", 
   SubscriptBox["a", 
    RowBox[{"2", ",", "1"}]]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "2"], " ", 
   SubscriptBox["a", 
    RowBox[{"2", ",", "2"}]]}]}]], "Echo",
 CellChangeTimes->{3.7687047209012003`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["y", "m"], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "1"], " ", 
   SubscriptBox["a", 
    RowBox[{"3", ",", "1"}]]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "2"], " ", 
   SubscriptBox["a", 
    RowBox[{"3", ",", "2"}]]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["k", "3"], " ", 
   SubscriptBox["a", 
    RowBox[{"3", ",", "3"}]]}]}]], "Echo",
 CellChangeTimes->{3.7687047209242*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", " ", 
   SubscriptBox["b", "1"], " ", 
   SubscriptBox["k", "1"]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["b", "2"], " ", 
   SubscriptBox["k", "2"]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["b", "3"], " ", 
   SubscriptBox["k", "3"]}], "+", 
  RowBox[{"h", " ", 
   SubscriptBox["b", "4"], " ", 
   SubscriptBox["k", "4"]}], "+", 
  SubscriptBox["y", "m"]}]], "Echo",
 CellChangeTimes->{3.7687047209522*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solve the coefficients ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "i"], TraditionalForm]]],
 " from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "i"], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.7490574262482796`*^9, 3.74905743206709*^9}, {
  3.7490594063929577`*^9, 3.7490594144893723`*^9}, {3.7490630224431095`*^9, 
  3.7490630405235415`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol1", "[", "order_", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{
          RowBox[{
           SubscriptBox["bt$k", "s"], "-", 
           RowBox[{"Ys", "[", 
            RowBox[{"s", "-", "1"}], "]"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"LYs", "[", "i_", "]"}], "\[RuleDelayed]", 
             SubscriptBox["k", 
              RowBox[{"i", "+", "1"}]]}], ",", 
            RowBox[{
             RowBox[{"Y", "[", "m_", "]"}], "\[RuleDelayed]", 
             SubscriptBox["y", "m"]}]}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"tmp", "/.", 
            RowBox[{
             SubscriptBox["k", "n_"], "\[RuleDelayed]", 
             SuperscriptBox["X", "n"]}]}], ",", "X"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"Thread", "[", 
          RowBox[{"tmp", "\[Equal]", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               SubscriptBox["\[Alpha]", 
                RowBox[{
                 RowBox[{"s", "-", "2"}], ",", "j"}]], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "0", ",", 
                 RowBox[{"s", "-", "2"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              SubscriptBox["\[Beta]", 
               RowBox[{"s", "-", "2"}]], "}"}]}], "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"s", ",", "1", ",", "order"}], "}"}]}], "\[IndentingNewLine]",
       "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7490571160417347`*^9, 3.7490572325895395`*^9}, {
   3.749057267689601*^9, 3.74905740365944*^9}, {3.74905744942992*^9, 
   3.7490575842609572`*^9}, 3.749057687969939*^9, {3.7490579908756714`*^9, 
   3.7490579915308723`*^9}, {3.7490582182304707`*^9, 3.7490582918157997`*^9}, 
   3.7490583973811855`*^9, {3.7490589296395206`*^9, 3.7490589427591434`*^9}, {
   3.749059050056132*^9, 3.749059053098137*^9}, 3.749059423194187*^9, {
   3.7490941069858837`*^9, 3.749094107734685*^9}, 3.749094923132517*^9, {
   3.7491363502347994`*^9, 3.7491363578632126`*^9}, {3.74913639035807*^9, 
   3.7491363981736836`*^9}, 3.749136428843337*^9, 3.7491365682607822`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solve the coefficient ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "i"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"0", ",", "0"}]], TraditionalForm]]],
 " from the last step (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", 
      RowBox[{"m", "+", "1"}]], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["y", "m"], "+"}], "..."}], "=", 
      SuperscriptBox["Y", 
       RowBox[{"(", "s", ")"}]]}]}], ")"}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.7490629986374683`*^9, 3.7490630910364304`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol2", "[", "order_", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", "order"}], ",", "tmp"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tmp", "=", 
      RowBox[{
       RowBox[{
        SubscriptBox["bt$y", "s"], "-", 
        RowBox[{"Ys", "[", "s", "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"LYs", "[", "i_", "]"}], "\[RuleDelayed]", 
          SubscriptBox["k", 
           RowBox[{"i", "+", "1"}]]}], ",", 
         RowBox[{
          RowBox[{"Y", "[", "m_", "]"}], "\[RuleDelayed]", 
          SubscriptBox["y", "m"]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"CoefficientList", "[", 
       RowBox[{
        RowBox[{"tmp", "/.", 
         RowBox[{
          SubscriptBox["k", "n_"], "\[RuleDelayed]", 
          SuperscriptBox["X", "n"]}]}], ",", "X"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{"tmp", "\[Equal]", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{"tmp", ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["b", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "s"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           SubscriptBox["\[Alpha]", 
            RowBox[{"0", ",", "0"}]], "}"}]}], "]"}]}], "]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.749057708390375*^9, 3.749057768606481*^9}, {
   3.7490578059373465`*^9, 3.7490579084295263`*^9}, {3.749057955198409*^9, 
   3.7490579562280107`*^9}, {3.749057999237286*^9, 3.7490580043384953`*^9}, {
   3.749058953507562*^9, 3.749059043956521*^9}, 3.7490594283421965`*^9, {
   3.749061985882689*^9, 3.749061994322304*^9}, {3.749062401061818*^9, 
   3.7490624046498246`*^9}, {3.7490941174535017`*^9, 3.7490941211195087`*^9}, 
   3.7490949305737305`*^9, {3.749136366833228*^9, 3.7491363856624613`*^9}, 
   3.7491364267373333`*^9, 3.7491365482771473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Combine the two solutions and resolve all ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "i"], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.7490631127828684`*^9, 3.7490631264172926`*^9}, {
  3.7490946926889124`*^9, 3.749094695824518*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "MoL$desc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MoL$desc", "[", 
   RowBox[{"order_", ",", 
    RowBox[{"values_:", 
     RowBox[{"{", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", "order"}], ",", "tmp1", ",", "tmp2", ",", "tmp"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tmp1", "=", 
      RowBox[{
       RowBox[{"sol1", "[", "s", "]"}], "/.", "values"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tmp1", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"tmp1", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tmp1", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//.", 
          "tmp1"}], ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp2", "=", 
      RowBox[{
       RowBox[{"sol2", "[", "s", "]"}], "/.", "values"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tmp2", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"tmp2", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tmp2", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//.", 
          "tmp1"}], ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"tmp1", ",", "tmp2"}], "]"}], "/.", 
       RowBox[{"Rule", "\[Rule]", "Equal"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{"Flatten", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["\[Beta]", "i"], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  SubscriptBox["\[Alpha]", 
                   RowBox[{"i", ",", "j"}]], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "0", ",", "i"}], "}"}]}], "]"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"s", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
        "Sort"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"i_", ",", "j_"}]], "\[RuleDelayed]", "0"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7490580062572985`*^9, 3.749058172709591*^9}, {
   3.7490584123260117`*^9, 3.7490585341310253`*^9}, {3.7490590573569446`*^9, 
   3.749059104422227*^9}, 3.7490594336930056`*^9, {3.7490602315610075`*^9, 
   3.749060249391839*^9}, {3.749060801352008*^9, 3.7490608773397417`*^9}, {
   3.749060915701209*^9, 3.749060925373226*^9}, {3.7490609711749067`*^9, 
   3.7490610820287013`*^9}, {3.7490612234429493`*^9, 
   3.7490612238485503`*^9}, {3.749062853214012*^9, 3.7490628539784136`*^9}, {
   3.7490628963480883`*^9, 3.749062904896903*^9}, {3.7490941417583447`*^9, 
   3.749094144285549*^9}, {3.7490944247272415`*^9, 3.749094445912079*^9}, {
   3.749136376630046*^9, 3.7491363823084555`*^9}, 3.749136423851329*^9, {
   3.7686372663450103`*^9, 3.76863730053901*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Echo", "/@", 
   RowBox[{"Expand", "@", 
    RowBox[{"MoL$desc", "[", "4", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7490628428233943`*^9, 3.749062843806196*^9}, {
   3.749062879718459*^9, 3.7490628825108643`*^9}, {3.749062912712517*^9, 
   3.749062931978551*^9}, 3.749094148279156*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Beta]", "0"], "\[Rule]", 
  RowBox[{"1.`29.69897000433602", " ", 
   SubscriptBox["a", 
    RowBox[{"1", ",", "1"}]]}]}]], "Echo",
 CellChangeTimes->{3.7687047211122*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Beta]", "1"], "\[Rule]", 
  RowBox[{"1.`29.69897000433602", " ", 
   SubscriptBox["a", 
    RowBox[{"2", ",", "2"}]]}]}]], "Echo",
 CellChangeTimes->{3.7687047211472*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Beta]", "2"], "\[Rule]", 
  RowBox[{"1.`29.69897000433602", " ", 
   SubscriptBox["a", 
    RowBox[{"3", ",", "3"}]]}]}]], "Echo",
 CellChangeTimes->{3.7687047211712*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Beta]", "3"], "\[Rule]", 
  RowBox[{"1.`29.69897000433602", " ", 
   SubscriptBox["b", "4"]}]}]], "Echo",
 CellChangeTimes->{3.7687047211991997`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"0", ",", "0"}]], "\[Rule]", "1.`29.69897000433602"}]], "Echo",
 CellChangeTimes->{3.7687047212232*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"1", ",", "0"}]], "\[Rule]", 
  RowBox[{"1.`29.397940008672037", "-", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]]}], 
    SubscriptBox["a", 
     RowBox[{"1", ",", "1"}]]]}]}]], "Echo",
 CellChangeTimes->{3.7687047212532*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"1", ",", "1"}]], "\[Rule]", 
  FractionBox[
   RowBox[{"1.`29.69897000433602", " ", 
    SubscriptBox["a", 
     RowBox[{"2", ",", "1"}]]}], 
   SubscriptBox["a", 
    RowBox[{"1", ",", "1"}]]]}]], "Echo",
 CellChangeTimes->{3.7687047212832003`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"2", ",", "0"}]], "\[Rule]", 
  RowBox[{"1.`29.397940008672037", "-", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "1"}]]}], 
    SubscriptBox["a", 
     RowBox[{"1", ",", "1"}]]], "-", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    SubscriptBox["a", 
     RowBox[{"2", ",", "2"}]]], "+", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]]}]]}]}]], "Echo",
 CellChangeTimes->{3.7687047213162003`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"2", ",", "1"}]], "\[Rule]", 
  RowBox[{
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "1"}]]}], 
    SubscriptBox["a", 
     RowBox[{"1", ",", "1"}]]], "-", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]]}]]}]}]], "Echo",
 CellChangeTimes->{3.7687047213462*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"2", ",", "2"}]], "\[Rule]", 
  FractionBox[
   RowBox[{"1.`29.69897000433602", " ", 
    SubscriptBox["a", 
     RowBox[{"3", ",", "2"}]]}], 
   SubscriptBox["a", 
    RowBox[{"2", ",", "2"}]]]}]], "Echo",
 CellChangeTimes->{3.7687047213772*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"3", ",", "0"}]], "\[Rule]", 
  RowBox[{"1.`29.397940008672037", "-", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "1"]}], 
    SubscriptBox["a", 
     RowBox[{"1", ",", "1"}]]], "-", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "2"]}], 
    SubscriptBox["a", 
     RowBox[{"2", ",", "2"}]]], "+", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "2"], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]]}]], "-", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "3"]}], 
    SubscriptBox["a", 
     RowBox[{"3", ",", "3"}]]], "+", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "1"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]], "+", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]], "-", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]]}]}]], "Echo",
 CellChangeTimes->{3.7687047214082003`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"3", ",", "1"}]], "\[Rule]", 
  RowBox[{
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "1"]}], 
    SubscriptBox["a", 
     RowBox[{"1", ",", "1"}]]], "-", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "2"], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]]}]], "-", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "1"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]], "+", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]]}]}]], "Echo",
 CellChangeTimes->{3.7687047214372*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"3", ",", "2"}]], "\[Rule]", 
  RowBox[{
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "2"]}], 
    SubscriptBox["a", 
     RowBox[{"2", ",", "2"}]]], "-", 
   FractionBox[
    RowBox[{"1.`29.397940008672037", " ", 
     SubscriptBox["b", "3"], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "2"}]]}], 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"2", ",", "2"}]], " ", 
     SubscriptBox["a", 
      RowBox[{"3", ",", "3"}]]}]]}]}]], "Echo",
 CellChangeTimes->{3.7687047214611998`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"3", ",", "3"}]], "\[Rule]", 
  FractionBox[
   RowBox[{"1.`29.69897000433602", " ", 
    SubscriptBox["b", "3"]}], 
   SubscriptBox["a", 
    RowBox[{"3", ",", "3"}]]]}]], "Echo",
 CellChangeTimes->{3.7687047215011997`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Alpha]", 
   RowBox[{"i_", ",", "j_"}]], "\[RuleDelayed]", "0"}]], "Echo",
 CellChangeTimes->{3.7687047215312*^9}]
}, Open  ]]
}, Open  ]],

Cell["Export the MoL descriptor C++ definition:", "Text",
 CellChangeTimes->{{3.7491331356989994`*^9, 3.7491331466034184`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"numsToCppMatrix", "[", "expr_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"expr", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"n_", ",", "m_"}], "]"}], "\[RuleDelayed]", 
           RowBox[{
            RowBox[{"ToString", "@", "n"}], "<>", "\"\<./\>\"", "<>", 
            RowBox[{"ToString", "@", "m"}], "<>", "\"\<.\>\""}]}], ",", 
          RowBox[{"n_Integer", "\[RuleDelayed]", 
           RowBox[{
            RowBox[{"ToString", "@", "n"}], "<>", "\"\<.\>\""}]}]}], "}"}]}], 
       "//", "ToString"}], "//", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<}, \>\"", "\[Rule]", "\"\<},\\n      \>\""}], ",", 
           RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<{ \>\""}], ",", 
           RowBox[{"\"\<}\>\"", "\[Rule]", "\"\< }\>\""}]}], "}"}]}], "]"}], 
       "&"}]}], "//", 
     RowBox[{
      RowBox[{"StringDrop", "[", 
       RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"#", ",", 
       RowBox[{"-", "2"}]}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7494360272224607`*^9, 3.7494360278620615`*^9}, {
  3.7494786770123615`*^9, 3.7494787027056065`*^9}, {3.749478802888983*^9, 
  3.7494788076313915`*^9}, {3.7494788452430573`*^9, 3.7494788510930676`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"numsToCppArray", "[", "expr_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"expr", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"n_", ",", "m_"}], "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"ToString", "@", "n"}], "<>", "\"\<./\>\"", "<>", 
           RowBox[{"ToString", "@", "m"}], "<>", "\"\<.\>\""}]}], ",", 
         RowBox[{"n_Integer", "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"ToString", "@", "n"}], "<>", "\"\<.\>\""}]}]}], "}"}]}], "//",
       "ToString"}], "//", 
     RowBox[{
      RowBox[{"StringDrop", "[", 
       RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"#", ",", 
       RowBox[{"-", "1"}]}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7494360295312643`*^9, 3.7494360300616655`*^9}, {
  3.749436148310873*^9, 3.7494361887617445`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cppDeclareMoL", "[", 
   RowBox[{"className_", ",", "verbose_", ",", "\[Alpha]_", ",", "\[Beta]_"}],
    "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"order", "=", 
      RowBox[{"Length", "@", "\[Beta]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<MoLDescriptor \>\"", "<>", "className", "<>", 
     "\"\< = \\n{\\n    \\\"\>\"", "<>", "\[IndentingNewLine]", "verbose", 
     "<>", "\"\<\\\", \>\"", "<>", 
     RowBox[{"ToString", "@", "order"}], "<>", "\[IndentingNewLine]", 
     "\"\<, 0,\\n    {\>\"", "<>", 
     RowBox[{"numsToCppMatrix", "@", "\[Alpha]"}], "<>", 
     "\"\<\\n    },\\n    { \>\"", "<>", 
     RowBox[{"numsToCppArray", "@", "\[Beta]"}], "<>", "\[IndentingNewLine]", 
     "\"\<}\\n};\>\""}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/exffOjRd68dTdV1ckA027z/+SB6RXTWGhCt8Gnv
FhDN8e44mH73QCXrGZCeoLmoAUQ7XJjaDqLfiq2ZAKLZ7jyZAqLDuvctA9F5
uxUOgmidp8lHQLTGK99bINolLRxM/+t/m/0cSG961ZALolet2z8TRK99uHk2
iG45N4v5JZD+oj2DHUR7ro6orXoP1L/4WyuI9js+cwKI/iZ8ejeIllf+cQhE
p3AbHQbRh3NLz4Forf+fL4JoW/O9N0D0sUOCt0F04P1FT0C0r/OEF2D9q0M/
gmi5CdPB9AqHPOZqIM0w9y8LiFbSiZMA0TklclIgWkezNQBE/zpWEgii534t
rFgFpNmen60E0T8kGyaA6B3TW8G01ZYFn61F3jgacrwB0wDjFesw
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cppDeclareMoL", "[", 
   RowBox[{
   "className_", ",", "verbose_", ",", "pOrder_", ",", "\[Alpha]_", ",", 
    "\[Beta]_", ",", "\[Alpha]2_", ",", "\[Beta]2_"}], "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"order", "=", 
      RowBox[{"Length", "@", "\[Beta]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<MoLDescriptor \>\"", "<>", "className", "<>", 
     "\"\< = \\n{\\n    \\\"\>\"", "<>", "\[IndentingNewLine]", "verbose", 
     "<>", "\"\<\\\", \>\"", "<>", 
     RowBox[{"ToString", "@", "order"}], "<>", "\"\<, \>\"", "<>", 
     RowBox[{"ToString", "@", "pOrder"}], "<>", "\[IndentingNewLine]", 
     "\"\<,\\n    {\>\"", "<>", 
     RowBox[{"numsToCppMatrix", "@", "\[Alpha]"}], "<>", 
     "\[IndentingNewLine]", 
     "\"\<,\\n      // Alternative alpha[N-1]:\\n      { \>\"", "<>", 
     RowBox[{"numsToCppArray", "@", 
      RowBox[{
      "\[Alpha]2", "\[LeftDoubleBracket]", "order", 
       "\[RightDoubleBracket]"}]}], "<>", "\[IndentingNewLine]", 
     "\"\<}\\n    },\\n    { \>\"", "<>", 
     RowBox[{"numsToCppArray", "@", "\[Beta]"}], "<>", "\[IndentingNewLine]", 
     "\"\<},\\n    // Alternative beta:\>\"", "<>", "\[IndentingNewLine]", 
     "\"\<\\n    { \>\"", "<>", 
     RowBox[{"numsToCppArray", "@", "\[Beta]2"}], "<>", "\"\<}\\n};\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7490633389998655`*^9, 3.749063521379786*^9}, {
   3.74906355198804*^9, 3.7490640353236885`*^9}, {3.7490641019358063`*^9, 
   3.7490641022478065`*^9}, {3.749131089152457*^9, 3.7491312690675735`*^9}, {
   3.749131324681671*^9, 3.7491313973777986`*^9}, {3.7491314311518583`*^9, 
   3.749131573954509*^9}, {3.7491317850228796`*^9, 3.749131811121725*^9}, {
   3.7491319864348335`*^9, 3.7491319867312336`*^9}, {3.749133151423827*^9, 
   3.7491331640286493`*^9}, {3.7491335179900713`*^9, 
   3.7491335336212983`*^9}, {3.7491364128377094`*^9, 
   3.7491364447553654`*^9}, {3.749434346770909*^9, 3.74943441570743*^9}, {
   3.749434500805579*^9, 3.7494348463461866`*^9}, {3.7494349037542872`*^9, 
   3.7494349055638905`*^9}, {3.7494349956696486`*^9, 3.749435023624898*^9}, {
   3.749435077912993*^9, 3.749435096555026*^9}, {3.7494351730897603`*^9, 
   3.7494352045082154`*^9}, {3.749435274677139*^9, 3.7494352767363424`*^9}, {
   3.7494354380250254`*^9, 3.7494355436840115`*^9}, {3.7494355769276695`*^9, 
   3.749435639124979*^9}, {3.7494356807614517`*^9, 3.7494357305255394`*^9}, {
   3.749435788526441*^9, 3.74943581618529*^9}, {3.749435858757765*^9, 
   3.7494358714873867`*^9}, {3.7494360482512975`*^9, 
   3.7494360568001127`*^9}, {3.7495325851815853`*^9, 3.749532607208824*^9}, {
   3.74953276987031*^9, 3.749532772147914*^9}, 3.768704943317*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classical RK4", "Section",
 CellChangeTimes->{{3.749059505546732*^9, 3.749059511318742*^9}, {
  3.74906427431971*^9, 3.749064277814116*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RK4$A", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1", "/", "2"}], "0", "0"},
       {"0", 
        RowBox[{"1", "/", "2"}], "0"},
       {"0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RK4$b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "6"}], ",", 
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"1", "/", "6"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
  3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
  3.7490600620511093`*^9}, {3.7490601189444094`*^9, 3.7490601229224167`*^9}, {
  3.7490602578938537`*^9, 3.7490602608422585`*^9}, {3.7490617715539126`*^9, 
  3.7490617729579153`*^9}, {3.7490632700779448`*^9, 3.7490632740871515`*^9}, {
  3.7490947507210145`*^9, 3.749094765728241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MoL$order", "=", 
   RowBox[{"Length", "@", "RK4$b"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"coeffs", "=", 
  RowBox[{"MoL$desc", "[", 
   RowBox[{"MoL$order", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["a", 
        RowBox[{"i_", ",", "j_"}]], "\[RuleDelayed]", 
       RowBox[{"RK4$A", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{
       SubscriptBox["b", "i_"], "\[RuleDelayed]", 
       RowBox[{
       "RK4$b", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
   3.7490600620511093`*^9}, {3.7490601189444094`*^9, 
   3.7490601229224167`*^9}, {3.7490602578938537`*^9, 
   3.7490602608422585`*^9}, {3.7490617715539126`*^9, 
   3.7490617729579153`*^9}, {3.7490632700779448`*^9, 3.749063280654763*^9}, {
   3.749094154612767*^9, 3.7490942066700587`*^9}, {3.7490947689730463`*^9, 
   3.7490947727326527`*^9}, 3.749113551615239*^9, {3.7495325086946516`*^9, 
   3.749532519848671*^9}, {3.749532693820176*^9, 3.749532694678178*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Beta]", "0"], "\[Rule]", "0.5`29.69897000433602"}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "1"], "\[Rule]", "0.5`29.69897000433602"}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "2"], "\[Rule]", "1.`29.69897000433602"}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "3"], "\[Rule]", 
    "0.1666666666666666666666666666666666666666666666666666666667`29.\
69897000433602"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"0", ",", "0"}]], "\[Rule]", "1.`29.69897000433602"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"1", ",", "0"}]], "\[Rule]", "1.`29.69897000433602"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"1", ",", "1"}]], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"2", ",", "0"}]], "\[Rule]", "1.`29.69897000433602"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"2", ",", "1"}]], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"2", ",", "2"}]], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"3", ",", "0"}]], "\[Rule]", 
    RowBox[{
    "-", "0.3333333333333333333333333333333333333333333333333333333333`29.\
69897000433602"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"3", ",", "1"}]], "\[Rule]", 
    "0.3333333333333333333333333333333333333333333333333333333333`29.\
69897000433602"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"3", ",", "2"}]], "\[Rule]", 
    "0.6666666666666666666666666666666666666666666666666666666667`29.\
69897000433602"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"3", ",", "3"}]], "\[Rule]", 
    "0.3333333333333333333333333333333333333333333333333333333333`29.\
69897000433602"}], ",", 
   RowBox[{
    SubscriptBox["\[Alpha]", 
     RowBox[{"i_", ",", "j_"}]], "\[RuleDelayed]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.749532832769621*^9, 3.749962584932353*^9, 3.768641340534217*^9, 
   3.768641411484217*^9, {3.7687047273122*^9, 3.7687047351012*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RK4\[Alpha]", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      SubscriptBox["\[Alpha]", 
       RowBox[{"i", ",", "j"}]], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"MoL$order", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", 
        RowBox[{"MoL$order", "-", "1"}]}], "}"}]}], "]"}], "/.", "coeffs"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"RK4\[Beta]", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     SubscriptBox["\[Beta]", "i"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"MoL$order", "-", "1"}]}], "}"}]}], "]"}], "/.", 
   "coeffs"}]}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490600585255036`*^9, 
   3.7490600620511093`*^9}, {3.7490601189444094`*^9, 
   3.7490601229224167`*^9}, {3.7490602578938537`*^9, 3.7490602608422585`*^9}, 
   3.7490617715539126`*^9, {3.7490628072709312`*^9, 3.7490628154765463`*^9}, {
   3.7490640773189626`*^9, 3.7490640841517744`*^9}, {3.7490942133624706`*^9, 
   3.7490942162952757`*^9}, {3.749094478656536*^9, 3.7490944820417423`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`29.69897000433602", "0", "0", "0"},
     {"1.`29.69897000433602", "0", "0", "0"},
     {"1.`29.69897000433602", "0", "0", "0"},
     {
      RowBox[{
      "-", "0.3333333333333333333333333333333333333333333333333333333333`29.\
69897000433602"}], 
      "0.3333333333333333333333333333333333333333333333333333333333`29.\
69897000433602", 
      "0.6666666666666666666666666666666666666666666666666666666667`29.\
69897000433602", 
      "0.3333333333333333333333333333333333333333333333333333333333`29.\
69897000433602"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7495328328164206`*^9, 3.7499625850259533`*^9, 3.768641340549817*^9, 
   3.768641411515417*^9, {3.7687047273992*^9, 3.7687047351242*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.5`29.69897000433602", ",", "0.5`29.69897000433602", ",", 
   "1.`29.69897000433602", ",", 
   "0.1666666666666666666666666666666666666666666666666666666667`29.\
69897000433602"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7495328328164206`*^9, 3.7499625850259533`*^9, 3.768641340549817*^9, 
   3.768641411515417*^9, {3.7687047273992*^9, 3.7687047351742*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cppDeclareMoL", "[", 
   RowBox[{
   "\"\<RK4\>\"", ",", "\"\<Runge-Kutta\>\"", ",", "RK4\[Alpha]", ",", 
    "RK4\[Beta]"}], "]"}], "//", "Framed"}]], "Input",
 CellChangeTimes->{{3.7490640500033145`*^9, 3.7490640931685905`*^9}, {
   3.7491312738099813`*^9, 3.7491312850264015`*^9}, {3.749131412400625*^9, 
   3.7491314144130287`*^9}, {3.749131591176939*^9, 3.7491315922377405`*^9}, {
   3.749131794850897*^9, 3.749131815427333*^9}, 3.749133179379076*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RK4 = \\n{\\n    \\\"Runge-Kutta\\\", 4, 0,\\n   \
 { { 1.00000000000000000000000000000, 0., 0., 0.},\\n      { \
1.00000000000000000000000000000, 0., 0., 0.},\\n      { \
1.00000000000000000000000000000, 0., 0., 0.},\\n      { \
-0.333333333333333333333333333333, 0.333333333333333333333333333333, \
0.66666666666666666666666666667, 0.333333333333333333333333333333 }\\n    \
},\\n    { 0.50000000000000000000000000000, 0.50000000000000000000000000000, \
1.00000000000000000000000000000, 0.166666666666666666666666666667}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.7495328328632207`*^9, 3.7499625852599535`*^9, 3.7686413405966167`*^9, 
   3.768641411577817*^9, {3.7687047274412003`*^9, 3.7687047351872*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The methods of Fehlberg and Dormand & Prince", "Section",
 CellChangeTimes->{{3.749059505546732*^9, 3.749059511318742*^9}, {
  3.7490596145977235`*^9, 3.7490596243165407`*^9}, {3.749062978716233*^9, 
  3.7490629839890423`*^9}, {3.7490971050011497`*^9, 3.7490971590240445`*^9}, {
  3.7491332761928463`*^9, 3.7491332866916647`*^9}, {3.7491363063831224`*^9, 
  3.7491363190503445`*^9}, {3.749145571433773*^9, 3.7491455743353777`*^9}, {
  3.749145819271408*^9, 3.749145826821821*^9}, {3.7493931965907607`*^9, 
  3.7493932077291803`*^9}}],

Cell["References: ", "Text",
 CellChangeTimes->{{3.749391684320122*^9, 3.7493917034925556`*^9}, {
  3.749393211863188*^9, 3.7493932130955896`*^9}}],

Cell["\<\
Erwin Fehlberg (1968). Classical fifth, sixth, seventh and eighth order \
Runge-Kutta formulas with stepsize control, NASA, TR R 287.\
\>", "Text",
 CellChangeTimes->{
  3.74939323009962*^9, {3.749393280817809*^9, 3.7493933234214835`*^9}}],

Cell["\<\
Erwin Fehlberg (1969). Low-order classical Runge-Kutta formulas with step \
size control and their application to some heat transfer problems. NASA \
Technical Report 315.\
\>", "Text",
 CellChangeTimes->{
  3.74939323009962*^9, {3.749393280817809*^9, 3.7493933234214835`*^9}}],

Cell["\<\
Dormand, J. R., and P. J. Prince. \"A Family of Embedded Runge-Kutta \
Formulae.\" Journal of Computational and Applied Mathematics 6, no. 1 (March \
1, 1980): 19\[Dash]26. https://doi.org/10.1016/0771-050X(80)90013-3.\
\>", "Text",
 CellChangeTimes->{{3.749391684320122*^9, 3.7493917034925556`*^9}, {
  3.749393211863188*^9, 3.7493932130955896`*^9}}],

Cell["\<\
See also Butcher (2008) Numerical Methods for Ordinary Differential Equations \
(2nd ed).\
\>", "Text",
 CellChangeTimes->{{3.749391684320122*^9, 3.7493917034925556`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cppCode", "=", "\"\<\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.749439962190374*^9, 3.7494399635787764`*^9}}],

Cell[CellGroupData[{

Cell["Fehlberg\[CloseCurlyQuote]s 4(5) method", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
   3.74914584334225*^9, 3.7491458924667363`*^9}, {3.749391640671245*^9, 
   3.7493916898737316`*^9}, {3.7493937267622795`*^9, 3.7493937416135054`*^9}, 
   3.749393788631988*^9, 3.749393916100112*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cppClassName", "=", "\"\<RKF45\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methodName", "=", "\"\<RKF45\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "methodDescription", "=", "\"\<Runge-Kutta, Fehlberg's 4(5) method\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "4"], "0", "0", "0", "0"},
       {
        FractionBox["3", "32"], 
        FractionBox["9", "32"], "0", "0", "0"},
       {
        FractionBox["1932", "2197"], 
        RowBox[{"-", 
         FractionBox["7200", "2197"]}], 
        FractionBox["7296", "2197"], "0", "0"},
       {
        FractionBox["439", "216"], 
        RowBox[{"-", "8"}], 
        FractionBox["3680", "513"], 
        RowBox[{"-", 
         FractionBox["845", "4104"]}], "0"},
       {
        RowBox[{"-", 
         FractionBox["8", "27"]}], "2", 
        RowBox[{"-", 
         FractionBox["3544", "2565"]}], 
        FractionBox["1859", "4104"], 
        RowBox[{"-", 
         FractionBox["11", "40"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]1", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["16", "135"], ",", "0", ",", 
      FractionBox["6656", "12825"], ",", 
      FractionBox["28561", "56430"], ",", 
      RowBox[{"-", 
       FractionBox["9", "50"]}], ",", 
      FractionBox["2", "55"]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"higher", " ", "order", " ", "first"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]2", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["25", "216"], ",", "0", ",", 
      FractionBox["1408", "2565"], ",", 
      FractionBox["2197", "4104"], ",", 
      RowBox[{"-", 
       FractionBox["1", "5"]}], ",", "0"}], "}"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, {3.749145162759855*^9, 3.749145333174554*^9}, 
   3.7491461752640333`*^9, {3.749391320489483*^9, 3.7493913243270893`*^9}, {
   3.749391778468787*^9, 3.749391780574791*^9}, {3.7493919175398316`*^9, 
   3.749392129092803*^9}, 3.7493926782922688`*^9, {3.7493927107247252`*^9, 
   3.7493927147495327`*^9}, {3.7493935436154575`*^9, 3.7493935550190773`*^9}, 
   3.749393615547184*^9, {3.7493936615828648`*^9, 3.7493936938306217`*^9}, {
   3.749396058254485*^9, 3.7493960592528863`*^9}, {3.7493962622429433`*^9, 
   3.749396282837479*^9}, {3.7494372130137434`*^9, 3.7494373241351395`*^9}, {
   3.749437418530905*^9, 3.7494374388733406`*^9}, {3.7494376956497917`*^9, 
   3.7494377938831644`*^9}, {3.749438148316787*^9, 3.7494381514367924`*^9}, {
   3.749438437759695*^9, 3.7494384438593063`*^9}, {3.749440097021411*^9, 
   3.7494401022474203`*^9}, {3.7494402962077637`*^9, 3.749440335613433*^9}, {
   3.7494811214893436`*^9, 3.749481128181755*^9}, {3.749481175418638*^9, 
   3.749481200191482*^9}, {3.7494812302839346`*^9, 3.749481245103961*^9}, {
   3.749532530051089*^9, 3.7495325315798917`*^9}, {3.749532703382993*^9, 
   3.7495327038821945`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
   "\"\<MoL descriptors (generator).nb\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, {3.749145162759855*^9, 3.749145333174554*^9}, 
   3.7491461752640333`*^9, {3.749391320489483*^9, 3.7493913243270893`*^9}, {
   3.749391778468787*^9, 3.749391780574791*^9}, {3.7493919175398316`*^9, 
   3.749392129092803*^9}, 3.7493926782922688`*^9, {3.7493927107247252`*^9, 
   3.7493927147495327`*^9}, {3.7493935436154575`*^9, 3.7493935550190773`*^9}, 
   3.749393615547184*^9, {3.7493936615828648`*^9, 3.7493936938306217`*^9}, {
   3.749396058254485*^9, 3.7493960592528863`*^9}, {3.7493962622429433`*^9, 
   3.749396282837479*^9}, {3.7494372130137434`*^9, 3.7494373241351395`*^9}, {
   3.749437418530905*^9, 3.7494374388733406`*^9}, {3.7494376956497917`*^9, 
   3.7494377938831644`*^9}, {3.749438148316787*^9, 3.7494381514367924`*^9}, 
   3.749438437759695*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"The two choices of \[Alpha] and \[Beta]:\"\>", TextForm]], 
    "InlineText"],
   Text["The two choices of \[Alpha] and \[Beta]:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.7686414132636175`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1.`29.69897000433602", "0", "0", "0", "0", "0", "1.`29.69897000433602", 
     "0", "0", "0", "0", "0"},
    {"0.625`29.69897000433602", "0.375`29.69897000433602", "0", "0", "0", "0",
      "0.625`29.69897000433602", "0.375`29.69897000433602", "0", "0", "0", 
     "0"},
    {"4.7651342740100136549840691852526172052799271734182976786528`29.\
69897000433602", 
     "7.8871187983614019116977696859353664087391898042785616750114`29.\
69897000433602", 
     RowBox[{
     "-", "11.65225307237141556668183887118798361402`29.69897000433602"}], 
     "0", "0", "0", 
     "4.7651342740100136549840691852526172052799271734182976786528`29.\
69897000433602", 
     "7.8871187983614019116977696859353664087391898042785616750114`29.\
69897000433602", 
     RowBox[{
     "-", "11.65225307237141556668183887118798361402`29.69897000433602"}], 
     "0", "0", "0"},
    {"0.3549382716049382716049382716049382716049382716049382716049`29.\
69897000433602", 
     "1.7592592592592592592592592592592592592592592592592592592593`29.\
69897000433602", 
     RowBox[{
     "-", "3.2743066242604562087479908347867719982216750453130877876954`29.\
69897000433602"}], 
     "2.1601090933962586778837933039225744673574775144488902568312`29.\
69897000433602", "0", "0", 
     "0.3549382716049382716049382716049382716049382716049382716049`29.\
69897000433602", 
     "1.7592592592592592592592592592592592592592592592592592592593`29.\
69897000433602", 
     RowBox[{
     "-", "3.2743066242604562087479908347867719982216750453130877876954`29.\
69897000433602"}], 
     "2.1601090933962586778837933039225744673574775144488902568312`29.\
69897000433602", "0", "0"},
    {"0.5041666666666666666666666666666666666666666666666666666667`29.\
69897000433602", "3.3`29.69897000433602", 
     RowBox[{
     "-", "4.9403508771929824561403508771929824561403508771929824561404`29.\
69897000433602"}], 
     "4.3361842105263157894736842105263157894736842105263157894737`29.\
69897000433602", 
     RowBox[{"-", "2.2`29.69897000433602"}], "0", 
     "0.5041666666666666666666666666666666666666666666666666666667`29.\
69897000433602", "3.3`29.69897000433602", 
     RowBox[{
     "-", "4.9403508771929824561403508771929824561403508771929824561404`29.\
69897000433602"}], 
     "4.3361842105263157894736842105263157894736842105263157894737`29.\
69897000433602", 
     RowBox[{"-", "2.2`29.69897000433602"}], "0"},
    {"0.3237373737373737373737373737373737373737373737373737373737`29.\
69897000433602", 
     "1.406060606060606060606060606060606060606060606060606060606`29.\
69897000433602", 
     RowBox[{
     "-", "2.9941520467836257309941520467836257309941520467836257309941`29.\
69897000433602"}], 
     "2.627990430622009569377990430622009569377990430622009569378`29.\
69897000433602", 
     RowBox[{
     "-", "1.0181818181818181818181818181818181818181818181818181818181`29.\
69897000433602"}], 
     "0.6545454545454545454545454545454545454545454545454545454545`29.\
69897000433602", 
     "0.3055555555555555555555555555555555555555555555555555555556`29.\
69897000433602", 
     "1.3333333333333333333333333333333333333333333333333333333333`29.\
69897000433602", 
     RowBox[{
     "-", "2.9941520467836257309941520467836257309941520467836257309941`29.\
69897000433602"}], 
     "2.627990430622009569377990430622009569377990430622009569378`29.\
69897000433602", 
     RowBox[{"-", "1.`29.69897000433602"}], 
     "0.7272727272727272727272727272727272727272727272727272727273`29.\
69897000433602"},
    {"0.25`29.69897000433602", "0.28125`29.69897000433602", 
     "3.3208921256258534365043240782885753299954483386436049157942`29.\
69897000433602", 
     RowBox[{
     "-", "0.2058966861598440545808966861598440545808966861598440545808`29.\
69897000433602"}], 
     RowBox[{
     "-", "0.2749999999999999999999999999999999999999999999999999999999`29.\
69897000433602"}], 
     "0.0363636363636363636363636363636363636363636363636363636364`29.\
69897000433602", "0.25`29.69897000433602", "0.28125`29.69897000433602", 
     "3.3208921256258534365043240782885753299954483386436049157942`29.\
69897000433602", 
     RowBox[{
     "-", "0.2058966861598440545808966861598440545808966861598440545808`29.\
69897000433602"}], 
     RowBox[{
     "-", "0.2749999999999999999999999999999999999999999999999999999999`29.\
69897000433602"}], "0"}
   },
   AutoDelete->False,
   GridBoxDividers->{"ColumnsIndexed" -> {1 -> GrayLevel[0], 7 -> {
         GrayLevel[0], 
         Thickness[Large]}, -1 -> GrayLevel[0]}, 
     "RowsIndexed" -> {1 -> GrayLevel[0], -2 -> {
         Thickness[Large], 
         RGBColor[1, 0, 0]}, -1 -> GrayLevel[0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.768641413294817*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RKF45 = \\n{\\n    \\\"RKF45\\\", 6, 5,\\n    { \
{ 1.00000000000000000000000000000, 0., 0., 0., 0., 0.},\\n      { \
0.62500000000000000000000000000, 0.375000000000000000000000000000, 0., 0., \
0., 0.},\\n      { 4.76513427401001365498406918525, \
7.8871187983614019116977696859, -11.6522530723714155666818388712, 0., 0., \
0.},\\n      { 0.354938271604938271604938271605, \
1.75925925925925925925925925926, -3.27430662426045620874799083479, \
2.16010909339625867788379330392, 0., 0.},\\n      { \
0.50416666666666666666666666667, 3.30000000000000000000000000000, \
-4.94035087719298245614035087719, 4.33618421052631578947368421053, \
-2.20000000000000000000000000000, 0.},\\n      { \
0.323737373737373737373737373737, 1.40606060606060606060606060606, \
-2.99415204678362573099415204678, 2.62799043062200956937799043062, \
-1.01818181818181818181818181818, 0.65454545454545454545454545455 },\\n      \
// Alternative alpha[N-1]:\\n      { 0.305555555555555555555555555556, \
1.33333333333333333333333333333, -2.99415204678362573099415204678, \
2.62799043062200956937799043062, -1.00000000000000000000000000000, \
0.72727272727272727272727272727}\\n    },\\n    { \
0.250000000000000000000000000000, 0.281250000000000000000000000000, \
3.32089212562585343650432407829, -0.205896686159844054580896686160, \
-0.275000000000000000000000000000, 0.0363636363636363636363636363636},\\n    \
// Alternative beta:\\n    { 0.250000000000000000000000000000, \
0.281250000000000000000000000000, 3.32089212562585343650432407829, \
-0.205896686159844054580896686160, -0.275000000000000000000000000000, \
0.}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.768641413372817*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Sanity check:\"\>", TextForm]], "InlineText"],
   Text["Sanity check:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.768641413450817*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.6132477538720268537969166133563515783480513334894752481056`30.", 
     "0.5755264491711813881774529505067309964568591175298738731862`30.\
059791154569908"},
    {"0.7492132978546560863049626744997422681289159836164687770881`29.\
500569097447528", 
     "0.6810629279466483269576970928707479825633769852979884819522`30.\
03017751291262"},
    {"0.8452451549285153295354997757998485657244470171500388171597`29.\
370373872391713", 
     "0.7481338066915983843662881182303677363278712768957514578438`30.\
02740217974133"},
    {"1.33011290458706080722691731970278104815`28.19011071080605", 
     "0.9711752967714935445460761376766140632432392717255613947616`29.\
604141595740302"},
    {"1.45236240721455264981261908609461093823`27.78442569016365", 
     "0.9929948972361664618221810501209654226949990723457522997411`29.\
56039435937687"},
    {"0.92014294243284481303964403704061322558`27.092127427180728", 
     "0.7956882093150475778651059475902208448857335558120244670608`29.\
231154987185374"},
    {"1.36755060077025532607221589553306458952`27.170490363333474", 
     "1.3675506007702553260722158955330645895226544306550322502778`29.\
546322884904868"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7686414135444174`*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``27.032722897346545", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.768641413591217*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.6132477538720268537969166133563515783480513334894752481056`30.", 
     "0.5755264491711813881774529505067309964568591175298738731862`30.\
059791154569908"},
    {"0.7492132978546560863049626744997422681289159836164687770881`29.\
500569097447528", 
     "0.6810629279466483269576970928707479825633769852979884819522`30.\
03017751291262"},
    {"0.8452451549285153295354997757998485657244470171500388171597`29.\
370373872391713", 
     "0.7481338066915983843662881182303677363278712768957514578438`30.\
02740217974133"},
    {"1.33011290458706080722691731970278104815`28.19011071080605", 
     "0.9711752967714935445460761376766140632432392717255613947616`29.\
604141595740302"},
    {"1.45236240721455264981261908609461093823`27.78442569016365", 
     "0.9929948972361664618221810501209654226949990723457522997411`29.\
56039435937687"},
    {"0.92014294243284481303964403704061322558`27.092127427180728", 
     "0.7956882093150475778651059475902208448857335558120244670608`29.\
231154987185374"},
    {"1.36789625618159121105467573429853146733`27.153398866342453", 
     "1.3678962561815912110546757342985314673373608824766031990343`29.\
544851330666887"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.768641413653617*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``27.015585952583", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7686414136848173`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dormand and Prince 4(5) -- obtained from ode45.m", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
  3.74914584334225*^9, 3.7491458924667363`*^9}, {3.749391640671245*^9, 
  3.7493916898737316`*^9}, {3.7493937458723125`*^9, 3.7493937635783443`*^9}, {
  3.749478194506714*^9, 3.749478206237935*^9}, {3.749480895008146*^9, 
  3.74948090868937*^9}, {3.7494809684374747`*^9, 3.749480969716677*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cppClassName", "=", "\"\<RKDP45\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methodName", "=", "\"\<RKDP45\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "methodDescription", "=", 
   "\"\<Runge-Kutta, Dormand-Prince from ode45.m\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "5"], "0", "0", "0", "0", "0"},
       {
        FractionBox["3", "40"], 
        FractionBox["9", "40"], "0", "0", "0", "0"},
       {
        FractionBox["44", "45"], 
        RowBox[{"-", 
         FractionBox["56", "15"]}], 
        FractionBox["32", "9"], "0", "0", "0"},
       {
        FractionBox["19372", "6561"], 
        RowBox[{"-", 
         FractionBox["25360", "2187"]}], 
        FractionBox["64448", "6561"], 
        RowBox[{"-", 
         FractionBox["212", "729"]}], "0", "0"},
       {
        FractionBox["9017", "3168"], 
        RowBox[{"-", 
         FractionBox["355", "33"]}], 
        FractionBox["46732", "5247"], 
        FractionBox["49", "176"], 
        RowBox[{"-", 
         FractionBox["5103", "18656"]}], "0"},
       {
        FractionBox["35", "384"], "0", 
        FractionBox["500", "1113"], 
        FractionBox["125", "192"], 
        RowBox[{"-", 
         FractionBox["2187", "6784"]}], 
        FractionBox["11", "84"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]1", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["35", "384"], ",", "0", ",", 
      FractionBox["500", "1113"], ",", 
      FractionBox["125", "192"], ",", 
      RowBox[{"-", 
       FractionBox["2187", "6784"]}], ",", 
      FractionBox["11", "84"], ",", "0"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"higher", " ", "order", " ", "first"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckB]2", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5179", "57600"], ",", "0", ",", 
     FractionBox["7571", "16695"], ",", 
     FractionBox["393", "640"], ",", 
     RowBox[{"-", 
      FractionBox["92097", "339200"]}], ",", 
     FractionBox["187", "2100"], ",", 
     FractionBox["1", "40"]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.749478366743417*^9, 3.749478423558717*^9}, {
   3.7494784619659843`*^9, 3.749478466911193*^9}, {3.7494785341005106`*^9, 
   3.749478587125004*^9}, {3.749482436556853*^9, 3.7494824414864616`*^9}, 
   3.7494830255442877`*^9, {3.7495325400039062`*^9, 3.749532540300307*^9}, {
   3.7495327059257975`*^9, 3.749532706783799*^9}, {3.749565952468335*^9, 
   3.7495659568675423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
   "\"\<MoL descriptors (generator).nb\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, {3.749145162759855*^9, 3.749145333174554*^9}, 
   3.7491461752640333`*^9, {3.749391320489483*^9, 3.7493913243270893`*^9}, {
   3.749391778468787*^9, 3.749391780574791*^9}, {3.7493919175398316`*^9, 
   3.749392129092803*^9}, 3.7493926782922688`*^9, {3.7493927107247252`*^9, 
   3.7493927147495327`*^9}, {3.7493935436154575`*^9, 3.7493935550190773`*^9}, 
   3.749393615547184*^9, {3.7493936615828648`*^9, 3.7493936938306217`*^9}, {
   3.749396058254485*^9, 3.7493960592528863`*^9}, {3.7493962622429433`*^9, 
   3.749396282837479*^9}, {3.7494372130137434`*^9, 3.7494373241351395`*^9}, {
   3.749437418530905*^9, 3.7494374388733406`*^9}, {3.7494376956497917`*^9, 
   3.7494377938831644`*^9}, {3.749438148316787*^9, 3.7494381514367924`*^9}, 
   3.749438437759695*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"The two choices of \[Alpha] and \[Beta]:\"\>", TextForm]], 
    "InlineText"],
   Text["The two choices of \[Alpha] and \[Beta]:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.7686414146062174`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1.`29.69897000433602", "0", "0", "0", "0", "0", "0", 
     "1.`29.69897000433602", "0", "0", "0", "0", "0", "0"},
    {"0.625`29.69897000433602", "0.375`29.69897000433602", "0", "0", "0", "0",
      "0", "0.625`29.69897000433602", "0.375`29.69897000433602", "0", "0", 
     "0", "0", "0"},
    {"6.4814814814814814814814814814814814814814814814814814814815`29.\
69897000433602", 
     "11.11111111111111111111111111111111111111`29.69897000433602", 
     RowBox[{
     "-", "16.59259259259259259259259259259259259259`29.69897000433602"}], 
     "0", "0", "0", "0", 
     "6.4814814814814814814814814814814814814814814814814814814815`29.\
69897000433602", 
     "11.11111111111111111111111111111111111111`29.69897000433602", 
     RowBox[{
     "-", "16.59259259259259259259259259259259259259`29.69897000433602"}], 
     "0", "0", "0", "0"},
    {"0.5412284712696235329980185947264136564548087181832037799117`29.\
69897000433602", 
     "3.3927754915409236396890717878372199359853680841335162322817`29.\
69897000433602", 
     RowBox[{
     "-", "5.6966925773510135650053345526596555403139765279682975156226`29.\
69897000433602"}], 
     "2.7626886145404663923182441700960219478737997256515775034293`29.\
69897000433602", "0", "0", "0", 
     "0.5412284712696235329980185947264136564548087181832037799117`29.\
69897000433602", 
     "3.3927754915409236396890717878372199359853680841335162322817`29.\
69897000433602", 
     RowBox[{
     "-", "5.6966925773510135650053345526596555403139765279682975156226`29.\
69897000433602"}], 
     "2.7626886145404663923182441700960219478737997256515775034293`29.\
69897000433602", "0", "0", "0"},
    {"0.9332624595006670478368591576138745950066704783685915761388`29.\
69897000433602", 
     "7.5762042595769010863350485991995425957690108633504859919954`29.\
69897000433602", 
     RowBox[{
     "-", "11.70192490947207928340003811701924909472`29.69897000433602"}], 
     "5.1498177530017152658662092624356775300171526586620926243567`29.\
69897000433602", 
     RowBox[{
     "-", "0.9573595626072041166380789022298456260720411663807890222984`29.\
69897000433602"}], "0", "0", 
     "0.9332624595006670478368591576138745950066704783685915761388`29.\
69897000433602", 
     "7.5762042595769010863350485991995425957690108633504859919954`29.\
69897000433602", 
     RowBox[{
     "-", "11.70192490947207928340003811701924909472`29.69897000433602"}], 
     "5.1498177530017152658662092624356775300171526586620926243567`29.\
69897000433602", 
     RowBox[{
     "-", "0.9573595626072041166380789022298456260720411663807890222984`29.\
69897000433602"}], "0", "0"},
    {
     RowBox[{
     "-", "0.1629050925925925925925925925925925925925925925925925925926`29.\
69897000433602"}], 
     RowBox[{
     "-", "2.2817460317460317460317460317460317460317460317460317460317`29.\
69897000433602"}], 
     "3.134671059199361086153538983727662972945991813916342218229`29.\
69897000433602", 
     "0.2418154761904761904761904761904761904761904761904761904761`29.\
69897000433602", 
     RowBox[{
     "-", "1.1104068396226415094339622641509433962264150943396226415094`29.\
69897000433602"}], 
     "1.1785714285714285714285714285714285714285714285714285714285`29.\
69897000433602", "0", 
     RowBox[{
     "-", "0.1629050925925925925925925925925925925925925925925925925926`29.\
69897000433602"}], 
     RowBox[{
     "-", "2.2817460317460317460317460317460317460317460317460317460317`29.\
69897000433602"}], 
     "3.134671059199361086153538983727662972945991813916342218229`29.\
69897000433602", 
     "0.2418154761904761904761904761904761904761904761904761904761`29.\
69897000433602", 
     RowBox[{
     "-", "1.1104068396226415094339622641509433962264150943396226415094`29.\
69897000433602"}], 
     "1.1785714285714285714285714285714285714285714285714285714285`29.\
69897000433602", "0"},
    {"0", "0", "0", "0", "0", "0", "1.`29.69897000433602", 
     "0.0510011574074074074074074074074074074074074074074074074074`29.\
69897000433602", 
     "0.2277777777777777777777777777777777777777777777777777777778`29.\
69897000433602", 
     RowBox[{
     "-", "0.4286712588599381052211240890486173505041429569731456523909`29.\
69897000433602"}], 
     "0.6848958333333333333333333333333333333333333333333333333333`29.\
69897000433602", 
     RowBox[{
     "-", "0.4061939858490566037735849056603773584905660377358490566038`29.\
69897000433602"}], 
     "0.1911904761904761904761904761904761904761904761904761904762`29.\
69897000433602", "0.68`29.69897000433602"},
    {"0.2`29.69897000433602", 
     "0.2250000000000000000000000000000000000000000000000000000001`29.\
69897000433602", 
     "3.5555555555555555555555555555555555555555555555555555555556`29.\
69897000433602", 
     RowBox[{
     "-", "0.2908093278463648834019204389574759945130315500685871056242`29.\
69897000433602"}], 
     RowBox[{
     "-", "0.2735313036020583190394511149228130360205831903945111492281`29.\
69897000433602"}], 
     "0.1309523809523809523809523809523809523809523809523809523809`29.\
69897000433602", "0", "0.2`29.69897000433602", 
     "0.2250000000000000000000000000000000000000000000000000000001`29.\
69897000433602", 
     "3.5555555555555555555555555555555555555555555555555555555556`29.\
69897000433602", 
     RowBox[{
     "-", "0.2908093278463648834019204389574759945130315500685871056242`29.\
69897000433602"}], 
     RowBox[{
     "-", "0.2735313036020583190394511149228130360205831903945111492281`29.\
69897000433602"}], 
     "0.1309523809523809523809523809523809523809523809523809523809`29.\
69897000433602", 
     "0.0249999999999999999999999999999999999999999999999999999999`29.\
69897000433602"}
   },
   AutoDelete->False,
   GridBoxDividers->{"ColumnsIndexed" -> {1 -> GrayLevel[0], 8 -> {
         GrayLevel[0], 
         Thickness[Large]}, -1 -> GrayLevel[0]}, 
     "RowsIndexed" -> {1 -> GrayLevel[0], -2 -> {
         Thickness[Large], 
         RGBColor[1, 0, 0]}, -1 -> GrayLevel[0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.768641414653017*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RKDP45 = \\n{\\n    \\\"RKDP45\\\", 7, 5,\\n    \
{ { 1.00000000000000000000000000000, 0., 0., 0., 0., 0., 0.},\\n      { \
0.62500000000000000000000000000, 0.375000000000000000000000000000, 0., 0., \
0., 0., 0.},\\n      { 6.4814814814814814814814814815, \
11.1111111111111111111111111111, -16.5925925925925925925925925926, 0., 0., \
0., 0.},\\n      { 0.54122847126962353299801859473, \
3.39277549154092363968907178784, -5.6966925773510135650053345527, \
2.76268861454046639231824417010, 0., 0., 0.},\\n      { \
0.93326245950066704783685915761, 7.5762042595769010863350485992, \
-11.7019249094720792834000381170, 5.1498177530017152658662092624, \
-0.95735956260720411663807890223, 0., 0.},\\n      { \
-0.162905092592592592592592592593, -2.28174603174603174603174603175, \
3.13467105919936108615353898373, 0.241815476190476190476190476190, \
-1.11040683962264150943396226415, 1.17857142857142857142857142857, 0.},\\n    \
  { 0., 0., 0., 0., 0., 0., 1.00000000000000000000000000000 },\\n      // \
Alternative alpha[N-1]:\\n      { 0.051001157407407407407407407407, \
0.227777777777777777777777777778, -0.428671258859938105221124089049, \
0.68489583333333333333333333333, -0.406193985849056603773584905660, \
0.191190476190476190476190476190, 0.68000000000000000000000000000}\\n    \
},\\n    { 0.200000000000000000000000000000, \
0.225000000000000000000000000000, 3.55555555555555555555555555556, \
-0.290809327846364883401920438957, -0.273531303602058319039451114923, \
0.130952380952380952380952380952, 0.},\\n    // Alternative beta:\\n    { \
0.200000000000000000000000000000, 0.225000000000000000000000000000, \
3.55555555555555555555555555556, -0.290809327846364883401920438957, \
-0.273531303602058319039451114923, 0.130952380952380952380952380952, \
0.0250000000000000000000000000000}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.768641414715417*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Sanity check:\"\>", TextForm]], "InlineText"],
   Text["Sanity check:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.768641414793417*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.3088577344833500927803901186694406331547098856034712087188`30.", 
     "0.3039706198670389275623691354031974148953993954530900306837`30.\
014125438447447"},
    {"0.3293545422814155681911403701258290283479284026942392640483`29.\
5142442729819", 
     "0.3234323306038311596861846957590008119807296354041792881387`29.\
990708406119783"},
    {"0.341079292192569712113396028722494646279110976729343692301`29.\
40250769009774", 
     "0.3345044054584748973005387650560898010774390741224602445534`29.\
97777928517333"},
    {"0.40295122592126284033487639694777772505`27.981772016313872", 
     "0.3921349015793892696603264388209509831318931271068172270905`29.\
296827532300213"},
    {"0.41634597961461829828321506890159451261`27.467162459360885", 
     "0.4044212927043987944480149790743920935092233973635480801222`28.\
869861087942912"},
    {"0.43145462819603579895370763103395568016`27.05967339879834", 
     "0.4181925681342431147753786948263959777441792146827473627039`28.\
879268069578714"},
    {"0.42944349795987736252036386715376149248`26.84335947301624", 
     "0.416364896609924467217089695486443134881063443218695784413`29.\
393356545576616"},
    {"0.42944349795987736252036386715376149248`26.842630531181385", 
     "0.4294434979598773625203638671537614924821146625221068684556`29.\
36544674972389"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7686414148870173`*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``27.20842337948835", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.768641414933817*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.3088577344833500927803901186694406331547098856034712087188`30.", 
     "0.3039706198670389275623691354031974148953993954530900306837`30.\
014125438447447"},
    {"0.3293545422814155681911403701258290283479284026942392640483`29.\
5142442729819", 
     "0.3234323306038311596861846957590008119807296354041792881387`29.\
990708406119783"},
    {"0.341079292192569712113396028722494646279110976729343692301`29.\
40250769009774", 
     "0.3345044054584748973005387650560898010774390741224602445534`29.\
97777928517333"},
    {"0.40295122592126284033487639694777772505`27.981772016313872", 
     "0.3921349015793892696603264388209509831318931271068172270905`29.\
296827532300213"},
    {"0.41634597961461829828321506890159451261`27.467162459360885", 
     "0.4044212927043987944480149790743920935092233973635480801222`28.\
869861087942912"},
    {"0.43145462819603579895370763103395568016`27.05967339879834", 
     "0.4181925681342431147753786948263959777441792146827473627039`28.\
879268069578714"},
    {"0.42944349795987736252036386715376149248`26.84335947301624", 
     "0.416364896609924467217089695486443134881063443218695784413`29.\
393356545576616"},
    {"0.42944428268913318660719300759179615709`26.872935200487813", 
     "0.4294442826891331866071930075917961570981583729106142007358`29.\
413941210539363"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.768641415027417*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``27.23878054865701", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.768641415058617*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dormand and Prince. Table 2. RK5(4)7M", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
   3.74914584334225*^9, 3.7491458924667363`*^9}, {3.749391640671245*^9, 
   3.7493916898737316`*^9}, {3.7493937458723125`*^9, 3.7493937635783443`*^9}, 
   3.749478194506714*^9}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3c2ONrt2EOBXICGG3AJ3wZQh0yAuICghYhKkBAlx5QybJK186tP1vq7l
v6ry8vMMjvbutl3+WWXX8t7fPv/xv/+vv/of/+b1ev3jv/+n//mrv/4///kf
/uGv/+9//Q//9Df/7e//8X/+3d//7d/8l7//33/7d3/7D//pv//bf/rh//un
//mbf/d6/fNffwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwDZer9fdXQAA
AACAXq9/1VO3uQUepWo1Lf0DWQ4AAABo8zrorC5DX118Qa3+M1kRAAAAaNZz
1/H2qkRuvq5PC/p2TasKcw0rAgAAQAL3ZrKdabWsPJP49VehpBi4i0UBAAAg
gXJ6+zPPnZcFd7b2qJT8mT25vTMRx95+6n/k56uMOo3jzFuLVfQs0Gldqw8A
ACzneL3QZmAfLq4+xLzJGduT2yfqk08dO/azPIrZw3zm7N2uMOfmKqh5ojqj
fUjdQvW29u/duK5/IgAA8CiFlKTKwD5cXL3f7PkZ2I3b5+qtql6dlpw3zAdO
3UOsNTOTXpN4O82PG9jbXw1W1Tp2pr/Ypyq1Qx44J80tAAAASyukHrVZycBu
XFy906eJujLbCj7xyi5ViXcp0v95Y3zm7N1uuTk5fVU/6Ww2WLKz221TUVXr
2Jl44dqWa4fcOSdDZhUAAFhaORc4zRdGpRKdWcm9ec2n3OqyXtU+666JKoh3
6d4xPnDqnmDRaSm8pz1vcbDiwJab57951Xo639B47aibZ6Z/SgEAgATKGUEk
axiSUHTmJjemNjPyteYOBJ/ywDRweOcvmO3hja9r0WmJvDttb3GwSu28ve1M
bd/eNlhV621PqqrUNl476uaZ6Z9SAAAggXI6EMkahiQUnbnJjalN/wSO6kBz
Sji8S7Wq+v+onvNt3UWJvD7HMlVRGmm2trfB8pNaa5iQr9a7skgHRnXybZVR
sw0AAKRxWdbQ+ZQbs5vafG3S0xvaf04a2JzPXtO9tVw/M0tfLETeoGOZqig9
bbaht/EqkR42V6xtpGr24t2I9zPeZvP8AAAA6V2WNXx6SvDRN2Y3tfnX2Efn
SOt68tlreriKu16BdVck+AbVvmin5dtmbOAkd3agdkJ+VW/t9fueVHU12Gbb
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
JO4XAABgOb6VATCJ+wUAAFiOb2UATOJ+AQAAluNbGQAzuF8AAIAVeZcBYAb3
CwAAsCLvMgDM4H4BAABW5F0GgBleb66eEQAAwDkvMgBM4n4BAACW41sZAJO4
XwAAgOX4VgbAJO4XAABgOb6VATCDywUAAFiO/8XLAMzgcgEAAFbkXQaAGdwv
AADAirzLADCD+wUAAFiRdxkAZnC/AAAAK/IuA8Ak7hcAAGA5vpUBMIn7BQAA
WI5vZQDM4H4BAABW5F0GgBncL21iAgAA9+RdBoAZ3C9HXp/UB6nMJ90XAAD2
410GgBncL+8+fiXrjVKx+9FQvS1/dfn579J9oYEfUXkIpQIA7/ygAmAG7+y/
fAxIIkQH38n6gtzbsf3QykwYqJKOSQlVD/c3JEfLJdp5BUCbmwKAGdwvvzSi
EQ/UUcvcCPVeDe0BGauYjnpC1cOi6jmKJDpSYF3TGNtRld5cb3YkFBjFHQHA
cN5BfjoNRSRQjUGC0U6/JLZfMHtHY6x6Uq7tzlWKOQpmOVIeA4ut0rfdnUt0
ZUdagbGcJAAM55fqP5FQfKHB+0yCCfrV7GNf6b5KO/KJFB9lNtFdSdxcJUfx
FEfKY+BQ9Wl0xYGpulIjs5cbm4Jir2LqFQ9/lAEAc/iZ+k8kDvUGwTa59vE2
T070JdpJDKa4mLj3zW7v3186TV0dT2sjPVrvZBrNcnHgC9KV9vHf58/30Yq7
uzHUkDnUB4mPwDbUAAAzuF/+CYai0SYYyd6Aj02QXF8iXVTxQYJzkPqFfHgP
TP3v++pqX2zWaHA6q9PxE6FgtniJtpvJ7He85yuewfYgoyZQHyQ4E7ahAACY
wf3yTzAOjWb1EYa0/85QDNRVOcWnpLvzZenXwMSpHmwcGTby16M2wcEdYrcS
LNHeNjOn/GhHB0sw+LleH7vH/zRw/mxpmwKoL2H1CADcyjb3S13id9rwEYa0
/85QDBRMil9Qj/KzKrp27rxtPupn/NEIM85Ppnp9Eml52mbmrB/tKMiJ4yWS
0+DTf/01PX/180wbZL++hA2CwH6UIqtztP4TDEWjTTCSvQEflSCJvqGupBTT
J/UL+ZXreJ3MO9Lrw56O0LvA3DQY5XUg0vi0zcyJP9rYCHelbEgBqB/eRY6X
24qfovNGgCNjy7I9yFEXFc6FFN5PkVA02uSOgiGzipDou+mqhPqVIfWreM9s
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
W7K1b+Xjdb99ap6z0lEe/oPkmdpZk1MeYshGOGoWvIzcWQONus5uMp8H+uYP
ksbWe735zvz5Z2AlrJiL1ecPfGRr382vRDwkNYowrr5nRXtFpymTVp6gXeeR
XTB2BNutqBLJGVmQ2V7FcHXtptOWvemT7oG+WQk39Hpz9Yyu8fDlsyX7+s4e
kp2HLPPU6T0buYjbYRTqFUWyJrM8QfyErI/QPmPttSEqwZyRBcmNGxKryI57
bzxqVtI9UDGYG+Siq5g38zpw9bygSknf3ENSow7/Orpo4hdQu40gryiYNZuI
J+g6AxMNTveRXTZWLp6RXrkcyW/QqEDFb66xzX417p43b4olscHWixfzZl5N
V88OStTzzT0kNerwr/Z1EwlRsTs3FEycFLO9xBmYGKHdzC4bKxHPrjL4wnye
KZiC+DiVXZlo1tWSiGI8V0/H683VM/qS94U/Mw7sSj3f3ENSowj/Ob10TkPk
2tpMLvXfmRsM1K7e+Dn2hVPUFhulN6SR1FTSJL8Rp1GKhzGer7HNuiZJRPF4
LHa/gw2WkHC05GdGg/0Uf1Qw20NSowjfvd5U+ortuuIZlGuW1jiveo+yozMw
vjvqI3CqN7DtpJxm6vQpUhwRiXA8jOkCOG1TH4ouxZBukJENltCrveQHBoT9
9F5qfNlDUqMI5xHS1Y19j4DbesUUR6tPqX9l/J9glj/GOd734yBHf5LiuHTw
38f5OFrX09sNKuOQUAzp6hl5YFGdrveBMWE/yvjmHpIaRQhH4rvDPmJ1r6bi
mGOnSk47xe1kBfseDVJ5NH/G/RdgK92HJDHekrhiVFdPSlcF7qF3s39zbjDK
A7f2Qp6TmuesFLr4/c8zKWZmeJ25eoK3dhq9YDC/0D24kHws+F/FXNRTeR+L
TjstuN5HxYQtPW1rL+chqVGE8FHXEW0fAZxa932cfyqfVuR9iKMUBDMS7L5K
mhaddlp8pc+JCVt61L5e0UNSowjho64j2j4CAL7s52+P+O+Wj1/G3n1rESUr
zrnCT1Me4mlbezkPSc1mRRi8/V8H/7ttL4zG5RPgl650SBwAwJc97fezn6Y8
xNO29nKekJflKvDDJ61nuDrwDxVPgWQBAHzZ034w+2nKxrwXL+QJ6Viu8II7
aDNXR/254lmQL3h3uiPax50TEoC2p90IfpqyMT/8VvGcdDxnpW3BvfkrXO//
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
    "], {{0, 1015}, {1636, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{456.89999999999964`, Automatic},
  ImageSizeRaw->{1636, 1015},
  PlotRange->{{0, 1636}, {0, 1015}}]], "Input"]], "Text",
 CellChangeTimes->{
  3.7490596075153112`*^9, 3.7493915897215557`*^9, {3.7493916216392117`*^9, 
   3.7493916270368214`*^9}, {3.749392244887307*^9, 3.7493922482101126`*^9}, 
   3.749440617131527*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cppClassName", "=", "\"\<RK5DP_7M\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methodName", "=", "\"\<RK5(4)7M\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "methodDescription", "=", 
   "\"\<Runge-Kutta, Dormand and Prince method, variant 1\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "5"], "0", "0", "0", "0", "0"},
       {
        FractionBox["3", "40"], 
        FractionBox["9", "40"], "0", "0", "0", "0"},
       {
        FractionBox["44", "45"], 
        RowBox[{"-", 
         FractionBox["56", "15"]}], 
        FractionBox["32", "9"], "0", "0", "0"},
       {
        FractionBox["19372", "6561"], 
        RowBox[{"-", 
         FractionBox["25360", "2187"]}], 
        FractionBox["64448", "6561"], 
        RowBox[{"-", 
         FractionBox["212", "729"]}], "0", "0"},
       {
        FractionBox["9017", "3168"], 
        RowBox[{"-", 
         FractionBox["355", "33"]}], 
        FractionBox["46732", "5247"], 
        FractionBox["49", "176"], 
        RowBox[{"-", 
         FractionBox["5103", "18656"]}], "0"},
       {
        FractionBox["35", "384"], "0", 
        FractionBox["500", "1113"], 
        FractionBox["125", "192"], 
        RowBox[{"-", 
         FractionBox["2187", "6784"]}], 
        FractionBox["11", "84"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]1", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["35", "384"], ",", "0", ",", 
      FractionBox["500", "1113"], ",", 
      FractionBox["125", "192"], ",", 
      RowBox[{"-", 
       FractionBox["2187", "6784"]}], ",", 
      FractionBox["11", "84"], ",", "0"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"higher", " ", "order", " ", "first"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]2", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["5179", "57600"], ",", "0", ",", 
      FractionBox["7571", "16695"], ",", 
      FractionBox["393", "640"], ",", 
      RowBox[{"-", 
       FractionBox["92097", "339200"]}], ",", 
      FractionBox["187", "2100"], ",", 
      FractionBox["1", "40"]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
   "\"\<MoL descriptors (generator).nb\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, 3.7491461663408175`*^9, {3.749391305107856*^9, 
   3.749391312471069*^9}, {3.749391731135804*^9, 3.7493917367362137`*^9}, {
   3.749438159392806*^9, 3.749438164353615*^9}, {3.74943867394411*^9, 
   3.7494386741157103`*^9}, {3.7494392317004905`*^9, 3.749439231934491*^9}, 
   3.7494394617072945`*^9, {3.7494401058510265`*^9, 3.74944010823783*^9}, {
   3.7494401492687054`*^9, 3.7494401603291245`*^9}, {3.7494403137577944`*^9, 
   3.7494403265966167`*^9}, {3.7494403606358767`*^9, 3.749440376781905*^9}, {
   3.749532545323516*^9, 3.7495325456667166`*^9}, {3.7495327076262007`*^9, 
   3.7495327085466022`*^9}, 3.7495659680995617`*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"The two choices of \[Alpha] and \[Beta]:\"\>", TextForm]], 
    "InlineText"],
   Text["The two choices of \[Alpha] and \[Beta]:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.7686414158386173`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1.`29.69897000433602", "0", "0", "0", "0", "0", "0", 
     "1.`29.69897000433602", "0", "0", "0", "0", "0", "0"},
    {"0.625`29.69897000433602", "0.375`29.69897000433602", "0", "0", "0", "0",
      "0", "0.625`29.69897000433602", "0.375`29.69897000433602", "0", "0", 
     "0", "0", "0"},
    {"6.4814814814814814814814814814814814814814814814814814814815`29.\
69897000433602", 
     "11.11111111111111111111111111111111111111`29.69897000433602", 
     RowBox[{
     "-", "16.59259259259259259259259259259259259259`29.69897000433602"}], 
     "0", "0", "0", "0", 
     "6.4814814814814814814814814814814814814814814814814814814815`29.\
69897000433602", 
     "11.11111111111111111111111111111111111111`29.69897000433602", 
     RowBox[{
     "-", "16.59259259259259259259259259259259259259`29.69897000433602"}], 
     "0", "0", "0", "0"},
    {"0.5412284712696235329980185947264136564548087181832037799117`29.\
69897000433602", 
     "3.3927754915409236396890717878372199359853680841335162322817`29.\
69897000433602", 
     RowBox[{
     "-", "5.6966925773510135650053345526596555403139765279682975156226`29.\
69897000433602"}], 
     "2.7626886145404663923182441700960219478737997256515775034293`29.\
69897000433602", "0", "0", "0", 
     "0.5412284712696235329980185947264136564548087181832037799117`29.\
69897000433602", 
     "3.3927754915409236396890717878372199359853680841335162322817`29.\
69897000433602", 
     RowBox[{
     "-", "5.6966925773510135650053345526596555403139765279682975156226`29.\
69897000433602"}], 
     "2.7626886145404663923182441700960219478737997256515775034293`29.\
69897000433602", "0", "0", "0"},
    {"0.9332624595006670478368591576138745950066704783685915761388`29.\
69897000433602", 
     "7.5762042595769010863350485991995425957690108633504859919954`29.\
69897000433602", 
     RowBox[{
     "-", "11.70192490947207928340003811701924909472`29.69897000433602"}], 
     "5.1498177530017152658662092624356775300171526586620926243567`29.\
69897000433602", 
     RowBox[{
     "-", "0.9573595626072041166380789022298456260720411663807890222984`29.\
69897000433602"}], "0", "0", 
     "0.9332624595006670478368591576138745950066704783685915761388`29.\
69897000433602", 
     "7.5762042595769010863350485991995425957690108633504859919954`29.\
69897000433602", 
     RowBox[{
     "-", "11.70192490947207928340003811701924909472`29.69897000433602"}], 
     "5.1498177530017152658662092624356775300171526586620926243567`29.\
69897000433602", 
     RowBox[{
     "-", "0.9573595626072041166380789022298456260720411663807890222984`29.\
69897000433602"}], "0", "0"},
    {
     RowBox[{
     "-", "0.1629050925925925925925925925925925925925925925925925925926`29.\
69897000433602"}], 
     RowBox[{
     "-", "2.2817460317460317460317460317460317460317460317460317460317`29.\
69897000433602"}], 
     "3.134671059199361086153538983727662972945991813916342218229`29.\
69897000433602", 
     "0.2418154761904761904761904761904761904761904761904761904761`29.\
69897000433602", 
     RowBox[{
     "-", "1.1104068396226415094339622641509433962264150943396226415094`29.\
69897000433602"}], 
     "1.1785714285714285714285714285714285714285714285714285714285`29.\
69897000433602", "0", 
     RowBox[{
     "-", "0.1629050925925925925925925925925925925925925925925925925926`29.\
69897000433602"}], 
     RowBox[{
     "-", "2.2817460317460317460317460317460317460317460317460317460317`29.\
69897000433602"}], 
     "3.134671059199361086153538983727662972945991813916342218229`29.\
69897000433602", 
     "0.2418154761904761904761904761904761904761904761904761904761`29.\
69897000433602", 
     RowBox[{
     "-", "1.1104068396226415094339622641509433962264150943396226415094`29.\
69897000433602"}], 
     "1.1785714285714285714285714285714285714285714285714285714285`29.\
69897000433602", "0"},
    {"0", "0", "0", "0", "0", "0", "1.`29.69897000433602", 
     "0.0510011574074074074074074074074074074074074074074074074074`29.\
69897000433602", 
     "0.2277777777777777777777777777777777777777777777777777777778`29.\
69897000433602", 
     RowBox[{
     "-", "0.4286712588599381052211240890486173505041429569731456523909`29.\
69897000433602"}], 
     "0.6848958333333333333333333333333333333333333333333333333333`29.\
69897000433602", 
     RowBox[{
     "-", "0.4061939858490566037735849056603773584905660377358490566038`29.\
69897000433602"}], 
     "0.1911904761904761904761904761904761904761904761904761904762`29.\
69897000433602", "0.68`29.69897000433602"},
    {"0.2`29.69897000433602", 
     "0.2250000000000000000000000000000000000000000000000000000001`29.\
69897000433602", 
     "3.5555555555555555555555555555555555555555555555555555555556`29.\
69897000433602", 
     RowBox[{
     "-", "0.2908093278463648834019204389574759945130315500685871056242`29.\
69897000433602"}], 
     RowBox[{
     "-", "0.2735313036020583190394511149228130360205831903945111492281`29.\
69897000433602"}], 
     "0.1309523809523809523809523809523809523809523809523809523809`29.\
69897000433602", "0", "0.2`29.69897000433602", 
     "0.2250000000000000000000000000000000000000000000000000000001`29.\
69897000433602", 
     "3.5555555555555555555555555555555555555555555555555555555556`29.\
69897000433602", 
     RowBox[{
     "-", "0.2908093278463648834019204389574759945130315500685871056242`29.\
69897000433602"}], 
     RowBox[{
     "-", "0.2735313036020583190394511149228130360205831903945111492281`29.\
69897000433602"}], 
     "0.1309523809523809523809523809523809523809523809523809523809`29.\
69897000433602", 
     "0.0249999999999999999999999999999999999999999999999999999999`29.\
69897000433602"}
   },
   AutoDelete->False,
   GridBoxDividers->{"ColumnsIndexed" -> {1 -> GrayLevel[0], 8 -> {
         GrayLevel[0], 
         Thickness[Large]}, -1 -> GrayLevel[0]}, 
     "RowsIndexed" -> {1 -> GrayLevel[0], -2 -> {
         Thickness[Large], 
         RGBColor[1, 0, 0]}, -1 -> GrayLevel[0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.768641415885417*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RK5DP_7M = \\n{\\n    \\\"RK5(4)7M\\\", 7, 5,\\n \
   { { 1.00000000000000000000000000000, 0., 0., 0., 0., 0., 0.},\\n      { \
0.62500000000000000000000000000, 0.375000000000000000000000000000, 0., 0., \
0., 0., 0.},\\n      { 6.4814814814814814814814814815, \
11.1111111111111111111111111111, -16.5925925925925925925925925926, 0., 0., \
0., 0.},\\n      { 0.54122847126962353299801859473, \
3.39277549154092363968907178784, -5.6966925773510135650053345527, \
2.76268861454046639231824417010, 0., 0., 0.},\\n      { \
0.93326245950066704783685915761, 7.5762042595769010863350485992, \
-11.7019249094720792834000381170, 5.1498177530017152658662092624, \
-0.95735956260720411663807890223, 0., 0.},\\n      { \
-0.162905092592592592592592592593, -2.28174603174603174603174603175, \
3.13467105919936108615353898373, 0.241815476190476190476190476190, \
-1.11040683962264150943396226415, 1.17857142857142857142857142857, 0.},\\n    \
  { 0., 0., 0., 0., 0., 0., 1.00000000000000000000000000000 },\\n      // \
Alternative alpha[N-1]:\\n      { 0.051001157407407407407407407407, \
0.227777777777777777777777777778, -0.428671258859938105221124089049, \
0.68489583333333333333333333333, -0.406193985849056603773584905660, \
0.191190476190476190476190476190, 0.68000000000000000000000000000}\\n    \
},\\n    { 0.200000000000000000000000000000, \
0.225000000000000000000000000000, 3.55555555555555555555555555556, \
-0.290809327846364883401920438957, -0.273531303602058319039451114923, \
0.130952380952380952380952380952, 0.},\\n    // Alternative beta:\\n    { \
0.200000000000000000000000000000, 0.225000000000000000000000000000, \
3.55555555555555555555555555556, -0.290809327846364883401920438957, \
-0.273531303602058319039451114923, 0.130952380952380952380952380952, \
0.0250000000000000000000000000000}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.768641415947817*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Sanity check:\"\>", TextForm]], "InlineText"],
   Text["Sanity check:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.768641416041417*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.2633669774219873624671524900322392945711420463974635847388`30.", 
     "0.2603329017813308457868417157359241223164086037191873736308`30.\
010206952299416"},
    {"0.2864573255095605517117085731134662680123359472565237180375`29.\
511627799443016", 
     "0.2825556916465099211249080971406309890313378858857206627473`29.\
97919745304925"},
    {"0.3002199428488237291537100351199986405253057768457915657093`29.\
39523769410602", 
     "0.2957303189407752345859548021988553711645869145776230217585`29.\
961524653488055"},
    {"0.37475017731652296245353770173988028862`27.99303999590871", 
     "0.3660400557475779451801061156315309705506954925562394247137`29.\
21078673303184"},
    {"0.39227721412410726134449873901457945632`27.476258204009287", 
     "0.3822936435055166283773252204928846069417760006868128753103`28.\
774832758642294"},
    {"0.41086916461874866329631697392711697681`27.081509651718616", 
     "0.3994063062902401292273579722568410772101371427584386931903`28.\
777737501692236"},
    {"0.40703111448398929133046021043380582435`26.8618604784451", 
     "0.3958847485310251913721064657918701604889439412038900849581`29.\
22867095771185"},
    {"0.40703111448398929133046021043380582435`26.86105956848388", 
     "0.4070311144839892913304602104338058243539451841873693076062`29.\
203714477008837"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.768641416120417*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``27.249463417086776", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.768641416151617*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.2633669774219873624671524900322392945711420463974635847388`30.", 
     "0.2603329017813308457868417157359241223164086037191873736308`30.\
010206952299416"},
    {"0.2864573255095605517117085731134662680123359472565237180375`29.\
511627799443016", 
     "0.2825556916465099211249080971406309890313378858857206627473`29.\
97919745304925"},
    {"0.3002199428488237291537100351199986405253057768457915657093`29.\
39523769410602", 
     "0.2957303189407752345859548021988553711645869145776230217585`29.\
961524653488055"},
    {"0.37475017731652296245353770173988028862`27.99303999590871", 
     "0.3660400557475779451801061156315309705506954925562394247137`29.\
21078673303184"},
    {"0.39227721412410726134449873901457945632`27.476258204009287", 
     "0.3822936435055166283773252204928846069417760006868128753103`28.\
774832758642294"},
    {"0.41086916461874866329631697392711697681`27.081509651718616", 
     "0.3994063062902401292273579722568410772101371427584386931903`28.\
777737501692236"},
    {"0.40703111448398929133046021043380582435`26.8618604784451", 
     "0.3958847485310251913721064657918701604889439412038900849581`29.\
22867095771185"},
    {"0.40703373956597548401342929977682602442`26.89170588671533", 
     "0.4070337395659754840134292997768260244167783956290093044709`29.\
25747222983786"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7686414162608175`*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``27.280208734907255", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.768641416292017*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dormand and Prince. Table 3. RK5(4)7S (with FSAL)", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
  3.749145629185074*^9, 3.749145633958682*^9}, {3.749146187837655*^9, 
  3.74914619063006*^9}, {3.7493918014164276`*^9, 3.7493918110260444`*^9}, {
  3.7493937789755707`*^9, 3.7493937832031784`*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs/U3O5bzWJuht2NUw4I6n4FlU1013y/AAquB0wZ00kGXA8Ag9rHBWRUHe
X2iLWlwkJVK6rkbi/Z5HohZv/r5x4pz8P/4P/8//7v/+v/l8Pv/T/+6//j//
3X////4//Zf/8t//f/4v/4f/+n/8X//z//T/+B//83/6v/2f//P/6z/9j//p
v/y3/8P/9r/+8H//33w+/9//+g//8z//AQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAIBLfP4XLe/6/3ZnaZ8v8ScN+u0MBwBMIn0of3bGFck4+3EsDGXVw4xm
OABgBi0n8s93HejLORrH/VAWnjTutzAcq2gcEQMKML/ul+qh1cYruaWMFVXd
k08flv9lymNhCAbJxdsyKMExbfzEvoV4g+YhMI/TwzGibwEtr7dUkjPJZj5o
dIb6WeRR5fufF7rcsderhHmx8tjdWNg/ypMkN7hV7eQ+16vUP+FbcaSMyJOJ
ZtOdbXwdoK/azW3QrtXS2o375ySb+WXD1F28tkJHtp8M6u/kGd5ilUDiS6Nq
lKteT3yovcKfTQVfKVTS60ORDp5+uvF1gO4Sm9uIXaulqRs3z9GxdCng4pLi
4iUF6x/U02kDvNFCaeTWSLlfVe8mPtFY3lFTwVcKZQSfT7Rc29nTZ3JxAbSo
3dzim15LGS2vN1aS++i4ZGoLiDw2rqS4qpKCDw/q6YTp3Wu5NE7X5ukDVS2f
PpYuuDb5lpFKfDT3ZK6zkcLSfQfIKexLkc2t165VtXWXX2+spPGLkeOgewGn
37qmpCpVJcUfHtHNCdO714ppnK6Xnw/Uzsyfzyfmz1ExtbG3jFRjGonGq/ob
Kayl+wAJhW2ndmfrVUZtUy3vpsVzG/314IdmO1/SxUfqH9HHeaK73WxzKSKy
ZBqX1dHzibh6JZxu5GcUwaUXebjxmXhhXWIECGrfuPpu/u1HQEsZtR89LWZE
PftxiXzllogK4vWPzvMBrp/5yw1HcNXUrqyqNhPVxl8p15Z+MbH6Ig9XZRsp
stzOac0AXbSfL+2b/5+2Yzqx7Q81up7cSfen00ndS9WZONX4zubiZBYdjv2q
+Vl87eI6fT4XVJdsc8P0M6iqdrrMjdOP5moDuMuVu1bjV+bZWi9IrGVcZojo
r3gXHJ1lFyez6GVmX/bPymt7V34+nVKXYNP7Q8Gg75bLqCo1/VGAoRq3rKp3
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
uRCCj3363WkbW2gvgL8i+QzN8LPTt/2qT+e+Hmzh5zPrTs7EAmxs8Od43TV5
BunbxyclA6/Sa3MrvF675carjX8i8eTFGhMIPtk36lsK4K9IPkMz/Oz0bT/+
3XQBtVMx8e6EEguwscHCkK0Y4E99+/iwcOA9uuxv+xb++Ydy+/ECjp6M1z/t
ZtWYQPzJjq/fUgCbckSjA/zsdP9E8Lu5GoIvHj2z7uRMLMB4g0cP9xq1yY2Y
nOOqBbpr39/K20hkh4kXEGkh8foMundhXFa3F8BfnxoXfL37J+Kfrq0h+Fbh
mXUnZ7DyeAcjYRaGbMUMf+rYx4clA+/RuLOdbiORHSZeQ6SF4Ou1PR0tXltj
Z9uzur0ANp+wCz7d/RODyog/X3js9o6ndV+Ap3mezc0lY/wW7GC8j8+IBV6o
fVuL7yeFbwXLGPT6DOK1BZ8cl1XHAhKv849PzAWfHvGJEWUkZuCNIXeX6376
yZ+/XTe9n446ku7mM2KBF2rf1n7uG6cSZRSeCfZi5p0qXlt7Z+d/Pf4Ym0/R
BV8c8YlEJfEn4zMwrmu3hsh1P/dk/FerpLd32oVEH1fPBF7rgj0t8on2Z7p8
4kZVtd2eVVULide/nzl6gIJrZvs8aypYRrzgT1bvnvUXrzaRVW0Ly6W3F6m/
to+rZwKvdcGe1r4zRx447cjku3dVbR2zGtF+VQG5Cim7YLZ/dkZ8JVFM+2P7
h4P6dWiUqoIbU028vkSG3+LFp+dev2KB4S7Y0LpsrZE6yw9Mvk3VllcIpDGr
2tfLLUTqT7xOwWdn3a8kisk9U9uFSTpeq2rIalP9uFTHnqxqtl+xwHAXbGi5
bWd78rMTfP37ycn3qMQoHHW2Mav0YP19uDAE5RbKP6RKYjq1f+XG8aqd8OUH
On50QlVD1hhs8EOTzKKcePFVfVw3EHi5Cza09Db+09DXr3Ra6mnBt2fVHnV7
C/zjsgznGa/TGk7rTPRiho7nxCuPjG/hgeCHJplFOfHiqzq4biDwchdsaLWf
+BxLfG7aHbtcZ7DmcVk19iL4epcW2FwZ42XfKjd+WkNhkveat5le3aeq8nI+
Lb/N1TOhSDdr+7h6JvBa6TNl6Cc+O40fnXZr2gprKbhvVrWvd2mBRvv5M3og
rvlc+ROnBfyMpSBXWFMPr5Lu8s/ng+2Un2nJfx7lVHNBFVzVLSDjmgVrQ4BB
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
AAAAAAAAAAAAAAAAAAAAAAAAAADgZP8AwzPFuQ==
    "], {{0, 1035}, {967, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{311.29999999999893`, Automatic},
  ImageSizeRaw->{967, 1035},
  PlotRange->{{0, 967}, {0, 1035}}]], "Input"]], "Text",
 CellChangeTimes->{
  3.749145095523737*^9, {3.7493921867005043`*^9, 3.7493921893912096`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cppClassName", "=", "\"\<RK5DP_7S\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methodName", "=", "\"\<RK5(4)7S\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "methodDescription", "=", 
   "\"\<Runge-Kutta, Dormand and Prince method, variant 2\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["2", "9"], "0", "0", "0", "0", "0"},
       {
        FractionBox["1", "12"], 
        FractionBox["1", "4"], "0", "0", "0", "0"},
       {
        FractionBox["55", "324"], 
        RowBox[{"-", 
         FractionBox["25", "108"]}], 
        FractionBox["50", "81"], "0", "0", "0"},
       {
        FractionBox["83", "330"], 
        RowBox[{"-", 
         FractionBox["13", "22"]}], 
        FractionBox["61", "66"], 
        FractionBox["9", "110"], "0", "0"},
       {
        RowBox[{"-", 
         FractionBox["19", "28"]}], 
        FractionBox["9", "4"], 
        FractionBox["1", "7"], 
        RowBox[{"-", 
         FractionBox["27", "7"]}], 
        FractionBox["22", "7"], "0"},
       {
        FractionBox["19", "200"], "0", 
        FractionBox["3", "5"], 
        RowBox[{"-", 
         FractionBox["243", "400"]}], 
        FractionBox["33", "40"], 
        FractionBox["7", "80"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]1", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["19", "200"], ",", "0", ",", 
      FractionBox["3", "5"], ",", 
      RowBox[{"-", 
       FractionBox["243", "400"]}], ",", 
      FractionBox["33", "40"], ",", 
      FractionBox["7", "80"], ",", "0"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"higher", " ", "order", " ", "first"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]2", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["431", "5000"], ",", "0", ",", 
      FractionBox["333", "500"], ",", 
      RowBox[{"-", 
       FractionBox["7857", "10000"]}], ",", 
      FractionBox["957", "1000"], ",", 
      FractionBox["193", "2000"], ",", 
      RowBox[{"-", 
       FractionBox["1", "50"]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
   "\"\<MoL descriptors (generator).nb\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, {3.749145162759855*^9, 3.749145333174554*^9}, 
   3.7491461752640333`*^9, {3.749391320489483*^9, 3.7493913243270893`*^9}, {
   3.749391778468787*^9, 3.749391780574791*^9}, {3.7494381185675344`*^9, 
   3.749438126289548*^9}, {3.749438166350418*^9, 3.7494381674424205`*^9}, {
   3.749439477182522*^9, 3.749439477525722*^9}, {3.7494401707343426`*^9, 
   3.7494401723099456`*^9}, {3.7494403833495164`*^9, 
   3.7494403852059197`*^9}, {3.749532549987924*^9, 3.749532550315524*^9}, {
   3.7495327092642035`*^9, 3.7495327102626057`*^9}, 3.749565973247571*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"The two choices of \[Alpha] and \[Beta]:\"\>", TextForm]], 
    "InlineText"],
   Text["The two choices of \[Alpha] and \[Beta]:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.7686414171344175`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1.`29.69897000433602", "0", "0", "0", "0", "0", "0", 
     "1.`29.69897000433602", "0", "0", "0", "0", "0", "0"},
    {"0.625`29.69897000433602", "0.375`29.69897000433602", "0", "0", "0", "0",
      "0", "0.625`29.69897000433602", "0.375`29.69897000433602", "0", "0", 
     "0", "0", "0"},
    {"0.8148148148148148148148148148148148148148148148148148148147`29.\
69897000433602", 
     "1.1111111111111111111111111111111111111111111111111111111111`29.\
69897000433602", 
     RowBox[{
     "-", "0.925925925925925925925925925925925925925925925925925925926`29.\
69897000433602"}], "0", "0", "0", "0", 
     "0.8148148148148148148148148148148148148148148148148148148147`29.\
69897000433602", 
     "1.1111111111111111111111111111111111111111111111111111111111`29.\
69897000433602", 
     RowBox[{
     "-", "0.925925925925925925925925925925925925925925925925925925926`29.\
69897000433602"}], "0", "0", "0", "0"},
    {"0.1254545454545454545454545454545454545454545454545454545455`29.\
69897000433602", 
     "0.3545454545454545454545454545454545454545454545454545454545`29.\
69897000433602", 
     RowBox[{
     "-", "0.9772727272727272727272727272727272727272727272727272727273`29.\
69897000433602"}], 
     "1.4972727272727272727272727272727272727272727272727272727273`29.\
69897000433602", "0", "0", "0", 
     "0.1254545454545454545454545454545454545454545454545454545455`29.\
69897000433602", 
     "0.3545454545454545454545454545454545454545454545454545454545`29.\
69897000433602", 
     RowBox[{
     "-", "0.9772727272727272727272727272727272727272727272727272727273`29.\
69897000433602"}], 
     "1.4972727272727272727272727272727272727272727272727272727273`29.\
69897000433602", "0", "0", "0"},
    {"4.1542857142857142857142857142857142857142857142857142857143`29.\
69897000433602", 
     "10.02857142857142857142857142857142857143`29.69897000433602", 
     RowBox[{
     "-", "36.85714285714285714285714285714285714286`29.69897000433602"}], 
     "70.81714285714285714285714285714285714286`29.69897000433602", 
     RowBox[{
     "-", "47.14285714285714285714285714285714285714`29.69897000433602"}], 
     "0", "0", 
     "4.1542857142857142857142857142857142857142857142857142857143`29.\
69897000433602", 
     "10.02857142857142857142857142857142857143`29.69897000433602", 
     RowBox[{
     "-", "36.85714285714285714285714285714285714286`29.69897000433602"}], 
     "70.81714285714285714285714285714285714286`29.69897000433602", 
     RowBox[{
     "-", "47.14285714285714285714285714285714285714`29.69897000433602"}], 
     "0", "0"},
    {
     RowBox[{"-", "0.3785`29.69897000433602"}], 
     RowBox[{
     "-", "0.6525000000000000000000000000000000000000000000000000000001`29.\
69897000433602"}], 
     "3.3187500000000000000000000000000000000000000000000000000001`29.\
69897000433602", 
     RowBox[{"-", "6.50025`29.69897000433602"}], "4.95`29.69897000433602", 
     "0.2625`29.69897000433602", "0", 
     RowBox[{"-", "0.3785`29.69897000433602"}], 
     RowBox[{
     "-", "0.6525000000000000000000000000000000000000000000000000000001`29.\
69897000433602"}], 
     "3.3187500000000000000000000000000000000000000000000000000001`29.\
69897000433602", 
     RowBox[{"-", "6.50025`29.69897000433602"}], "4.95`29.69897000433602", 
     "0.2625`29.69897000433602", "0"},
    {"0", "0", "0", "0", "0", "0", "1.`29.69897000433602", 
     "0.0901714285714285714285714285714285714285714285714285714285`29.\
69897000433602", 
     "0.2597142857142857142857142857142857142857142857142857142857`29.\
69897000433602", 
     RowBox[{
     "-", "0.8228571428571428571428571428571428571428571428571428571428`29.\
69897000433602"}], 
     "1.0622571428571428571428571428571428571428571428571428571429`29.\
69897000433602", 
     RowBox[{
     "-", "0.7071428571428571428571428571428571428571428571428571428571`29.\
69897000433602"}], 
     "0.0149999999999999999999999999999999999999999999999999999999`29.\
69897000433602", 
     "1.1028571428571428571428571428571428571428571428571428571428`29.\
69897000433602"},
    {"0.2222222222222222222222222222222222222222222222222222222222`29.\
69897000433602", "0.25`29.69897000433602", 
     "0.6172839506172839506172839506172839506172839506172839506173`29.\
69897000433602", 
     "0.0818181818181818181818181818181818181818181818181818181818`29.\
69897000433602", 
     "3.1428571428571428571428571428571428571428571428571428571428`29.\
69897000433602", 
     "0.0874999999999999999999999999999999999999999999999999999999`29.\
69897000433602", "0", 
     "0.2222222222222222222222222222222222222222222222222222222222`29.\
69897000433602", "0.25`29.69897000433602", 
     "0.6172839506172839506172839506172839506172839506172839506173`29.\
69897000433602", 
     "0.0818181818181818181818181818181818181818181818181818181818`29.\
69897000433602", 
     "3.1428571428571428571428571428571428571428571428571428571428`29.\
69897000433602", 
     "0.0874999999999999999999999999999999999999999999999999999999`29.\
69897000433602", 
     RowBox[{"-", "0.02`29.69897000433602"}]}
   },
   AutoDelete->False,
   GridBoxDividers->{"ColumnsIndexed" -> {1 -> GrayLevel[0], 8 -> {
         GrayLevel[0], 
         Thickness[Large]}, -1 -> GrayLevel[0]}, 
     "RowsIndexed" -> {1 -> GrayLevel[0], -2 -> {
         Thickness[Large], 
         RGBColor[1, 0, 0]}, -1 -> GrayLevel[0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.768641417165617*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RK5DP_7S = \\n{\\n    \\\"RK5(4)7S\\\", 7, 5,\\n \
   { { 1.00000000000000000000000000000, 0., 0., 0., 0., 0., 0.},\\n      { \
0.62500000000000000000000000000, 0.375000000000000000000000000000, 0., 0., \
0., 0., 0.},\\n      { 0.81481481481481481481481481481, \
1.11111111111111111111111111111, -0.92592592592592592592592592593, 0., 0., \
0., 0.},\\n      { 0.125454545454545454545454545455, \
0.354545454545454545454545454545, -0.97727272727272727272727272727, \
1.49727272727272727272727272727, 0., 0., 0.},\\n      { \
4.15428571428571428571428571429, 10.0285714285714285714285714286, \
-36.8571428571428571428571428571, 70.817142857142857142857142857, \
-47.1428571428571428571428571429, 0., 0.},\\n      { \
-0.378500000000000000000000000000, -0.65250000000000000000000000000, \
3.31875000000000000000000000000, -6.5002500000000000000000000000, \
4.95000000000000000000000000000, 0.262500000000000000000000000000, 0.},\\n    \
  { 0., 0., 0., 0., 0., 0., 1.00000000000000000000000000000 },\\n      // \
Alternative alpha[N-1]:\\n      { 0.090171428571428571428571428571, \
0.259714285714285714285714285714, -0.82285714285714285714285714286, \
1.06225714285714285714285714286, -0.70714285714285714285714285714, \
0.0150000000000000000000000000000, 1.10285714285714285714285714286}\\n    \
},\\n    { 0.222222222222222222222222222222, \
0.250000000000000000000000000000, 0.61728395061728395061728395062, \
0.081818181818181818181818181818, 3.14285714285714285714285714286, \
0.087500000000000000000000000000, 0.},\\n    // Alternative beta:\\n    { \
0.222222222222222222222222222222, 0.250000000000000000000000000000, \
0.61728395061728395061728395062, 0.081818181818181818181818181818, \
3.14285714285714285714285714286, 0.087500000000000000000000000000, \
-0.0200000000000000000000000000000}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.768641417228017*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Sanity check:\"\>", TextForm]], "InlineText"],
   Text["Sanity check:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.768641417321617*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.2312202647346551853058613978911134714240405817664271315311`30.", 
     "0.2291654842709774827176289540852943810124219781205000529209`30.\
007837558240396"},
    {"0.2818749305684100108160740621597555433208593751717130302913`29.\
498052210781918", 
     "0.278157073982315003466250178064509937319777317157023661399`29.\
941131149265473"},
    {"0.319384984587726689438300178234064777702601232459863038697`29.\
357540988959865", 
     "0.3139827067494756591001458400518909066539883885383827911049`29.\
899045916464306"},
    {"0.398654331748838301412068505636417220922754874163559878926`28.\
939501119624087", 
     "0.3881785475619054119216229661291931823544417277150862349551`29.\
67935959280245"},
    {"0.4453041862334104941448944327653616406989192469949980604205`28.\
608001321907693", 
     "0.4307324221202422615732140008248466768107765156222794000377`29.\
518569495137758"},
    {"0.60091572771733082474270005226235298919`26.903040008458454", 
     "0.5653980192455766260000793020089759528318226654796100419212`28.\
756598472715048"},
    {"0.60837099880775168862332089502611211362`27.265526815430686", 
     "0.5715314929994803663613428578537681953403582929609692540624`29.\
267866445590162"},
    {"0.60837099880775168862332089502611211362`27.26188395367882", 
     "0.6083709988077516886233208950261121136165526674425166178511`29.\
209115779689814"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.768641417399617*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``27.472838909131863", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.768641417430817*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.2312202647346551853058613978911134714240405817664271315311`30.", 
     "0.2291654842709774827176289540852943810124219781205000529209`30.\
007837558240396"},
    {"0.2818749305684100108160740621597555433208593751717130302913`29.\
498052210781918", 
     "0.278157073982315003466250178064509937319777317157023661399`29.\
941131149265473"},
    {"0.319384984587726689438300178234064777702601232459863038697`29.\
357540988959865", 
     "0.3139827067494756591001458400518909066539883885383827911049`29.\
899045916464306"},
    {"0.398654331748838301412068505636417220922754874163559878926`28.\
939501119624087", 
     "0.3881785475619054119216229661291931823544417277150862349551`29.\
67935959280245"},
    {"0.4453041862334104941448944327653616406989192469949980604205`28.\
608001321907693", 
     "0.4307324221202422615732140008248466768107765156222794000377`29.\
518569495137758"},
    {"0.60091572771733082474270005226235298919`26.903040008458454", 
     "0.5653980192455766260000793020089759528318226654796100419212`28.\
756598472715048"},
    {"0.60837099880775168862332089502611211362`27.265526815430686", 
     "0.5715314929994803663613428578537681953403582929609692540624`29.\
267866445590162"},
    {"0.60841816372167558929742043386024113594`27.187343190939064", 
     "0.6084181637216755892974204338602411359334208498665588621894`29.\
13990185693904"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.768641417540017*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``27.39832359775508", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7686414175712175`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dormand and Prince. Table 4. RK5(4)6M", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
  3.749145629185074*^9, 3.749145633958682*^9}, {3.749146187837655*^9, 
  3.74914619063006*^9}, {3.7493918014164276`*^9, 3.7493918110260444`*^9}, {
  3.749392199359627*^9, 3.749392211231248*^9}, {3.7493938011588097`*^9, 
  3.749393803420814*^9}, {3.74939388651896*^9, 3.7493938878761625`*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
z3xaq9flpjiHJ+dhd6c9m32S/EwMr+Szyk0Lf8wDSx6e87HuyOp0OhMow+RR
tQPbNnxnPMvrqF6Xm+K8I0VPujXnCe2T5GdiGJWNH7+tivnFJD/jzwILKe1J
QkMRnzQylcDbar/xu3vFuF6VTltC7hOMeWzwdyZ4gFHLJCG1po3dAtxnt6vI
JssEftiq0QEwBWcTsAO9DoBsdvvn4cCeNDoAsnEPB3ag0QGQjXs4sAONDoBs
3MOBHWh0AGTjHg7sQKMDIBv3cGAHGh0A2Tib2kgXzCVDr2t79fGflmg+01HB
h339apSAhPLvzFERjlpg8nRl9solRPvtt8ZZ9m7YA3fvjMlfQ3Pmle95l9+O
/JNE8p055AsatUAfcrNRtaudp/Nxfi10FXwl7M6kLZP8BajgRC7TLvPkkXZz
DvmOBn59aROVX0/qmvfA2UhFrHKZ/4ly+HzYnUkrPDJd8ud1RwUn/YImUvj0
pJ1s0m7OyHdUiHbg15c2Rfl1luDskchshQGqGVf4jqZL4MNh9yetPH66/M/o
vgrO+AVNpP/rg8fk3KLB9lUIeNQ3mDA5s+gsQXl8fAM0TM4fXxM1adIe/pYL
+z/y9vgOn7Qc+angvCSWiTS0lwfE21ewxTUvMFtmJvIjb7WZvBxcmDDyLmWN
WClL7/a6qldHBmtND2huYrUVVMSxZJWJvHs2nSlH0hBw2wKzpWVqVcmMDC6M
qXo8voQNrZSid3td1auDIzWoh7VV8Gzwi7txebLKRN49m8ohRcYEA25YYLa0
zK4qmZHBhTFVj8eXsKGVUvTuF1319uBIDepJzRU8G/zuhlybrDKRz8HbEYXU
BtwzfpacJFeVz8jgQo0uy6e4QSul6N2PuurtwZG28cNUcBafE2/HBV9Muktr
Y757PJfajrC2U6zcfifd869Y6Th7dwltu7pt/3OTeMKH15oqZ41Lqkloxs3Z
EHPV+K/zz5WihNqOsPgpVp5EN26wWPbeDf7u/T9dOWY0vC4qeJPL3iXb5DHj
5myItuqRyCc8RaJSiacunufyMBXstNiH8G7Yd+//iQoxr+F1Ub47BBuXnJPE
jDuzIdSqBfqK7xDP28CRatdjsQ/h3ZjbdnV58IxVmNrwuqjgTRbrXaxtum3Z
FmrVU2c58RX3iCdt4MhiA1a7a8eMzZvJd2Nu29XlwdOVYHYNdRk1kiqFfMo5
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
evZ/fAzNqvL/ObkKRubfrXyXC6/9AM+SP/XnE8xSzx6rzVLORK1hyTzH93D/
/hwW9Fri+S+X4HL+5iKut+2fN1cCPwdDpir8Nh5M8FfxGOjUU8H4/LvVLr6x
4/Ms+fkMCa8wSUOWciZqDUvm+XJF5QFV+3NY0AuJJCdYgsjj5SbTFgARcyXw
c9A/T3lA2yTBIIeshTORrPbkf8/Cjdqxy38+d2fp8rfHMQmztIwl83y5os79
uV7GhrtMTqQEkVd8HRkskDr2mC57n4POeUYFU44zMsMsJVhJT/63Ldzwb2fJ
z2dUYOV5Zs/SSpbM8+Wi4r9t3sCUdeawXKPg5OrYbMbUjep1Qxbe32FGLYc2
Pcnfs3CjVn2582f/fMa2qUiWzl6UOUsrWTXPhXU1bL+/hy2Zrud1pjHeYe6L
YVuTNo0hYQ9Z+GUkDT2qORjaNCd/26o98+0MHPMWWdrNqnn+fHP8edXjq+bq
ef2ZLD8enFxBa039LQyJuX/JkTBGjeEmPcnfs2Sj9mpknsvqZO5gQ6IKTlKb
qOZ4KFs4z8dvrWqlnY9T0JnJqu7RMw9/m/2LGBJw/3qDYZSHzZj/ZfRkftuS
DVl4PPOFDyTztzM8S/GRl1lKlajFrJ3nr3spvtLOx/mqP42XMwRfoaZVCp/D
FAnsjHbIYqsmuUz4RMlfSU/mty3ZkIVXTTLjt5M5S6kStZi189y5qezJO3Tm
MPJ48BUK2mmuBHZG27/Ssf1nosyvpDPte5ZsyF6tnWTGz+f5LP2aM1GLWTjP
PfvKtrxJZ/Yaytc/G2fm+iI6Q31m65afOtMQD21GbYPhgWXWv1ebZ5jr8xmV
pZ5n82dpPaum+uui4rvrbIDN2aMzb/HMNwxTyjYT5bAn1P41jtr8o+KhwcAO
Njy2tF7/dgqzpapFtt2VM0tLWjLV5RVdLrnzcc481o2DI5Wy30Q57Am1c43D
UzRLzleSbQ/MIlve0rasnqj2ydKSPgdvRzTA5XLKS+58nK8601WV8OBgdew3
UQ57Qu1Z4/D8TJTzZfQnfNuS9az6jqTl/HyGdJjygOZ48mRpVZ+DtyPqFVzL
2bDOx/mqM121jyviYybqHs2h9iwwuA/bgkme8GUMSfieVRvy7RSe7fmW8xSi
J6pgh1kgSwtbL+HB5ZwN63yco85ENaRaER8zUQ6be13zGqs2YUMw+XO+gMts
azUFPQu/fHCZb6e/w1xuzuYspUrUqtZLeHA5Z8M6H+eHYC/tfLxQxJ7JuTTR
h9DW65o7ZNUODM7cHAxtRrWRPavWvOpPpYY5mxZ0l7bAdsvSwtZLe3A5Z8M6
H+dvl1m6zGHw8eOA+KtVsNlcOWzrdW1r/NSrnTAeDM1GVXDPqvl2IpJk6Thn
x5qos2TmL1dUHhBJyGIZu0Nni7gcXDVD4bdjV72M+CcwSxrbAm5b49V+/76l
47PFI6FNbQULRdm2cG2rHpj5r7P1rWm8tth2y9Lalkz+5aLivz0OWDJjw/W3
iM7HjzNc/py/FZIczH82DTG3rbFq65YnnzTVCxhVxG3L17zqIWn/Ok/3mm7x
QKJq5+lYDS1WLUHn/hyyvXcWTOBZJjsfj89zcxom1p/8bBrCbl5mPHuFyedN
9QKGVPBXxxaa3eurnuXbeT3CWRK1sFVbfU/njMzwzCrmFcl/IZlVj5fLoYht
OtOeUEPwr6/09QA21/8VzPu9LEDamcLUB+ul/itE84Mc1Sbwz/jjU+r4mJ7P
J5U1VgHAShxMwA7cwwHIxsEE7MA9HIBsnE3ADjQ6ALJxDwd2oNcBkI2zCdiB
XgdANs4mYAd6HQDZOJuAHWh0AGTjHg7sQKMDIBv3cGAHGh0A2TibgB3odQBk
42wCdqDXAZCNswnYgV4HQDb+fjiwA70OgGycTcAO9DoAsnE2ATvQ6ADIxj0c
2IFeB0A2DiZgB3odANk4m4Ad6HUAZOM/qwV2oNEBkI17OLADjQ6AbNzDgR1o
dABk4x4O7ECjAyAb93BgBxodANm4hwM70OgAyMY9HNiBRgdANs4mYAd6HQDZ
OJuAHeh1AGTjbAJ2oNcBkI2/Hw7sQKMDIBv3cGAHGh0A2TibgB3odQBk42wC
dqDXAZCNswnYgV4HQDb+fjiwA40OgGzcw4EdaHQAZOMeDuxArwMgG2cTsAO9
DoBsnE3ADvQ6ALJxNgE70OsAyMbZBOxgvUa3xioAduYeDmwiW6NrCOPYsZuX
kyoVAHtyDwc2kafRtUVydgmvnUrP50nD91j/1l115y+5qOW5hwM7SNLomu/P
l5fwyFTNb4dabVu0atr+qDqDyWBsnlfKTIPONLY9qycDO3i90Z0dl5FgCuPj
U/UEwHBrZ76w2ZpX3TnPkjt/YJ7XyMzY7RGfqqcE621LgKN3G13nWVkeH5mw
85ShTTntq2b+ctW1a+9P3ZLJH5jkBZIzfIPFZ+uswgLJv09nbklF4Tb37vfb
2UYux1cN0Mces+Ehcrnkns3fkLRV015YUdViF9iZnUs4eyo429nb48FMnfxb
dSaWVBSO17/fv19aG8bl+OETMsSGh0hhgQ3L78zYwgkvLyq45AV2ZmEJDRus
POByhtpnz5ZwGfYmysWVqykoHH+k2gO1kfScBZfjX8/GwnY7RKo2ann5Q3K1
cLaH9ITZd2b/99WZxsvXtVXhMuxNXNZXrpJTOP6WbQ9URXIZee3SUqViYbsl
ObLe4N7r/GCXb/uX62pY+6Tp+jva4Z2wvIs6H/86Zq7k3+qYGVmaiPLxQ7Y9
UBVMOfiGpaVKxcJ2y3BkU0X2Xv/Xmu17H+umHC6QseFLLqQxkuGGMfMmfzgJ
md2P8tnkm0vV6GqDOTbqP0+1rStVNha2W3oj6629ljSHsfD2jqyuIQkLJG34
kgtpDGa49hXzJn842ViMTb65VI2u84g8c2sA1JLer2qvJXe8YnbBBfY0mUGR
Pq2zr1ZNGNyotRt+3uQPJxuLsck3l6rRtQVzbNfNK0qVjVVJ79Hlxvu6sav2
auHTWKYWwYTUfuML9ISeJX/dMIUJLzdzcFghgM3JxmJs8s2lanTNkXw9Nfrn
qXqWoFHFWsllHgpJCyawf4b8gmupXe8C+WlYQvOGaahCZJ55kz/c3wmRnAXY
5JtL1evawmg4KYJT1a+AawPrtYbI8i+Tdpm9/hmmUJuKUXMm17aEtq3SNqxh
wJ4aKkJyKri5VB9yQxjlptQ5W+s6KBlYrzVE1h7c52czlEeulP/aVNTOOTre
h7QtoWGnfX2wbcxK23Kgy6JI1HTUbnOpPuHaMM4ib25NeVKxsMg5sk/yg6su
D7vMXiS9y+Q/uMHiy1wgLW1L6ElgYWRwnrZiLS9SFLmai8JtLtXHWxVMbRsf
HgBtviZ5z3MkvuTa3f5jTORFK+X/mI0ztbPdHflNGpbQmcB4Cc7maSvW8npS
Sk6qtrlUX25VJJHBtUtLlY2FneV2q/zHFxs8YQtjOh+f0TFpwTSWp7o15vuM
WnVVGiMlKEzSXK/lfc2GdM1L1TaX6uOtiiQ4smpdeVKxp1S78Va1y4yML4wJ
vm695P9YS9sCF8hJ7RLKifocxKf6qiEGvpKxGanaKJMmsKqjPhxMfHBkWG0A
FXEzTp7deKvaNXbeW4JZXT75bQtcICdVS+jcbLXx3PSKbUnadJSs39Q5TNXr
qoIJjqxaWp5UbCvVhrxD2wIjTxXGBF+6VfLvfiqVqiUEBzenpW03zpv8h8nY
dJSsxwKNIlv89x0WVW/PkIo9ZduQw12u7uuvImkpjAlmde3kN69ugZxULSE4
uDktbbtx3uQ/TMamo2Rtji1i0hxmW0LbYXE2vnZdefKwrVS7cbjI0r7+tna3
l2eIhLdY8j8Hbc/eF+GtqpYQH9yWluD8PSXbmYxNR8naHFvEpDlMtYTaSMrj
G9aVJxXbWrgEkXX1bOb+z2HV5H8Omh+/KcK7VS0hOLgtLfFCdFZtWzI2HSVr
cOwP8+bw9fgLybyMKvLskBnuWTpfrJr2+F49W3t5QO0MtfPPq/9zXiAtVUsI
Dm5IS1Uh+gu3J+majk3e5u+MTZ3D1xvdsdl+9e7jM1Z2UqvmPL7TCmsvjOl8
PDjDdPo/5P4ZXlcbf/9euhx/0yP8cg+fkE3eb+ocvt7ojs32q+ZJngmAoHI+
V014cI9dLr9/r/bPMIueda2RpZ4lnA1ry0Nb6qZL+AOqCvdkYPRQtX5T94qp
gz9aYxWrKhysa5+5x9Vd6pmqM5IbEvC0zkX1l+l1/UsYkoGepE2U7ccUEiJX
c+n/uPjb1HlTdx4T6TxL7sP4wiPL70zdDpkfsqLOMr3rMvjIEu54vGcJ8WdX
NaSsvC5YR6WMmzppis6TdJ5ROpO2dtqXXNRbmj9SW3S4SP+UqPzUcbip86bu
PEzbAS7pD2e0UPhh6q/AVwxANi6Zl2QGfpu6UYztdTNmAIBs3MOBoKkbRUOv
Oz5y6YGFALAM5wgQNHWjeOse3jDJQE9GMqxU3EbV7uBjoYftAQTN2yjajsL+
47VhhnndUzrGeKCgw3fUw57MbcPrxi62U3OuHjZ8sXesfd70Ag+bt1EMPFOq
HhlyCtxkSIR1ZVjRwFpkC/KBV2QjvUFtiRro7QSMcbaWd3M7xNdFff3Xhcyc
zXb2ivXS+KLL9D7j7TSkM29y1Jo7zNJtHghpYCpe9GTOh0/4pIGJavN2AsY4
W8u7ue33fCbPvJ2JKb1dtH/j7WSkM29yFJo7LNBtUgXzVVsyvy4kW/Lp0fxZ
xffPrQrxPJTBezyQuri3kzGlt4v2b7ydjHSmTo4SA5DNhgdTZJmfw19lORsD
+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
AAAAAAAAAAAAAAAAAAAAAAAAAADS+v8AKIKfQA==
    "], {{0, 924}, {984, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{321.69999999999914`, Automatic},
  ImageSizeRaw->{984, 924},
  PlotRange->{{0, 984}, {0, 924}}]], "Input"]], "Text",
 CellChangeTimes->{
  3.749145095523737*^9, {3.749391901425003*^9, 3.7493919081954155`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cppClassName", "=", "\"\<RK5DP_6M\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methodName", "=", "\"\<RK5(4)6M\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "methodDescription", "=", 
   "\"\<Runge-Kutta, Dormand and Prince method, variant 3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pOrder", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "5"], "0", "0", "0", "0"},
       {
        FractionBox["3", "40"], 
        FractionBox["9", "40"], "0", "0", "0"},
       {
        FractionBox["3", "10"], 
        RowBox[{"-", 
         FractionBox["9", "10"]}], 
        FractionBox["6", "5"], "0", "0"},
       {
        FractionBox["226", "729"], 
        RowBox[{"-", 
         FractionBox["25", "27"]}], 
        FractionBox["880", "729"], 
        FractionBox["55", "729"], "0"},
       {
        RowBox[{"-", 
         FractionBox["181", "270"]}], 
        FractionBox["5", "2"], 
        RowBox[{"-", 
         FractionBox["266", "297"]}], 
        RowBox[{"-", 
         FractionBox["91", "27"]}], 
        FractionBox["189", "55"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[DoubleStruckB]1", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["19", "216"], ",", "0", ",", 
     FractionBox["1000", "2079"], ",", 
     RowBox[{"-", 
      FractionBox["125", "216"]}], ",", 
     FractionBox["81", "88"], ",", 
     FractionBox["5", "56"]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckB]2", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["31", "540"], ",", "0", ",", 
      FractionBox["190", "297"], ",", 
      RowBox[{"-", 
       FractionBox["145", "108"]}], ",", 
      FractionBox["351", "220"], ",", 
      FractionBox["1", "20"]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
   "\"\<MoL descriptors (generator).nb\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7490592905773544`*^9, 3.7490593213562083`*^9}, {
   3.7490594556734447`*^9, 3.749059548353207*^9}, {3.7490596363597617`*^9, 
   3.7490596538941927`*^9}, {3.749059872077176*^9, 3.7490599655493402`*^9}, {
   3.749060093032764*^9, 3.7490601069635887`*^9}, {3.74906022163939*^9, 
   3.749060224774996*^9}, {3.749060355986826*^9, 3.7490603616808357`*^9}, {
   3.7490611764556675`*^9, 3.749061192305295*^9}, 3.7490614937612247`*^9, 
   3.7490616178146424`*^9, {3.749062495301584*^9, 3.749062549246478*^9}, 
   3.7490628009217205`*^9, {3.7490631811889887`*^9, 3.7490631823589907`*^9}, {
   3.7490632449463005`*^9, 3.7490632453831015`*^9}, {3.7490943847911716`*^9, 
   3.7490943856959734`*^9}, {3.749145162759855*^9, 3.749145333174554*^9}, 
   3.7491461752640333`*^9, {3.749391320489483*^9, 3.7493913243270893`*^9}, {
   3.749391778468787*^9, 3.749391780574791*^9}, {3.7493919175398316`*^9, 
   3.749392129092803*^9}, 3.7493926782922688`*^9, {3.7493927107247252`*^9, 
   3.7493927147495327`*^9}, {3.749438131421957*^9, 3.749438169548424*^9}, {
   3.749439485762536*^9, 3.7494394860901375`*^9}, {3.7494401745563498`*^9, 
   3.749440176428353*^9}, {3.749440388715926*^9, 3.749440390525529*^9}, {
   3.7495325546523323`*^9, 3.7495325549643326`*^9}, {3.7495327109022064`*^9, 
   3.7495327119474087`*^9}}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"The two choices of \[Alpha] and \[Beta]:\"\>", TextForm]], 
    "InlineText"],
   Text["The two choices of \[Alpha] and \[Beta]:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.768641418165017*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1.`29.69897000433602", "0", "0", "0", "0", "0", "1.`29.69897000433602", 
     "0", "0", "0", "0", "0"},
    {"0.625`29.69897000433602", "0.375`29.69897000433602", "0", "0", "0", "0",
      "0.625`29.69897000433602", "0.375`29.69897000433602", "0", "0", "0", 
     "0"},
    {"2.`29.69897000433602", "3.`29.69897000433602", 
     RowBox[{"-", "4.`29.69897000433602"}], "0", "0", "0", 
     "2.`29.69897000433602", "3.`29.69897000433602", 
     RowBox[{"-", "4.`29.69897000433602"}], "0", "0", "0"},
    {"0.010059442158207590306355738454503886602652034750800182899`29.\
69897000433602", 
     "0.0754458161865569272976680384087791495198902606310013717422`29.\
69897000433602", 
     RowBox[{
     "-", "0.0914494741655235482395976223136716963877457704618198445359`29.\
69897000433602"}], 
     "1.0059442158207590306355738454503886602652034750800182898948`29.\
69897000433602", "0", "0", 
     "0.010059442158207590306355738454503886602652034750800182899`29.\
69897000433602", 
     "0.0754458161865569272976680384087791495198902606310013717422`29.\
69897000433602", 
     RowBox[{
     "-", "0.0914494741655235482395976223136716963877457704618198445359`29.\
69897000433602"}], 
     "1.0059442158207590306355738454503886602652034750800182898948`29.\
69897000433602", "0", "0"},
    {
     RowBox[{
     "-", "0.6505050505050505050505050505050505050505050505050505050504`29.\
69897000433602"}], 
     RowBox[{
     "-", "1.9090909090909090909090909090909090909090909090909090909091`29.\
69897000433602"}], 
     "4.0404040404040404040404040404040404040404040404040404040403`29.\
69897000433602", 
     "44.19191919191919191919191919191919191919`29.69897000433602", 
     RowBox[{
     "-", "44.67272727272727272727272727272727272727`29.69897000433602"}], 
     "0", 
     RowBox[{
     "-", "0.6505050505050505050505050505050505050505050505050505050504`29.\
69897000433602"}], 
     RowBox[{
     "-", "1.9090909090909090909090909090909090909090909090909090909091`29.\
69897000433602"}], 
     "4.0404040404040404040404040404040404040404040404040404040403`29.\
69897000433602", 
     "44.19191919191919191919191919191919191919`29.69897000433602", 
     RowBox[{
     "-", "44.67272727272727272727272727272727272727`29.69897000433602"}], 
     "0"},
    {"0.009920634920634920634920634920634920634920634920634920635`29.\
69897000433602", 
     "0.3273809523809523809523809523809523809523809523809523809524`29.\
69897000433602", 
     RowBox[{
     "-", "0.1803751803751803751803751803751803751803751803751803751804`29.\
69897000433602"}], 
     RowBox[{
     "-", "3.7202380952380952380952380952380952380952380952380952380952`29.\
69897000433602"}], 
     "4.2954545454545454545454545454545454545454545454545454545454`29.\
69897000433602", 
     "0.2678571428571428571428571428571428571428571428571428571428`29.\
69897000433602", 
     "0.1277777777777777777777777777777777777777777777777777777777`29.\
69897000433602", 
     "0.9166666666666666666666666666666666666666666666666666666667`29.\
69897000433602", 
     RowBox[{
     "-", "1.3708513708513708513708513708513708513708513708513708513709`29.\
69897000433602"}], 
     RowBox[{
     "-", "2.0833333333333333333333333333333333333333333333333333333333`29.\
69897000433602"}], 
     "2.9454545454545454545454545454545454545454545454545454545455`29.\
69897000433602", 
     "0.4642857142857142857142857142857142857142857142857142857143`29.\
69897000433602"},
    {"0.2`29.69897000433602", 
     "0.2250000000000000000000000000000000000000000000000000000001`29.\
69897000433602", "1.2`29.69897000433602", 
     "0.0754458161865569272976680384087791495198902606310013717422`29.\
69897000433602", 
     "3.4363636363636363636363636363636363636363636363636363636363`29.\
69897000433602", 
     "0.0892857142857142857142857142857142857142857142857142857143`29.\
69897000433602", "0.2`29.69897000433602", 
     "0.2250000000000000000000000000000000000000000000000000000001`29.\
69897000433602", "1.2`29.69897000433602", 
     "0.0754458161865569272976680384087791495198902606310013717422`29.\
69897000433602", 
     "3.4363636363636363636363636363636363636363636363636363636363`29.\
69897000433602", "0.05`29.69897000433602"}
   },
   AutoDelete->False,
   GridBoxDividers->{"ColumnsIndexed" -> {1 -> GrayLevel[0], 7 -> {
         GrayLevel[0], 
         Thickness[Large]}, -1 -> GrayLevel[0]}, 
     "RowsIndexed" -> {1 -> GrayLevel[0], -2 -> {
         Thickness[Large], 
         RGBColor[1, 0, 0]}, -1 -> GrayLevel[0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7686414182118173`*^9}],

Cell[BoxData[
 FrameBox["\<\"MoLDescriptor RK5DP_6M = \\n{\\n    \\\"RK5(4)6M\\\", 6, 5,\\n \
   { { 1.00000000000000000000000000000, 0., 0., 0., 0., 0.},\\n      { \
0.62500000000000000000000000000, 0.375000000000000000000000000000, 0., 0., \
0., 0.},\\n      { 2.00000000000000000000000000000, \
3.00000000000000000000000000000, -4.00000000000000000000000000000, 0., 0., \
0.},\\n      { 0.0100594421582075903063557384545, \
0.075445816186556927297668038409, -0.091449474165523548239597622314, \
1.00594421582075903063557384545, 0., 0.},\\n      { \
-0.65050505050505050505050505051, -1.90909090909090909090909090909, \
4.04040404040404040404040404040, 44.1919191919191919191919191919, \
-44.6727272727272727272727272727, 0.},\\n      { \
0.0099206349206349206349206349206, 0.327380952380952380952380952381, \
-0.180375180375180375180375180375, -3.72023809523809523809523809524, \
4.29545454545454545454545454545, 0.267857142857142857142857142857 },\\n      \
// Alternative alpha[N-1]:\\n      { 0.127777777777777777777777777778, \
0.91666666666666666666666666667, -1.37085137085137085137085137085, \
-2.08333333333333333333333333333, 2.94545454545454545454545454545, \
0.464285714285714285714285714286}\\n    },\\n    { \
0.200000000000000000000000000000, 0.225000000000000000000000000000, \
1.20000000000000000000000000000, 0.075445816186556927297668038409, \
3.43636363636363636363636363636, 0.089285714285714285714285714286},\\n    // \
Alternative beta:\\n    { 0.200000000000000000000000000000, \
0.225000000000000000000000000000, 1.20000000000000000000000000000, \
0.075445816186556927297668038409, 3.43636363636363636363636363636, \
0.050000000000000000000000000000}\\n};\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.768641418274217*^9}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Sanity check:\"\>", TextForm]], "InlineText"],
   Text["Sanity check:"]],
  StripOnInput->False,
  FontSize->16]], "Output",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.7686414183990173`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.3752123979594283756964046259230605172772824563175352044161`30.", 
     "0.3664701587428815776948588885938878040604238505165866160748`30.\
02107782204511"},
    {"0.428998499084632618478687569491518352398966628590074076919`29.\
50592387347902", 
     "0.4159602634895101329894034330019576920810806825848289444316`29.\
978849941450136"},
    {"0.464063060149471974169664149536462736230026317563306470686`29.\
380100196359002", 
     "0.4475851476987114003591069142589116233340402038593974902872`29.\
95482622855736"},
    {"0.57531517929608140546553571773108933139`28.526819273719738", 
     "0.5440992597066904669134063626637552613937238126377890537218`29.\
526932212333634"},
    {"0.60256136968860408226875078993175745556`28.45709600412277", 
     "0.5667546085106414773947875495245649761180075632163901353389`29.\
520826381264243"},
    {"0.74735836923975614673167712419231630503`26.706850857869696", 
     "0.6797035321394933169998677202351622249305176616697699050163`28.\
82096337748928"},
    {"0.75314878304401028543463903562830107337`27.096842196967003", 
     "0.7531487830440102854346390356283010733878483319675725780179`29.\
28289019958152"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.768641418508217*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``27.21714092351435", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7686414185394173`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.3752123979594283756964046259230605172772824563175352044161`30.", 
     "0.3664701587428815776948588885938878040604238505165866160748`30.\
02107782204511"},
    {"0.428998499084632618478687569491518352398966628590074076919`29.\
50592387347902", 
     "0.4159602634895101329894034330019576920810806825848289444316`29.\
978849941450136"},
    {"0.464063060149471974169664149536462736230026317563306470686`29.\
380100196359002", 
     "0.4475851476987114003591069142589116233340402038593974902872`29.\
95482622855736"},
    {"0.57531517929608140546553571773108933139`28.526819273719738", 
     "0.5440992597066904669134063626637552613937238126377890537218`29.\
526932212333634"},
    {"0.60256136968860408226875078993175745556`28.45709600412277", 
     "0.5667546085106414773947875495245649761180075632163901353389`29.\
520826381264243"},
    {"0.74735836923975614673167712419231630503`26.706850857869696", 
     "0.6797035321394933169998677202351622249305176616697699050163`28.\
82096337748928"},
    {"0.75320228386644496805093211867700648115`26.95579052462886", 
     "0.7532022838664449680509321186770064811657204264458228766949`29.\
095641468940695"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7686414186330175`*^9}],

Cell[BoxData[
 TemplateBox[{
  "\"Difference: \"",FrameBox["0``27.07574298009033", StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.768641418664217*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate C++ file with the MoL descriptors", "Subsubsection",
 CellChangeTimes->{{3.749145577860984*^9, 3.749145580450588*^9}, {
  3.749145629185074*^9, 3.749145633958682*^9}, {3.749146187837655*^9, 
  3.74914619063006*^9}, {3.7493918014164276`*^9, 3.7493918110260444`*^9}, {
  3.749392199359627*^9, 3.749392211231248*^9}, {3.7493938011588097`*^9, 
  3.749393803420814*^9}, {3.74939388651896*^9, 3.7493938878761625`*^9}, {
  3.749439727455762*^9, 3.7494397502474017`*^9}, {3.7494399871816177`*^9, 
  3.749439992485627*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<../include/numMethods/embeddedMoL.h\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "\"\</**\n *  @file      embeddedMoL.h\n *  @brief     Descriptors for \
embedded methods which allow adaptive stepsize control.\n *  @warning   This \
file was auto-generated from Mathematica. Do not edit.\n *  @authors   Mikica \
Kocic, Francesco Torsello\n *  @copyright GNU General Public License (GPLv3).\
\n */\n\n#ifndef _EMBEDDED_MOL_H_INCLUDED\n#define _EMBEDDED_MOL_H_INCLUDED\n\
\>\"", "<>", "cppCode", "<>", 
    "\"\<\n#endif // _EMBEDDED_MOL_H_INCLUDED\n\>\""}], ",", "\"\<Text\>\""}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7494397548962097`*^9, 3.7494398879654436`*^9}, {
   3.749439974826396*^9, 3.749439979880805*^9}, {3.7494825329806223`*^9, 
   3.749482594702731*^9}, 3.749482671439266*^9, {3.7495265181254516`*^9, 
   3.749526561743128*^9}, {3.749526628230445*^9, 3.749526742391445*^9}, 
   3.7495267733886995`*^9, {3.749962507181816*^9, 3.7499625574919047`*^9}, {
   3.7499626770073147`*^9, 3.7499626911097393`*^9}, {3.749962788517311*^9, 
   3.749962867034249*^9}, {3.7499630284945326`*^9, 3.7499630932970467`*^9}, {
   3.74998118484624*^9, 3.7499811909926405`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\Francesco\\\\Dropbox\\\\Dottorato\\\\\
Research\\\\3+1_Numerical_bimetric_relativity\\\\BSSN_formalism\\\\C++\\\\\
bimetric-ss-20181026\\\\bim-solver\\\\algorithms\\\\../include/numMethods/\
embeddedMoL.h\"\>"], "Output",
 CellChangeTimes->{
  3.749532846918845*^9, 3.749962602033583*^9, {3.749962682623325*^9, 
   3.749962691858541*^9}, 3.74996286765825*^9, {3.7499630534545765`*^9, 
   3.7499630939990473`*^9}, 3.768641418929417*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1200, 1878},
WindowMargins->{{Automatic, 1072}, {Automatic, -8}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Section"], FontFamily -> "Arial", FontSize -> 28, FontWeight -> 
    "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsection"], CellMargins -> {{35, 3.}, {8., 12.}}, FontFamily -> 
    "Arial", FontSize -> 20, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubsection"], CellMargins -> {{40, Inherited}, {2, 10}}, 
    FontFamily -> "Arial", FontSize -> 19, FontWeight -> "Plain", FontSlant -> 
    "Plain", FontVariations -> {
     "StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Text"], CellMargins -> {{40, 10}, {7, 7}}, FontFamily -> 
    "Cambria", FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemParagraph"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubitemParagraph"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemParagraph"], FontFamily -> "Cambria", FontSize -> 14,
     FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubitemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemNumbered"], FontFamily -> "Cambria", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["mk-test"], CellFrame -> {{0.3, 0}, {0, 0.3}}, PageBreakBelow -> 
    False, CellChangeTimes -> {3.704299599624503*^9}, MenuSortingValue -> 
    10000, FontFamily -> "Cambria", FontSize -> 14, FontWeight -> "Plain", 
    FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}]}, 
  Visible -> False, FrontEndVersion -> 
  "11.0 for Microsoft Windows (64-bit) (September 21, 2016)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 207, 4, 53, "Text"],
Cell[768, 26, 28, 0, 38, "Text"],
Cell[799, 28, 104, 1, 38, "Text"],
Cell[906, 31, 585, 15, 41, "Text"],
Cell[CellGroupData[{
Cell[1516, 50, 228, 3, 78, "Section"],
Cell[CellGroupData[{
Cell[1769, 57, 502, 18, 48, "Subsubsection"],
Cell[2274, 77, 1759, 40, 39, "Text"],
Cell[4036, 119, 201, 5, 37, "Input"],
Cell[4240, 126, 983, 28, 40, "Input"],
Cell[5226, 156, 97, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[5348, 161, 896, 21, 37, "Input"],
Cell[CellGroupData[{
Cell[6269, 186, 2951, 93, 54, "Echo"],
Cell[9223, 281, 2913, 93, 54, "Echo"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12197, 381, 591, 18, 45, "Subsubsection"],
Cell[12791, 401, 105, 1, 38, "Text"],
Cell[12899, 404, 725, 19, 40, "Input"],
Cell[13627, 425, 343, 11, 39, "Text"],
Cell[13973, 438, 445, 13, 41, "Input"],
Cell[14421, 453, 99, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[14545, 458, 530, 13, 62, "Input"],
Cell[CellGroupData[{
Cell[15100, 475, 87, 2, 30, "Echo"],
Cell[15190, 479, 218, 7, 30, "Echo"],
Cell[15411, 488, 332, 11, 30, "Echo"],
Cell[15746, 501, 442, 15, 30, "Echo"],
Cell[16191, 518, 456, 15, 30, "Echo"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16708, 540, 514, 17, 45, "Subsubsection"],
Cell[17225, 559, 2840, 67, 240, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20102, 631, 649, 24, 49, "Subsubsection"],
Cell[20754, 657, 2294, 57, 190, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23085, 719, 397, 12, 45, "Subsubsection"],
Cell[23485, 733, 3774, 89, 343, "Input"],
Cell[CellGroupData[{
Cell[27284, 826, 329, 7, 37, "Input"],
Cell[CellGroupData[{
Cell[27638, 837, 212, 6, 30, "Echo"],
Cell[27853, 845, 212, 6, 30, "Echo"],
Cell[28068, 853, 212, 6, 30, "Echo"],
Cell[28283, 861, 191, 5, 30, "Echo"],
Cell[28477, 868, 166, 4, 30, "Echo"],
Cell[28646, 874, 359, 11, 48, "Echo"],
Cell[29008, 887, 313, 10, 48, "Echo"],
Cell[29324, 899, 862, 28, 92, "Echo"],
Cell[30189, 929, 649, 22, 48, "Echo"],
Cell[30841, 953, 309, 10, 48, "Echo"],
Cell[31153, 965, 1936, 64, 135, "Echo"],
Cell[33092, 1031, 1305, 44, 92, "Echo"],
Cell[34400, 1077, 599, 20, 48, "Echo"],
Cell[35002, 1099, 287, 9, 47, "Echo"],
Cell[35292, 1110, 156, 4, 30, "Echo"]
}, Open  ]]
}, Open  ]],
Cell[35475, 1118, 127, 1, 38, "Text"],
Cell[35605, 1121, 1510, 39, 86, "Input"],
Cell[37118, 1162, 1014, 28, 86, "Input"],
Cell[38135, 1192, 1336, 28, 182, "Input"],
Cell[39474, 1222, 2799, 49, 254, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42322, 1277, 146, 2, 78, "Section"],
Cell[42471, 1281, 1432, 36, 101, "Input"],
Cell[CellGroupData[{
Cell[43928, 1321, 1329, 29, 90, "Input"],
Cell[45260, 1352, 2122, 57, 143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47419, 1414, 1301, 31, 88, "Input"],
Cell[48723, 1447, 1243, 31, 114, "Output"],
Cell[49969, 1480, 403, 9, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50409, 1494, 491, 9, 37, "Input"],
Cell[50903, 1505, 778, 12, 315, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51730, 1523, 539, 7, 78, "Section"],
Cell[52272, 1532, 147, 2, 38, "Text"],
Cell[52422, 1536, 249, 5, 38, "Text"],
Cell[52674, 1543, 287, 6, 63, "Text"],
Cell[52964, 1551, 361, 6, 63, "Text"],
Cell[53328, 1559, 181, 4, 38, "Text"],
Cell[53512, 1565, 148, 3, 37, "Input"],
Cell[CellGroupData[{
Cell[53685, 1572, 331, 4, 42, "Subsubsection"],
Cell[54019, 1578, 4332, 100, 394, "Input"],
Cell[CellGroupData[{
Cell[58376, 1682, 1645, 24, 37, "Input"],
Cell[60024, 1708, 360, 9, 44, "Output"],
Cell[60387, 1719, 4773, 110, 1047, "Output"],
Cell[65163, 1831, 1726, 27, 873, "Output"],
Cell[66892, 1860, 299, 8, 55, "Output"],
Cell[67194, 1870, 1710, 38, 200, "Output"],
Cell[68907, 1910, 178, 4, 63, "Output"],
Cell[69088, 1916, 1708, 38, 200, "Output"],
Cell[70799, 1956, 177, 4, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71025, 1966, 435, 5, 52, "Subsubsection"],
Cell[71463, 1973, 3255, 92, 535, "Input"],
Cell[CellGroupData[{
Cell[74743, 2069, 1645, 24, 46, "Input"],
Cell[76391, 2095, 360, 9, 55, "Output"],
Cell[76754, 2106, 6092, 142, 3441, "Output"],
Cell[82849, 2250, 1927, 29, 813, "Output"],
Cell[84779, 2281, 299, 8, 55, "Output"],
Cell[85081, 2291, 1866, 41, 226, "Output"],
Cell[86950, 2334, 177, 4, 63, "Output"],
Cell[87130, 2340, 1865, 41, 226, "Output"],
Cell[88998, 2383, 177, 4, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89224, 2393, 307, 4, 52, "Subsubsection"],
Cell[89534, 2399, 47381, 781, 463, "Text"],
Cell[CellGroupData[{
Cell[136940, 3184, 4434, 110, 597, "Input"],
Cell[141377, 3296, 360, 9, 55, "Output"],
Cell[141740, 3307, 6092, 142, 2421, "Output"],
Cell[147835, 3451, 1931, 29, 813, "Output"],
Cell[149769, 3482, 299, 8, 55, "Output"],
Cell[150071, 3492, 1865, 41, 226, "Output"],
Cell[151939, 3535, 178, 4, 63, "Output"],
Cell[152120, 3541, 1866, 41, 226, "Output"],
Cell[153989, 3584, 178, 4, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154216, 3594, 340, 4, 52, "Subsubsection"],
Cell[154559, 3600, 36290, 599, 541, "Text"],
Cell[CellGroupData[{
Cell[190874, 4203, 4290, 109, 597, "Input"],
Cell[195167, 4314, 360, 9, 55, "Output"],
Cell[195530, 4325, 5497, 122, 2391, "Output"],
Cell[201030, 4449, 1929, 29, 813, "Output"],
Cell[202962, 4480, 299, 8, 55, "Output"],
Cell[203264, 4490, 1912, 43, 226, "Output"],
Cell[205179, 4535, 178, 4, 63, "Output"],
Cell[205360, 4541, 1912, 43, 226, "Output"],
Cell[207275, 4586, 179, 4, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[207503, 4596, 422, 5, 52, "Subsubsection"],
Cell[207928, 4603, 31405, 519, 493, "Text"],
Cell[CellGroupData[{
Cell[239358, 5126, 3955, 99, 555, "Input"],
Cell[243316, 5227, 358, 9, 55, "Output"],
Cell[243677, 5238, 4650, 107, 1338, "Output"],
Cell[248330, 5347, 1765, 27, 723, "Output"],
Cell[250098, 5376, 301, 8, 55, "Output"],
Cell[250402, 5386, 1705, 38, 200, "Output"],
Cell[252110, 5426, 179, 4, 63, "Output"],
Cell[252292, 5432, 1707, 38, 200, "Output"],
Cell[254002, 5472, 177, 4, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[254228, 5482, 529, 7, 52, "Subsubsection"],
Cell[CellGroupData[{
Cell[254782, 5493, 1307, 23, 437, "Input"],
Cell[256092, 5518, 468, 7, 77, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

